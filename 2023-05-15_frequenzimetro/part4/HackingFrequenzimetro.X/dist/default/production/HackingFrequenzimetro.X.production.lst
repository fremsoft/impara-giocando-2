

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Mon Jun 19 16:26:57 2023

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	16F628A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     6                           	psect	clrtext,global,class=CODE,delta=2
     7                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	maintext,global,class=CODE,split=1,delta=2
    10                           	psect	text1,local,class=CODE,merge=1,delta=2
    11                           	psect	text2,local,class=CODE,merge=1,delta=2
    12                           	psect	text3,local,class=CODE,merge=1,delta=2
    13                           	psect	text4,local,class=CODE,merge=1,delta=2,group=1
    14                           	psect	text5,local,class=CODE,merge=1,delta=2,group=1
    15                           	psect	text6,local,class=CODE,merge=1,delta=2
    16                           	psect	intentry,global,class=CODE,delta=2
    17                           	psect	text7,local,class=CODE,merge=1,delta=2,group=1
    18                           	psect	text8,local,class=CODE,merge=1,delta=2,group=1
    19                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    20                           	dabs	1,0x7E,2
    21  0000                     
    22                           ; Version 2.20
    23                           ; Generated 12/02/2020 GMT
    24                           ; 
    25                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    26                           ; All rights reserved.
    27                           ; 
    28                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    29                           ; 
    30                           ; Redistribution and use in source and binary forms, with or without modification, are
    31                           ; permitted provided that the following conditions are met:
    32                           ; 
    33                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    34                           ;        conditions and the following disclaimer.
    35                           ; 
    36                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    37                           ;        of conditions and the following disclaimer in the documentation and/or other
    38                           ;        materials provided with the distribution.
    39                           ; 
    40                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    41                           ;        software without specific prior written permission.
    42                           ; 
    43                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    44                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    45                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    46                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    47                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    48                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    49                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    50                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    51                           ; 
    52                           ; 
    53                           ; Code-generator required, PIC16F628A Definitions
    54                           ; 
    55                           ; SFR Addresses
    56  0000                     	;# 
    57  0001                     	;# 
    58  0002                     	;# 
    59  0003                     	;# 
    60  0004                     	;# 
    61  0005                     	;# 
    62  0006                     	;# 
    63  000A                     	;# 
    64  000B                     	;# 
    65  000C                     	;# 
    66  000E                     	;# 
    67  000E                     	;# 
    68  000F                     	;# 
    69  0010                     	;# 
    70  0011                     	;# 
    71  0012                     	;# 
    72  0015                     	;# 
    73  0015                     	;# 
    74  0016                     	;# 
    75  0017                     	;# 
    76  0018                     	;# 
    77  0019                     	;# 
    78  001A                     	;# 
    79  001F                     	;# 
    80  0081                     	;# 
    81  0085                     	;# 
    82  0086                     	;# 
    83  008C                     	;# 
    84  008E                     	;# 
    85  0092                     	;# 
    86  0098                     	;# 
    87  0099                     	;# 
    88  009A                     	;# 
    89  009B                     	;# 
    90  009C                     	;# 
    91  009D                     	;# 
    92  009F                     	;# 
    93  0000                     	;# 
    94  0001                     	;# 
    95  0002                     	;# 
    96  0003                     	;# 
    97  0004                     	;# 
    98  0005                     	;# 
    99  0006                     	;# 
   100  000A                     	;# 
   101  000B                     	;# 
   102  000C                     	;# 
   103  000E                     	;# 
   104  000E                     	;# 
   105  000F                     	;# 
   106  0010                     	;# 
   107  0011                     	;# 
   108  0012                     	;# 
   109  0015                     	;# 
   110  0015                     	;# 
   111  0016                     	;# 
   112  0017                     	;# 
   113  0018                     	;# 
   114  0019                     	;# 
   115  001A                     	;# 
   116  001F                     	;# 
   117  0081                     	;# 
   118  0085                     	;# 
   119  0086                     	;# 
   120  008C                     	;# 
   121  008E                     	;# 
   122  0092                     	;# 
   123  0098                     	;# 
   124  0099                     	;# 
   125  009A                     	;# 
   126  009B                     	;# 
   127  009C                     	;# 
   128  009D                     	;# 
   129  009F                     	;# 
   130  0012                     _T2CONbits	set	18
   131  001F                     _CMCONbits	set	31
   132  000C                     _PIR1bits	set	12
   133  000B                     _INTCONbits	set	11
   134  0006                     _PORTBbits	set	6
   135  0005                     _PORTA	set	5
   136  0006                     _PORTB	set	6
   137  0001                     _TMR0	set	1
   138  0061                     _TMR2IF	set	97
   139  005A                     _TMR0IF	set	90
   140  005D                     _TMR0IE	set	93
   141  0092                     _PR2	set	146
   142  0086                     _TRISB	set	134
   143  0085                     _TRISA	set	133
   144  008C                     _PIE1bits	set	140
   145  0081                     _OPTION_REGbits	set	129
   146  0461                     _TMR2IE	set	1121
   147                           
   148                           	psect	cinit
   149  000F                     start_initialization:	
   150                           ; #config settings
   151                           
   152  000F                     __initialization:
   153                           
   154                           ; Clear objects allocated to BANK0
   155  000F  1383               	bcf	3,7	;select IRP bank0
   156  0010  3042               	movlw	low __pbssBANK0
   157  0011  0084               	movwf	4
   158  0012  3054               	movlw	low (__pbssBANK0+18)
   159  0013  24E7               	fcall	clear_ram0
   160  0014                     end_of_initialization:	
   161                           ;End of C runtime variable initialization code
   162                           
   163  0014                     __end_of__initialization:
   164  0014  0183               	clrf	3
   165  0015  2CEF               	ljmp	_main	;jump to C main() function
   166                           
   167                           	psect	bssBANK0
   168  0042                     __pbssBANK0:
   169  0042                     _frequenza_x100:
   170  0042                     	ds	4
   171  0046                     _t0_gross_prec:
   172  0046                     	ds	4
   173  004A                     _t0_gross:
   174  004A                     	ds	4
   175  004E                     _t0_ovl:
   176  004E                     	ds	4
   177  0052                     _millisecondi:
   178  0052                     	ds	2
   179                           
   180                           	psect	clrtext
   181  04E7                     clear_ram0:	
   182                           ;	Called with FSR containing the base address, and
   183                           ;	W with the last address+1
   184                           
   185  04E7  0064               	clrwdt	;clear the watchdog before getting into this loop
   186  04E8                     clrloop0:
   187  04E8  0180               	clrf	0	;clear RAM location pointed to by FSR
   188  04E9  0A84               	incf	4,f	;increment pointer
   189  04EA  0604               	xorwf	4,w	;XOR with final address
   190  04EB  1903               	btfsc	3,2	;have we reached the end yet?
   191  04EC  3400               	retlw	0	;all done for this memory range, return
   192  04ED  0604               	xorwf	4,w	;XOR again to restore value
   193  04EE  2CE8               	goto	clrloop0	;do the next byte
   194                           
   195                           	psect	cstackCOMMON
   196  0070                     __pcstackCOMMON:
   197  0070                     ?_tcInt:
   198  0070                     ?_setup:	
   199                           ; 1 bytes @ 0x0
   200                           
   201  0070                     ?_loop:	
   202                           ; 1 bytes @ 0x0
   203                           
   204  0070                     ?_main:	
   205                           ; 1 bytes @ 0x0
   206                           
   207  0070                     ?___lmul:	
   208                           ; 1 bytes @ 0x0
   209                           
   210  0070                     ?___lldiv:	
   211                           ; 4 bytes @ 0x0
   212                           
   213  0070                     ___lmul@multiplier:	
   214                           ; 4 bytes @ 0x0
   215                           
   216  0070                     ___lldiv@divisor:	
   217                           ; 4 bytes @ 0x0
   218                           
   219                           
   220                           ; 4 bytes @ 0x0
   221  0070                     	ds	4
   222  0074                     ___lmul@multiplicand:
   223  0074                     ___lldiv@dividend:	
   224                           ; 4 bytes @ 0x4
   225                           
   226                           
   227                           ; 4 bytes @ 0x4
   228  0074                     	ds	4
   229  0078                     ??___lmul:
   230  0078                     ??___lldiv:	
   231                           ; 1 bytes @ 0x8
   232                           
   233                           
   234                           ; 1 bytes @ 0x8
   235  0078                     	ds	1
   236  0079                     ___lmul@product:
   237  0079                     ___lldiv@quotient:	
   238                           ; 4 bytes @ 0x9
   239                           
   240                           
   241                           ; 4 bytes @ 0x9
   242  0079                     	ds	4
   243  007D                     ___lldiv@counter:
   244                           
   245                           ; 1 bytes @ 0xD
   246  007D                     	ds	1
   247                           
   248                           	psect	cstackBANK0
   249  0020                     __pcstackBANK0:
   250  0020                     ??_tcInt:
   251                           
   252                           ; 1 bytes @ 0x0
   253  0020                     	ds	11
   254  002B                     ?_accendi_cifra:
   255  002B                     ??_setup:	
   256                           ; 1 bytes @ 0xB
   257                           
   258  002B                     ?___aldiv:	
   259                           ; 1 bytes @ 0xB
   260                           
   261  002B                     ?___almod:	
   262                           ; 4 bytes @ 0xB
   263                           
   264  002B                     accendi_cifra@posizione:	
   265                           ; 4 bytes @ 0xB
   266                           
   267  002B                     ___aldiv@divisor:	
   268                           ; 2 bytes @ 0xB
   269                           
   270  002B                     ___almod@divisor:	
   271                           ; 4 bytes @ 0xB
   272                           
   273                           
   274                           ; 4 bytes @ 0xB
   275  002B                     	ds	2
   276  002D                     accendi_cifra@cifra:
   277                           
   278                           ; 2 bytes @ 0xD
   279  002D                     	ds	2
   280  002F                     accendi_cifra@virgola:
   281  002F                     ___aldiv@dividend:	
   282                           ; 2 bytes @ 0xF
   283                           
   284  002F                     ___almod@dividend:	
   285                           ; 4 bytes @ 0xF
   286                           
   287                           
   288                           ; 4 bytes @ 0xF
   289  002F                     	ds	2
   290  0031                     ??_accendi_cifra:
   291                           
   292                           ; 1 bytes @ 0x11
   293  0031                     	ds	2
   294  0033                     ??___aldiv:
   295  0033                     ??___almod:	
   296                           ; 1 bytes @ 0x13
   297                           
   298                           
   299                           ; 1 bytes @ 0x13
   300  0033                     	ds	1
   301  0034                     ___aldiv@counter:
   302  0034                     ___almod@counter:	
   303                           ; 1 bytes @ 0x14
   304                           
   305                           
   306                           ; 1 bytes @ 0x14
   307  0034                     	ds	1
   308  0035                     ___aldiv@sign:
   309  0035                     ___almod@sign:	
   310                           ; 1 bytes @ 0x15
   311                           
   312                           
   313                           ; 1 bytes @ 0x15
   314  0035                     	ds	1
   315  0036                     ___aldiv@quotient:
   316                           
   317                           ; 4 bytes @ 0x16
   318  0036                     	ds	4
   319  003A                     ??_loop:
   320                           
   321                           ; 1 bytes @ 0x1A
   322  003A                     	ds	2
   323  003C                     loop@cifra:
   324                           
   325                           ; 2 bytes @ 0x1C
   326  003C                     	ds	2
   327  003E                     loop@f:
   328                           
   329                           ; 4 bytes @ 0x1E
   330  003E                     	ds	4
   331  0042                     ??_main:
   332                           
   333                           	psect	maintext
   334  04EF                     __pmaintext:	
   335                           ; 1 bytes @ 0x22
   336 ;;
   337 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   338 ;;
   339 ;; *************** function _main *****************
   340 ;; Defined at:
   341 ;;		line 237 in file "main.c"
   342 ;; Parameters:    Size  Location     Type
   343 ;;		None
   344 ;; Auto vars:     Size  Location     Type
   345 ;;		None
   346 ;; Return value:  Size  Location     Type
   347 ;;                  1    wreg      void 
   348 ;; Registers used:
   349 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   350 ;; Tracked objects:
   351 ;;		On entry : B00/0
   352 ;;		On exit  : 0/0
   353 ;;		Unchanged: 0/0
   354 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   355 ;;      Params:         0       0       0       0
   356 ;;      Locals:         0       0       0       0
   357 ;;      Temps:          0       0       0       0
   358 ;;      Totals:         0       0       0       0
   359 ;;Total ram usage:        0 bytes
   360 ;; Hardware stack levels required when called: 4
   361 ;; This function calls:
   362 ;;		_loop
   363 ;;		_setup
   364 ;; This function is called by:
   365 ;;		Startup code after reset
   366 ;; This function uses a non-reentrant model
   367 ;;
   368                           
   369                           
   370                           ;psect for function _main
   371  04EF                     _main:
   372  04EF                     l1292:	
   373                           ;incstack = 0
   374                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   375                           
   376                           
   377                           ;main.c: 238:     setup();
   378  04EF  244D               	fcall	_setup
   379  04F0                     l1294:
   380                           
   381                           ;main.c: 242:         loop();
   382  04F0  2016               	fcall	_loop
   383  04F1  2CF0               	goto	l1294
   384  04F2  280E               	ljmp	start
   385  04F3                     __end_of_main:
   386                           
   387                           	psect	text1
   388  044D                     __ptext1:	
   389 ;; *************** function _setup *****************
   390 ;; Defined at:
   391 ;;		line 129 in file "main.c"
   392 ;; Parameters:    Size  Location     Type
   393 ;;		None
   394 ;; Auto vars:     Size  Location     Type
   395 ;;		None
   396 ;; Return value:  Size  Location     Type
   397 ;;                  1    wreg      void 
   398 ;; Registers used:
   399 ;;		wreg, status,2, status,0
   400 ;; Tracked objects:
   401 ;;		On entry : 0/0
   402 ;;		On exit  : 0/0
   403 ;;		Unchanged: 0/0
   404 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   405 ;;      Params:         0       0       0       0
   406 ;;      Locals:         0       0       0       0
   407 ;;      Temps:          0       0       0       0
   408 ;;      Totals:         0       0       0       0
   409 ;;Total ram usage:        0 bytes
   410 ;; Hardware stack levels used: 1
   411 ;; Hardware stack levels required when called: 2
   412 ;; This function calls:
   413 ;;		Nothing
   414 ;; This function is called by:
   415 ;;		_main
   416 ;; This function uses a non-reentrant model
   417 ;;
   418                           
   419                           
   420                           ;psect for function _setup
   421  044D                     _setup:
   422  044D                     l1136:	
   423                           ;incstack = 0
   424                           ; Regs used in _setup: [wreg+status,2+status,0]
   425                           
   426                           
   427                           ;main.c: 131:     OPTION_REGbits.PS = 7;
   428  044D  3007               	movlw	7
   429  044E  1683               	bsf	3,5	;RP0=1, select bank1
   430  044F  1303               	bcf	3,6	;RP1=0, select bank1
   431  0450  0481               	iorwf	1,f	;volatile
   432  0451                     l1138:
   433                           
   434                           ;main.c: 132:     OPTION_REGbits.PSA = 1;
   435  0451  1581               	bsf	1,3	;volatile
   436  0452                     l1140:
   437                           
   438                           ;main.c: 133:     OPTION_REGbits.T0SE = 0;
   439  0452  1201               	bcf	1,4	;volatile
   440  0453                     l1142:
   441                           
   442                           ;main.c: 134:     OPTION_REGbits.T0CS = 1;
   443  0453  1681               	bsf	1,5	;volatile
   444  0454                     l1144:
   445                           
   446                           ;main.c: 135:     OPTION_REGbits.nRBPU = 1;
   447  0454  1781               	bsf	1,7	;volatile
   448  0455                     l1146:
   449                           
   450                           ;main.c: 137:     INTCONbits.GIE = 0;
   451  0455  138B               	bcf	11,7	;volatile
   452  0456                     l1148:
   453                           
   454                           ;main.c: 139:     INTCONbits.PEIE = 1;
   455  0456  170B               	bsf	11,6	;volatile
   456  0457                     l1150:
   457                           
   458                           ;main.c: 140:     INTCONbits.T0IE = 1;
   459  0457  168B               	bsf	11,5	;volatile
   460  0458                     l1152:
   461                           
   462                           ;main.c: 141:     INTCONbits.T0IF = 0;
   463  0458  110B               	bcf	11,2	;volatile
   464  0459                     l1154:
   465                           
   466                           ;main.c: 143:     PIE1bits.TMR2IE = 1;
   467  0459  148C               	bsf	12,1	;volatile
   468  045A                     l1156:
   469                           
   470                           ;main.c: 145:     PIR1bits.TMR2IF = 0;
   471  045A  1283               	bcf	3,5	;RP0=0, select bank0
   472  045B  1303               	bcf	3,6	;RP1=0, select bank0
   473  045C  108C               	bcf	12,1	;volatile
   474                           
   475                           ;main.c: 149:     CMCONbits.CM = 7;
   476  045D  3007               	movlw	7
   477  045E  049F               	iorwf	31,f	;volatile
   478  045F                     l1158:
   479                           
   480                           ;main.c: 151:     TRISA = 0b00110000;
   481  045F  3030               	movlw	48
   482  0460  1683               	bsf	3,5	;RP0=1, select bank1
   483  0461  1303               	bcf	3,6	;RP1=0, select bank1
   484  0462  0085               	movwf	5	;volatile
   485  0463                     l1160:
   486                           
   487                           ;main.c: 155:     PORTA = 0b00001111;
   488  0463  300F               	movlw	15
   489  0464  1283               	bcf	3,5	;RP0=0, select bank0
   490  0465  1303               	bcf	3,6	;RP1=0, select bank0
   491  0466  0085               	movwf	5	;volatile
   492  0467                     l1162:
   493                           
   494                           ;main.c: 157:     TRISB = 0b00000000;
   495  0467  1683               	bsf	3,5	;RP0=1, select bank1
   496  0468  1303               	bcf	3,6	;RP1=0, select bank1
   497  0469  0186               	clrf	6	;volatile
   498  046A                     l1164:
   499                           
   500                           ;main.c: 166:     PORTB = 0b00000000;
   501  046A  1283               	bcf	3,5	;RP0=0, select bank0
   502  046B  1303               	bcf	3,6	;RP1=0, select bank0
   503  046C  0186               	clrf	6	;volatile
   504                           
   505                           ;main.c: 173:     T2CONbits.T2CKPS = 1;
   506  046D  0812               	movf	18,w	;volatile
   507  046E  39FC               	andlw	-4
   508  046F  3801               	iorlw	1
   509  0470  0092               	movwf	18	;volatile
   510                           
   511                           ;main.c: 174:     T2CONbits.TOUTPS = 10-1;
   512  0471  0812               	movf	18,w	;volatile
   513  0472  3987               	andlw	-121
   514  0473  3848               	iorlw	72
   515  0474  0092               	movwf	18	;volatile
   516  0475                     l1166:
   517                           
   518                           ;main.c: 175:     T2CONbits.TMR2ON = 1;
   519  0475  1512               	bsf	18,2	;volatile
   520  0476                     l1168:
   521                           
   522                           ;main.c: 176:     PR2 = 125 - 1;
   523  0476  307C               	movlw	124
   524  0477  1683               	bsf	3,5	;RP0=1, select bank1
   525  0478  1303               	bcf	3,6	;RP1=0, select bank1
   526  0479  0092               	movwf	18	;volatile
   527  047A                     l1170:
   528                           
   529                           ;main.c: 179:     t0_ovl = 0;
   530  047A  3000               	movlw	0
   531  047B  1283               	bcf	3,5	;RP0=0, select bank0
   532  047C  1303               	bcf	3,6	;RP1=0, select bank0
   533  047D  00D1               	movwf	_t0_ovl+3	;volatile
   534  047E  3000               	movlw	0
   535  047F  00D0               	movwf	_t0_ovl+2	;volatile
   536  0480  3000               	movlw	0
   537  0481  00CF               	movwf	_t0_ovl+1	;volatile
   538  0482  3000               	movlw	0
   539  0483  00CE               	movwf	_t0_ovl	;volatile
   540  0484                     l1172:
   541                           
   542                           ;main.c: 180:     TMR0 = 0;
   543  0484  0181               	clrf	1	;volatile
   544  0485                     l1174:
   545                           
   546                           ;main.c: 182:     t0_gross = 0;
   547  0485  3000               	movlw	0
   548  0486  00CD               	movwf	_t0_gross+3	;volatile
   549  0487  3000               	movlw	0
   550  0488  00CC               	movwf	_t0_gross+2	;volatile
   551  0489  3000               	movlw	0
   552  048A  00CB               	movwf	_t0_gross+1	;volatile
   553  048B  3000               	movlw	0
   554  048C  00CA               	movwf	_t0_gross	;volatile
   555  048D                     l1176:
   556                           
   557                           ;main.c: 183:     t0_gross_prec = 0;
   558  048D  3000               	movlw	0
   559  048E  00C9               	movwf	_t0_gross_prec+3	;volatile
   560  048F  3000               	movlw	0
   561  0490  00C8               	movwf	_t0_gross_prec+2	;volatile
   562  0491  3000               	movlw	0
   563  0492  00C7               	movwf	_t0_gross_prec+1	;volatile
   564  0493  3000               	movlw	0
   565  0494  00C6               	movwf	_t0_gross_prec	;volatile
   566  0495                     l1178:
   567                           
   568                           ;main.c: 185:     millisecondi = 0;
   569  0495  01D2               	clrf	_millisecondi	;volatile
   570  0496  01D3               	clrf	_millisecondi+1	;volatile
   571  0497                     l1180:
   572                           
   573                           ;main.c: 186:     frequenza_x100 = 0;
   574  0497  3000               	movlw	0
   575  0498  00C5               	movwf	_frequenza_x100+3	;volatile
   576  0499  3000               	movlw	0
   577  049A  00C4               	movwf	_frequenza_x100+2	;volatile
   578  049B  3000               	movlw	0
   579  049C  00C3               	movwf	_frequenza_x100+1	;volatile
   580  049D  3000               	movlw	0
   581  049E  00C2               	movwf	_frequenza_x100	;volatile
   582  049F                     l1182:
   583                           
   584                           ;main.c: 188:     INTCONbits.GIE = 1;
   585  049F  178B               	bsf	11,7	;volatile
   586  04A0                     l81:
   587  04A0  0008               	return
   588  04A1                     __end_of_setup:
   589                           
   590                           	psect	text2
   591  0016                     __ptext2:	
   592 ;; *************** function _loop *****************
   593 ;; Defined at:
   594 ;;		line 191 in file "main.c"
   595 ;; Parameters:    Size  Location     Type
   596 ;;		None
   597 ;; Auto vars:     Size  Location     Type
   598 ;;  f               4   30[BANK0 ] long 
   599 ;;  cifra           2   28[BANK0 ] int 
   600 ;; Return value:  Size  Location     Type
   601 ;;                  1    wreg      void 
   602 ;; Registers used:
   603 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   604 ;; Tracked objects:
   605 ;;		On entry : 0/0
   606 ;;		On exit  : 0/0
   607 ;;		Unchanged: 0/0
   608 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   609 ;;      Params:         0       0       0       0
   610 ;;      Locals:         0       6       0       0
   611 ;;      Temps:          0       2       0       0
   612 ;;      Totals:         0       8       0       0
   613 ;;Total ram usage:        8 bytes
   614 ;; Hardware stack levels used: 1
   615 ;; Hardware stack levels required when called: 3
   616 ;; This function calls:
   617 ;;		___aldiv
   618 ;;		___almod
   619 ;;		_accendi_cifra
   620 ;; This function is called by:
   621 ;;		_main
   622 ;; This function uses a non-reentrant model
   623 ;;
   624                           
   625                           
   626                           ;psect for function _loop
   627  0016                     _loop:
   628  0016                     l1184:	
   629                           ;incstack = 0
   630                           ; Regs used in _loop: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   631                           
   632                           
   633                           ;main.c: 194:     long f;;main.c: 195:     int cifra;;main.c: 197:     TMR2IE = 0;
   634  0016  1683               	bsf	3,5	;RP0=1, select bank1
   635  0017  1303               	bcf	3,6	;RP1=0, select bank1
   636  0018  108C               	bcf	12,1	;volatile
   637  0019                     l1186:
   638                           
   639                           ;main.c: 198:     f = frequenza_x100;
   640  0019  1283               	bcf	3,5	;RP0=0, select bank0
   641  001A  1303               	bcf	3,6	;RP1=0, select bank0
   642  001B  0845               	movf	_frequenza_x100+3,w	;volatile
   643  001C  00C1               	movwf	loop@f+3
   644  001D  0844               	movf	_frequenza_x100+2,w	;volatile
   645  001E  00C0               	movwf	loop@f+2
   646  001F  0843               	movf	_frequenza_x100+1,w	;volatile
   647  0020  00BF               	movwf	loop@f+1
   648  0021  0842               	movf	_frequenza_x100,w	;volatile
   649  0022  00BE               	movwf	loop@f
   650  0023                     l1188:
   651                           
   652                           ;main.c: 200:     TMR2IE = 1;
   653  0023  1683               	bsf	3,5	;RP0=1, select bank1
   654  0024  1303               	bcf	3,6	;RP1=0, select bank1
   655  0025  148C               	bsf	12,1	;volatile
   656  0026                     l1190:
   657                           
   658                           ;main.c: 206:     cifra = f % 10;
   659  0026  3000               	movlw	0
   660  0027  1283               	bcf	3,5	;RP0=0, select bank0
   661  0028  1303               	bcf	3,6	;RP1=0, select bank0
   662  0029  00AE               	movwf	___almod@divisor+3
   663  002A  3000               	movlw	0
   664  002B  00AD               	movwf	___almod@divisor+2
   665  002C  3000               	movlw	0
   666  002D  00AC               	movwf	___almod@divisor+1
   667  002E  300A               	movlw	10
   668  002F  00AB               	movwf	___almod@divisor
   669  0030  0841               	movf	loop@f+3,w
   670  0031  00B2               	movwf	___almod@dividend+3
   671  0032  0840               	movf	loop@f+2,w
   672  0033  00B1               	movwf	___almod@dividend+2
   673  0034  083F               	movf	loop@f+1,w
   674  0035  00B0               	movwf	___almod@dividend+1
   675  0036  083E               	movf	loop@f,w
   676  0037  00AF               	movwf	___almod@dividend
   677  0038  22ED               	fcall	___almod
   678  0039  1283               	bcf	3,5	;RP0=0, select bank0
   679  003A  1303               	bcf	3,6	;RP1=0, select bank0
   680  003B  082C               	movf	?___almod+1,w
   681  003C  00BD               	movwf	loop@cifra+1
   682  003D  082B               	movf	?___almod,w
   683  003E  00BC               	movwf	loop@cifra
   684  003F                     l1192:
   685                           
   686                           ;main.c: 208:     accendi_cifra( 5, cifra, 0 );
   687  003F  3005               	movlw	5
   688  0040  00AB               	movwf	accendi_cifra@posizione
   689  0041  3000               	movlw	0
   690  0042  00AC               	movwf	accendi_cifra@posizione+1
   691  0043  083D               	movf	loop@cifra+1,w
   692  0044  00AE               	movwf	accendi_cifra@cifra+1
   693  0045  083C               	movf	loop@cifra,w
   694  0046  00AD               	movwf	accendi_cifra@cifra
   695  0047  3000               	movlw	0
   696  0048  00AF               	movwf	accendi_cifra@virgola
   697  0049  00B0               	movwf	accendi_cifra@virgola+1
   698  004A  2374               	fcall	_accendi_cifra
   699  004B                     l1194:
   700                           
   701                           ;main.c: 209:     _delay((unsigned long)((1)*(20000000/4000.0)));
   702  004B  3007               	movlw	7
   703  004C  1283               	bcf	3,5	;RP0=0, select bank0
   704  004D  1303               	bcf	3,6	;RP1=0, select bank0
   705  004E  00BB               	movwf	??_loop+1
   706  004F  307C               	movlw	124
   707  0050  00BA               	movwf	??_loop
   708  0051                     u817:
   709  0051  0BBA               	decfsz	??_loop,f
   710  0052  2851               	goto	u817
   711  0053  0BBB               	decfsz	??_loop+1,f
   712  0054  2851               	goto	u817
   713  0055  2856               	nop2
   714  0056                     l1196:
   715                           
   716                           ;main.c: 211:     f = f / 10;
   717  0056  3000               	movlw	0
   718  0057  1283               	bcf	3,5	;RP0=0, select bank0
   719  0058  1303               	bcf	3,6	;RP1=0, select bank0
   720  0059  00AE               	movwf	___aldiv@divisor+3
   721  005A  3000               	movlw	0
   722  005B  00AD               	movwf	___aldiv@divisor+2
   723  005C  3000               	movlw	0
   724  005D  00AC               	movwf	___aldiv@divisor+1
   725  005E  300A               	movlw	10
   726  005F  00AB               	movwf	___aldiv@divisor
   727  0060  0841               	movf	loop@f+3,w
   728  0061  00B2               	movwf	___aldiv@dividend+3
   729  0062  0840               	movf	loop@f+2,w
   730  0063  00B1               	movwf	___aldiv@dividend+2
   731  0064  083F               	movf	loop@f+1,w
   732  0065  00B0               	movwf	___aldiv@dividend+1
   733  0066  083E               	movf	loop@f,w
   734  0067  00AF               	movwf	___aldiv@dividend
   735  0068  2250               	fcall	___aldiv
   736  0069  1283               	bcf	3,5	;RP0=0, select bank0
   737  006A  1303               	bcf	3,6	;RP1=0, select bank0
   738  006B  082E               	movf	?___aldiv+3,w
   739  006C  00C1               	movwf	loop@f+3
   740  006D  082D               	movf	?___aldiv+2,w
   741  006E  00C0               	movwf	loop@f+2
   742  006F  082C               	movf	?___aldiv+1,w
   743  0070  00BF               	movwf	loop@f+1
   744  0071  082B               	movf	?___aldiv,w
   745  0072  00BE               	movwf	loop@f
   746  0073                     l1198:
   747                           
   748                           ;main.c: 212:     cifra = f % 10;
   749  0073  3000               	movlw	0
   750  0074  00AE               	movwf	___almod@divisor+3
   751  0075  3000               	movlw	0
   752  0076  00AD               	movwf	___almod@divisor+2
   753  0077  3000               	movlw	0
   754  0078  00AC               	movwf	___almod@divisor+1
   755  0079  300A               	movlw	10
   756  007A  00AB               	movwf	___almod@divisor
   757  007B  0841               	movf	loop@f+3,w
   758  007C  00B2               	movwf	___almod@dividend+3
   759  007D  0840               	movf	loop@f+2,w
   760  007E  00B1               	movwf	___almod@dividend+2
   761  007F  083F               	movf	loop@f+1,w
   762  0080  00B0               	movwf	___almod@dividend+1
   763  0081  083E               	movf	loop@f,w
   764  0082  00AF               	movwf	___almod@dividend
   765  0083  22ED               	fcall	___almod
   766  0084  1283               	bcf	3,5	;RP0=0, select bank0
   767  0085  1303               	bcf	3,6	;RP1=0, select bank0
   768  0086  082C               	movf	?___almod+1,w
   769  0087  00BD               	movwf	loop@cifra+1
   770  0088  082B               	movf	?___almod,w
   771  0089  00BC               	movwf	loop@cifra
   772  008A                     l1200:
   773                           
   774                           ;main.c: 214:     accendi_cifra( 4, cifra, 0 );
   775  008A  3004               	movlw	4
   776  008B  00AB               	movwf	accendi_cifra@posizione
   777  008C  3000               	movlw	0
   778  008D  00AC               	movwf	accendi_cifra@posizione+1
   779  008E  083D               	movf	loop@cifra+1,w
   780  008F  00AE               	movwf	accendi_cifra@cifra+1
   781  0090  083C               	movf	loop@cifra,w
   782  0091  00AD               	movwf	accendi_cifra@cifra
   783  0092  3000               	movlw	0
   784  0093  00AF               	movwf	accendi_cifra@virgola
   785  0094  00B0               	movwf	accendi_cifra@virgola+1
   786  0095  2374               	fcall	_accendi_cifra
   787  0096                     l1202:
   788                           
   789                           ;main.c: 215:     _delay((unsigned long)((1)*(20000000/4000.0)));
   790  0096  3007               	movlw	7
   791  0097  1283               	bcf	3,5	;RP0=0, select bank0
   792  0098  1303               	bcf	3,6	;RP1=0, select bank0
   793  0099  00BB               	movwf	??_loop+1
   794  009A  307C               	movlw	124
   795  009B  00BA               	movwf	??_loop
   796  009C                     u827:
   797  009C  0BBA               	decfsz	??_loop,f
   798  009D  289C               	goto	u827
   799  009E  0BBB               	decfsz	??_loop+1,f
   800  009F  289C               	goto	u827
   801  00A0  28A1               	nop2
   802  00A1                     l1204:
   803                           
   804                           ;main.c: 217:     f = f / 10;
   805  00A1  3000               	movlw	0
   806  00A2  1283               	bcf	3,5	;RP0=0, select bank0
   807  00A3  1303               	bcf	3,6	;RP1=0, select bank0
   808  00A4  00AE               	movwf	___aldiv@divisor+3
   809  00A5  3000               	movlw	0
   810  00A6  00AD               	movwf	___aldiv@divisor+2
   811  00A7  3000               	movlw	0
   812  00A8  00AC               	movwf	___aldiv@divisor+1
   813  00A9  300A               	movlw	10
   814  00AA  00AB               	movwf	___aldiv@divisor
   815  00AB  0841               	movf	loop@f+3,w
   816  00AC  00B2               	movwf	___aldiv@dividend+3
   817  00AD  0840               	movf	loop@f+2,w
   818  00AE  00B1               	movwf	___aldiv@dividend+2
   819  00AF  083F               	movf	loop@f+1,w
   820  00B0  00B0               	movwf	___aldiv@dividend+1
   821  00B1  083E               	movf	loop@f,w
   822  00B2  00AF               	movwf	___aldiv@dividend
   823  00B3  2250               	fcall	___aldiv
   824  00B4  1283               	bcf	3,5	;RP0=0, select bank0
   825  00B5  1303               	bcf	3,6	;RP1=0, select bank0
   826  00B6  082E               	movf	?___aldiv+3,w
   827  00B7  00C1               	movwf	loop@f+3
   828  00B8  082D               	movf	?___aldiv+2,w
   829  00B9  00C0               	movwf	loop@f+2
   830  00BA  082C               	movf	?___aldiv+1,w
   831  00BB  00BF               	movwf	loop@f+1
   832  00BC  082B               	movf	?___aldiv,w
   833  00BD  00BE               	movwf	loop@f
   834  00BE                     l1206:
   835                           
   836                           ;main.c: 218:     cifra = f % 10;
   837  00BE  3000               	movlw	0
   838  00BF  00AE               	movwf	___almod@divisor+3
   839  00C0  3000               	movlw	0
   840  00C1  00AD               	movwf	___almod@divisor+2
   841  00C2  3000               	movlw	0
   842  00C3  00AC               	movwf	___almod@divisor+1
   843  00C4  300A               	movlw	10
   844  00C5  00AB               	movwf	___almod@divisor
   845  00C6  0841               	movf	loop@f+3,w
   846  00C7  00B2               	movwf	___almod@dividend+3
   847  00C8  0840               	movf	loop@f+2,w
   848  00C9  00B1               	movwf	___almod@dividend+2
   849  00CA  083F               	movf	loop@f+1,w
   850  00CB  00B0               	movwf	___almod@dividend+1
   851  00CC  083E               	movf	loop@f,w
   852  00CD  00AF               	movwf	___almod@dividend
   853  00CE  22ED               	fcall	___almod
   854  00CF  1283               	bcf	3,5	;RP0=0, select bank0
   855  00D0  1303               	bcf	3,6	;RP1=0, select bank0
   856  00D1  082C               	movf	?___almod+1,w
   857  00D2  00BD               	movwf	loop@cifra+1
   858  00D3  082B               	movf	?___almod,w
   859  00D4  00BC               	movwf	loop@cifra
   860  00D5                     l1208:
   861                           
   862                           ;main.c: 220:     accendi_cifra( 3, cifra, 1 );
   863  00D5  3003               	movlw	3
   864  00D6  00AB               	movwf	accendi_cifra@posizione
   865  00D7  3000               	movlw	0
   866  00D8  00AC               	movwf	accendi_cifra@posizione+1
   867  00D9  083D               	movf	loop@cifra+1,w
   868  00DA  00AE               	movwf	accendi_cifra@cifra+1
   869  00DB  083C               	movf	loop@cifra,w
   870  00DC  00AD               	movwf	accendi_cifra@cifra
   871  00DD  3001               	movlw	1
   872  00DE  00AF               	movwf	accendi_cifra@virgola
   873  00DF  3000               	movlw	0
   874  00E0  00B0               	movwf	accendi_cifra@virgola+1
   875  00E1  2374               	fcall	_accendi_cifra
   876  00E2                     l1210:
   877                           
   878                           ;main.c: 221:     _delay((unsigned long)((1)*(20000000/4000.0)));
   879  00E2  3007               	movlw	7
   880  00E3  1283               	bcf	3,5	;RP0=0, select bank0
   881  00E4  1303               	bcf	3,6	;RP1=0, select bank0
   882  00E5  00BB               	movwf	??_loop+1
   883  00E6  307C               	movlw	124
   884  00E7  00BA               	movwf	??_loop
   885  00E8                     u837:
   886  00E8  0BBA               	decfsz	??_loop,f
   887  00E9  28E8               	goto	u837
   888  00EA  0BBB               	decfsz	??_loop+1,f
   889  00EB  28E8               	goto	u837
   890  00EC  28ED               	nop2
   891  00ED                     l1212:
   892                           
   893                           ;main.c: 223:     f = f / 10;
   894  00ED  3000               	movlw	0
   895  00EE  1283               	bcf	3,5	;RP0=0, select bank0
   896  00EF  1303               	bcf	3,6	;RP1=0, select bank0
   897  00F0  00AE               	movwf	___aldiv@divisor+3
   898  00F1  3000               	movlw	0
   899  00F2  00AD               	movwf	___aldiv@divisor+2
   900  00F3  3000               	movlw	0
   901  00F4  00AC               	movwf	___aldiv@divisor+1
   902  00F5  300A               	movlw	10
   903  00F6  00AB               	movwf	___aldiv@divisor
   904  00F7  0841               	movf	loop@f+3,w
   905  00F8  00B2               	movwf	___aldiv@dividend+3
   906  00F9  0840               	movf	loop@f+2,w
   907  00FA  00B1               	movwf	___aldiv@dividend+2
   908  00FB  083F               	movf	loop@f+1,w
   909  00FC  00B0               	movwf	___aldiv@dividend+1
   910  00FD  083E               	movf	loop@f,w
   911  00FE  00AF               	movwf	___aldiv@dividend
   912  00FF  2250               	fcall	___aldiv
   913  0100  1283               	bcf	3,5	;RP0=0, select bank0
   914  0101  1303               	bcf	3,6	;RP1=0, select bank0
   915  0102  082E               	movf	?___aldiv+3,w
   916  0103  00C1               	movwf	loop@f+3
   917  0104  082D               	movf	?___aldiv+2,w
   918  0105  00C0               	movwf	loop@f+2
   919  0106  082C               	movf	?___aldiv+1,w
   920  0107  00BF               	movwf	loop@f+1
   921  0108  082B               	movf	?___aldiv,w
   922  0109  00BE               	movwf	loop@f
   923  010A                     l1214:
   924                           
   925                           ;main.c: 224:     cifra = f % 10;
   926  010A  3000               	movlw	0
   927  010B  00AE               	movwf	___almod@divisor+3
   928  010C  3000               	movlw	0
   929  010D  00AD               	movwf	___almod@divisor+2
   930  010E  3000               	movlw	0
   931  010F  00AC               	movwf	___almod@divisor+1
   932  0110  300A               	movlw	10
   933  0111  00AB               	movwf	___almod@divisor
   934  0112  0841               	movf	loop@f+3,w
   935  0113  00B2               	movwf	___almod@dividend+3
   936  0114  0840               	movf	loop@f+2,w
   937  0115  00B1               	movwf	___almod@dividend+2
   938  0116  083F               	movf	loop@f+1,w
   939  0117  00B0               	movwf	___almod@dividend+1
   940  0118  083E               	movf	loop@f,w
   941  0119  00AF               	movwf	___almod@dividend
   942  011A  22ED               	fcall	___almod
   943  011B  1283               	bcf	3,5	;RP0=0, select bank0
   944  011C  1303               	bcf	3,6	;RP1=0, select bank0
   945  011D  082C               	movf	?___almod+1,w
   946  011E  00BD               	movwf	loop@cifra+1
   947  011F  082B               	movf	?___almod,w
   948  0120  00BC               	movwf	loop@cifra
   949  0121                     l1216:
   950                           
   951                           ;main.c: 226:     accendi_cifra( 2, cifra, 0 );
   952  0121  3002               	movlw	2
   953  0122  00AB               	movwf	accendi_cifra@posizione
   954  0123  3000               	movlw	0
   955  0124  00AC               	movwf	accendi_cifra@posizione+1
   956  0125  083D               	movf	loop@cifra+1,w
   957  0126  00AE               	movwf	accendi_cifra@cifra+1
   958  0127  083C               	movf	loop@cifra,w
   959  0128  00AD               	movwf	accendi_cifra@cifra
   960  0129  3000               	movlw	0
   961  012A  00AF               	movwf	accendi_cifra@virgola
   962  012B  00B0               	movwf	accendi_cifra@virgola+1
   963  012C  2374               	fcall	_accendi_cifra
   964  012D                     l1218:
   965                           
   966                           ;main.c: 227:     _delay((unsigned long)((1)*(20000000/4000.0)));
   967  012D  3007               	movlw	7
   968  012E  1283               	bcf	3,5	;RP0=0, select bank0
   969  012F  1303               	bcf	3,6	;RP1=0, select bank0
   970  0130  00BB               	movwf	??_loop+1
   971  0131  307C               	movlw	124
   972  0132  00BA               	movwf	??_loop
   973  0133                     u847:
   974  0133  0BBA               	decfsz	??_loop,f
   975  0134  2933               	goto	u847
   976  0135  0BBB               	decfsz	??_loop+1,f
   977  0136  2933               	goto	u847
   978  0137  2938               	nop2
   979  0138                     l1220:
   980                           
   981                           ;main.c: 229:     f = f / 10;
   982  0138  3000               	movlw	0
   983  0139  1283               	bcf	3,5	;RP0=0, select bank0
   984  013A  1303               	bcf	3,6	;RP1=0, select bank0
   985  013B  00AE               	movwf	___aldiv@divisor+3
   986  013C  3000               	movlw	0
   987  013D  00AD               	movwf	___aldiv@divisor+2
   988  013E  3000               	movlw	0
   989  013F  00AC               	movwf	___aldiv@divisor+1
   990  0140  300A               	movlw	10
   991  0141  00AB               	movwf	___aldiv@divisor
   992  0142  0841               	movf	loop@f+3,w
   993  0143  00B2               	movwf	___aldiv@dividend+3
   994  0144  0840               	movf	loop@f+2,w
   995  0145  00B1               	movwf	___aldiv@dividend+2
   996  0146  083F               	movf	loop@f+1,w
   997  0147  00B0               	movwf	___aldiv@dividend+1
   998  0148  083E               	movf	loop@f,w
   999  0149  00AF               	movwf	___aldiv@dividend
  1000  014A  2250               	fcall	___aldiv
  1001  014B  1283               	bcf	3,5	;RP0=0, select bank0
  1002  014C  1303               	bcf	3,6	;RP1=0, select bank0
  1003  014D  082E               	movf	?___aldiv+3,w
  1004  014E  00C1               	movwf	loop@f+3
  1005  014F  082D               	movf	?___aldiv+2,w
  1006  0150  00C0               	movwf	loop@f+2
  1007  0151  082C               	movf	?___aldiv+1,w
  1008  0152  00BF               	movwf	loop@f+1
  1009  0153  082B               	movf	?___aldiv,w
  1010  0154  00BE               	movwf	loop@f
  1011  0155                     l1222:
  1012                           
  1013                           ;main.c: 230:     cifra = f % 10;
  1014  0155  3000               	movlw	0
  1015  0156  00AE               	movwf	___almod@divisor+3
  1016  0157  3000               	movlw	0
  1017  0158  00AD               	movwf	___almod@divisor+2
  1018  0159  3000               	movlw	0
  1019  015A  00AC               	movwf	___almod@divisor+1
  1020  015B  300A               	movlw	10
  1021  015C  00AB               	movwf	___almod@divisor
  1022  015D  0841               	movf	loop@f+3,w
  1023  015E  00B2               	movwf	___almod@dividend+3
  1024  015F  0840               	movf	loop@f+2,w
  1025  0160  00B1               	movwf	___almod@dividend+2
  1026  0161  083F               	movf	loop@f+1,w
  1027  0162  00B0               	movwf	___almod@dividend+1
  1028  0163  083E               	movf	loop@f,w
  1029  0164  00AF               	movwf	___almod@dividend
  1030  0165  22ED               	fcall	___almod
  1031  0166  1283               	bcf	3,5	;RP0=0, select bank0
  1032  0167  1303               	bcf	3,6	;RP1=0, select bank0
  1033  0168  082C               	movf	?___almod+1,w
  1034  0169  00BD               	movwf	loop@cifra+1
  1035  016A  082B               	movf	?___almod,w
  1036  016B  00BC               	movwf	loop@cifra
  1037  016C                     l1224:
  1038                           
  1039                           ;main.c: 232:     accendi_cifra( 1, cifra, 0 );
  1040  016C  3001               	movlw	1
  1041  016D  00AB               	movwf	accendi_cifra@posizione
  1042  016E  3000               	movlw	0
  1043  016F  00AC               	movwf	accendi_cifra@posizione+1
  1044  0170  083D               	movf	loop@cifra+1,w
  1045  0171  00AE               	movwf	accendi_cifra@cifra+1
  1046  0172  083C               	movf	loop@cifra,w
  1047  0173  00AD               	movwf	accendi_cifra@cifra
  1048  0174  3000               	movlw	0
  1049  0175  00AF               	movwf	accendi_cifra@virgola
  1050  0176  00B0               	movwf	accendi_cifra@virgola+1
  1051  0177  2374               	fcall	_accendi_cifra
  1052  0178                     l1226:
  1053                           
  1054                           ;main.c: 233:     _delay((unsigned long)((1)*(20000000/4000.0)));
  1055  0178  3007               	movlw	7
  1056  0179  1283               	bcf	3,5	;RP0=0, select bank0
  1057  017A  1303               	bcf	3,6	;RP1=0, select bank0
  1058  017B  00BB               	movwf	??_loop+1
  1059  017C  307C               	movlw	124
  1060  017D  00BA               	movwf	??_loop
  1061  017E                     u857:
  1062  017E  0BBA               	decfsz	??_loop,f
  1063  017F  297E               	goto	u857
  1064  0180  0BBB               	decfsz	??_loop+1,f
  1065  0181  297E               	goto	u857
  1066  0182  2983               	nop2
  1067  0183                     l84:
  1068  0183  0008               	return
  1069  0184                     __end_of_loop:
  1070                           
  1071                           	psect	text3
  1072  0374                     __ptext3:	
  1073 ;; *************** function _accendi_cifra *****************
  1074 ;; Defined at:
  1075 ;;		line 61 in file "main.c"
  1076 ;; Parameters:    Size  Location     Type
  1077 ;;  posizione       2   11[BANK0 ] int 
  1078 ;;  cifra           2   13[BANK0 ] int 
  1079 ;;  virgola         2   15[BANK0 ] int 
  1080 ;; Auto vars:     Size  Location     Type
  1081 ;;		None
  1082 ;; Return value:  Size  Location     Type
  1083 ;;                  1    wreg      void 
  1084 ;; Registers used:
  1085 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1086 ;; Tracked objects:
  1087 ;;		On entry : 0/0
  1088 ;;		On exit  : 0/0
  1089 ;;		Unchanged: 0/0
  1090 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1091 ;;      Params:         0       6       0       0
  1092 ;;      Locals:         0       0       0       0
  1093 ;;      Temps:          0       0       0       0
  1094 ;;      Totals:         0       6       0       0
  1095 ;;Total ram usage:        6 bytes
  1096 ;; Hardware stack levels used: 1
  1097 ;; Hardware stack levels required when called: 2
  1098 ;; This function calls:
  1099 ;;		Nothing
  1100 ;; This function is called by:
  1101 ;;		_loop
  1102 ;; This function uses a non-reentrant model
  1103 ;;
  1104                           
  1105                           
  1106                           ;psect for function _accendi_cifra
  1107  0374                     _accendi_cifra:
  1108  0374                     l1010:	
  1109                           ;incstack = 0
  1110                           ; Regs used in _accendi_cifra: [wreg-fsr0h+status,2+status,0]
  1111                           
  1112                           
  1113                           ;main.c: 63:     PORTB = 0;
  1114  0374  1283               	bcf	3,5	;RP0=0, select bank0
  1115  0375  1303               	bcf	3,6	;RP1=0, select bank0
  1116  0376  0186               	clrf	6	;volatile
  1117                           
  1118                           ;main.c: 66:     switch ( posizione ) {
  1119  0377  2B87               	goto	l1024
  1120  0378                     l1012:
  1121                           
  1122                           ;main.c: 68:             PORTA = 0b00000111;
  1123  0378  3007               	movlw	7
  1124  0379  0085               	movwf	5	;volatile
  1125                           
  1126                           ;main.c: 69:             break;
  1127  037A  2BBA               	goto	l1050
  1128  037B                     l1014:
  1129                           
  1130                           ;main.c: 71:             PORTA = 0b00001011;
  1131  037B  300B               	movlw	11
  1132  037C  0085               	movwf	5	;volatile
  1133                           
  1134                           ;main.c: 72:             break;
  1135  037D  2BBA               	goto	l1050
  1136  037E                     l1016:
  1137                           
  1138                           ;main.c: 74:             PORTA = 0b00001110;
  1139  037E  300E               	movlw	14
  1140  037F  0085               	movwf	5	;volatile
  1141                           
  1142                           ;main.c: 75:             break;
  1143  0380  2BBA               	goto	l1050
  1144  0381                     l1018:
  1145                           
  1146                           ;main.c: 77:             PORTA = 0b00001101;
  1147  0381  300D               	movlw	13
  1148  0382  0085               	movwf	5	;volatile
  1149                           
  1150                           ;main.c: 78:             break;
  1151  0383  2BBA               	goto	l1050
  1152  0384                     l1020:
  1153                           
  1154                           ;main.c: 80:             PORTA = 0b00001111;
  1155  0384  300F               	movlw	15
  1156  0385  0085               	movwf	5	;volatile
  1157                           
  1158                           ;main.c: 81:             break;
  1159  0386  2BBA               	goto	l1050
  1160  0387                     l1024:
  1161                           
  1162                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1163                           ; Switch size 1, requested type "simple"
  1164                           ; Number of cases is 1, Range of values is 0 to 0
  1165                           ; switch strategies available:
  1166                           ; Name         Instructions Cycles
  1167                           ; simple_byte            4     3 (average)
  1168                           ; direct_byte            7     6 (fixed)
  1169                           ; jumptable            260     6 (fixed)
  1170                           ;	Chosen strategy is simple_byte
  1171  0387  082C               	movf	accendi_cifra@posizione+1,w
  1172  0388  3A00               	xorlw	0	; case 0
  1173  0389  1903               	skipnz
  1174  038A  2B8C               	goto	l1336
  1175  038B  2B84               	goto	l1020
  1176  038C                     l1336:
  1177                           
  1178                           ; Switch size 1, requested type "simple"
  1179                           ; Number of cases is 4, Range of values is 1 to 4
  1180                           ; switch strategies available:
  1181                           ; Name         Instructions Cycles
  1182                           ; simple_byte           13     7 (average)
  1183                           ; direct_byte           13     9 (fixed)
  1184                           ; jumptable            263     9 (fixed)
  1185                           ;	Chosen strategy is simple_byte
  1186  038C  082B               	movf	accendi_cifra@posizione,w
  1187  038D  3A01               	xorlw	1	; case 1
  1188  038E  1903               	skipnz
  1189  038F  2B78               	goto	l1012
  1190  0390  3A03               	xorlw	3	; case 2
  1191  0391  1903               	skipnz
  1192  0392  2B7B               	goto	l1014
  1193  0393  3A01               	xorlw	1	; case 3
  1194  0394  1903               	skipnz
  1195  0395  2B7E               	goto	l1016
  1196  0396  3A07               	xorlw	7	; case 4
  1197  0397  1903               	skipnz
  1198  0398  2B81               	goto	l1018
  1199  0399  2B84               	goto	l1020
  1200  039A                     l1026:
  1201                           
  1202                           ;main.c: 87:             PORTB = 0b11011101;
  1203  039A  30DD               	movlw	221
  1204  039B  0086               	movwf	6	;volatile
  1205                           
  1206                           ;main.c: 88:             break;
  1207  039C  2BDF               	goto	l1052
  1208  039D                     l1028:
  1209                           
  1210                           ;main.c: 90:             PORTB = 0b10000100;
  1211  039D  3084               	movlw	132
  1212  039E  0086               	movwf	6	;volatile
  1213                           
  1214                           ;main.c: 91:             break;
  1215  039F  2BDF               	goto	l1052
  1216  03A0                     l1030:
  1217                           
  1218                           ;main.c: 93:             PORTB = 0b11101001;
  1219  03A0  30E9               	movlw	233
  1220  03A1  0086               	movwf	6	;volatile
  1221                           
  1222                           ;main.c: 94:             break;
  1223  03A2  2BDF               	goto	l1052
  1224  03A3                     l1032:
  1225                           
  1226                           ;main.c: 96:             PORTB = 0b11100101;
  1227  03A3  30E5               	movlw	229
  1228  03A4  0086               	movwf	6	;volatile
  1229                           
  1230                           ;main.c: 97:             break;
  1231  03A5  2BDF               	goto	l1052
  1232  03A6                     l1034:
  1233                           
  1234                           ;main.c: 99:             PORTB = 0b10110100;
  1235  03A6  30B4               	movlw	180
  1236  03A7  0086               	movwf	6	;volatile
  1237                           
  1238                           ;main.c: 100:             break;
  1239  03A8  2BDF               	goto	l1052
  1240  03A9                     l1036:
  1241                           
  1242                           ;main.c: 102:             PORTB = 0b01110101;
  1243  03A9  3075               	movlw	117
  1244  03AA  0086               	movwf	6	;volatile
  1245                           
  1246                           ;main.c: 103:             break;
  1247  03AB  2BDF               	goto	l1052
  1248  03AC                     l1038:
  1249                           
  1250                           ;main.c: 105:             PORTB = 0b01111101;
  1251  03AC  307D               	movlw	125
  1252  03AD  0086               	movwf	6	;volatile
  1253                           
  1254                           ;main.c: 106:             break;
  1255  03AE  2BDF               	goto	l1052
  1256  03AF                     l1040:
  1257                           
  1258                           ;main.c: 108:             PORTB = 0b11000100;
  1259  03AF  30C4               	movlw	196
  1260  03B0  0086               	movwf	6	;volatile
  1261                           
  1262                           ;main.c: 109:             break;
  1263  03B1  2BDF               	goto	l1052
  1264  03B2                     l1042:
  1265                           
  1266                           ;main.c: 111:             PORTB = 0b11111101;
  1267  03B2  30FD               	movlw	253
  1268  03B3  0086               	movwf	6	;volatile
  1269                           
  1270                           ;main.c: 112:             break;
  1271  03B4  2BDF               	goto	l1052
  1272  03B5                     l1044:
  1273                           
  1274                           ;main.c: 114:             PORTB = 0b11110101;
  1275  03B5  30F5               	movlw	245
  1276  03B6  0086               	movwf	6	;volatile
  1277                           
  1278                           ;main.c: 115:             break;
  1279  03B7  2BDF               	goto	l1052
  1280  03B8                     l1046:
  1281                           
  1282                           ;main.c: 117:             PORTB = 0b00000000;
  1283  03B8  0186               	clrf	6	;volatile
  1284                           
  1285                           ;main.c: 118:             break;
  1286  03B9  2BDF               	goto	l1052
  1287  03BA                     l1050:
  1288                           
  1289                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1290                           ; Switch size 1, requested type "simple"
  1291                           ; Number of cases is 1, Range of values is 0 to 0
  1292                           ; switch strategies available:
  1293                           ; Name         Instructions Cycles
  1294                           ; simple_byte            4     3 (average)
  1295                           ; direct_byte            7     6 (fixed)
  1296                           ; jumptable            260     6 (fixed)
  1297                           ;	Chosen strategy is simple_byte
  1298  03BA  082E               	movf	accendi_cifra@cifra+1,w
  1299  03BB  3A00               	xorlw	0	; case 0
  1300  03BC  1903               	skipnz
  1301  03BD  2BBF               	goto	l1338
  1302  03BE  2BB8               	goto	l1046
  1303  03BF                     l1338:
  1304                           
  1305                           ; Switch size 1, requested type "simple"
  1306                           ; Number of cases is 10, Range of values is 0 to 9
  1307                           ; switch strategies available:
  1308                           ; Name         Instructions Cycles
  1309                           ; direct_byte           16     6 (fixed)
  1310                           ; simple_byte           31    16 (average)
  1311                           ; jumptable            260     6 (fixed)
  1312                           ;	Chosen strategy is simple_byte
  1313  03BF  082D               	movf	accendi_cifra@cifra,w
  1314  03C0  3A00               	xorlw	0	; case 0
  1315  03C1  1903               	skipnz
  1316  03C2  2B9A               	goto	l1026
  1317  03C3  3A01               	xorlw	1	; case 1
  1318  03C4  1903               	skipnz
  1319  03C5  2B9D               	goto	l1028
  1320  03C6  3A03               	xorlw	3	; case 2
  1321  03C7  1903               	skipnz
  1322  03C8  2BA0               	goto	l1030
  1323  03C9  3A01               	xorlw	1	; case 3
  1324  03CA  1903               	skipnz
  1325  03CB  2BA3               	goto	l1032
  1326  03CC  3A07               	xorlw	7	; case 4
  1327  03CD  1903               	skipnz
  1328  03CE  2BA6               	goto	l1034
  1329  03CF  3A01               	xorlw	1	; case 5
  1330  03D0  1903               	skipnz
  1331  03D1  2BA9               	goto	l1036
  1332  03D2  3A03               	xorlw	3	; case 6
  1333  03D3  1903               	skipnz
  1334  03D4  2BAC               	goto	l1038
  1335  03D5  3A01               	xorlw	1	; case 7
  1336  03D6  1903               	skipnz
  1337  03D7  2BAF               	goto	l1040
  1338  03D8  3A0F               	xorlw	15	; case 8
  1339  03D9  1903               	skipnz
  1340  03DA  2BB2               	goto	l1042
  1341  03DB  3A01               	xorlw	1	; case 9
  1342  03DC  1903               	skipnz
  1343  03DD  2BB5               	goto	l1044
  1344  03DE  2BB8               	goto	l1046
  1345  03DF                     l1052:
  1346                           
  1347                           ;main.c: 122:     if (virgola != 0) {
  1348  03DF  082F               	movf	accendi_cifra@virgola,w
  1349  03E0  0430               	iorwf	accendi_cifra@virgola+1,w
  1350  03E1  1903               	btfsc	3,2
  1351  03E2  2BE4               	goto	u411
  1352  03E3  2BE5               	goto	u410
  1353  03E4                     u411:
  1354  03E4  2BE6               	goto	l78
  1355  03E5                     u410:
  1356  03E5                     l1054:
  1357                           
  1358                           ;main.c: 125:         PORTBbits.RB1 = 1;
  1359  03E5  1486               	bsf	6,1	;volatile
  1360  03E6                     l78:
  1361  03E6  0008               	return
  1362  03E7                     __end_of_accendi_cifra:
  1363                           
  1364                           	psect	text4
  1365  02ED                     __ptext4:	
  1366 ;; *************** function ___almod *****************
  1367 ;; Defined at:
  1368 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\almod.c"
  1369 ;; Parameters:    Size  Location     Type
  1370 ;;  divisor         4   11[BANK0 ] long 
  1371 ;;  dividend        4   15[BANK0 ] long 
  1372 ;; Auto vars:     Size  Location     Type
  1373 ;;  sign            1   21[BANK0 ] unsigned char 
  1374 ;;  counter         1   20[BANK0 ] unsigned char 
  1375 ;; Return value:  Size  Location     Type
  1376 ;;                  4   11[BANK0 ] long 
  1377 ;; Registers used:
  1378 ;;		wreg, status,2, status,0
  1379 ;; Tracked objects:
  1380 ;;		On entry : 0/0
  1381 ;;		On exit  : 0/0
  1382 ;;		Unchanged: 0/0
  1383 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1384 ;;      Params:         0       8       0       0
  1385 ;;      Locals:         0       2       0       0
  1386 ;;      Temps:          0       1       0       0
  1387 ;;      Totals:         0      11       0       0
  1388 ;;Total ram usage:       11 bytes
  1389 ;; Hardware stack levels used: 1
  1390 ;; Hardware stack levels required when called: 2
  1391 ;; This function calls:
  1392 ;;		Nothing
  1393 ;; This function is called by:
  1394 ;;		_loop
  1395 ;; This function uses a non-reentrant model
  1396 ;;
  1397                           
  1398                           
  1399                           ;psect for function ___almod
  1400  02ED                     ___almod:
  1401  02ED                     l1104:	
  1402                           ;incstack = 0
  1403                           ; Regs used in ___almod: [wreg+status,2+status,0]
  1404                           
  1405  02ED  1283               	bcf	3,5	;RP0=0, select bank0
  1406  02EE  1303               	bcf	3,6	;RP1=0, select bank0
  1407  02EF  01B5               	clrf	___almod@sign
  1408  02F0                     l1106:
  1409  02F0  1FB2               	btfss	___almod@dividend+3,7
  1410  02F1  2AF3               	goto	u521
  1411  02F2  2AF4               	goto	u520
  1412  02F3                     u521:
  1413  02F3  2B01               	goto	l256
  1414  02F4                     u520:
  1415  02F4                     l1108:
  1416  02F4  09AF               	comf	___almod@dividend,f
  1417  02F5  09B0               	comf	___almod@dividend+1,f
  1418  02F6  09B1               	comf	___almod@dividend+2,f
  1419  02F7  09B2               	comf	___almod@dividend+3,f
  1420  02F8  0AAF               	incf	___almod@dividend,f
  1421  02F9  1903               	skipnz
  1422  02FA  0AB0               	incf	___almod@dividend+1,f
  1423  02FB  1903               	skipnz
  1424  02FC  0AB1               	incf	___almod@dividend+2,f
  1425  02FD  1903               	skipnz
  1426  02FE  0AB2               	incf	___almod@dividend+3,f
  1427  02FF  01B5               	clrf	___almod@sign
  1428  0300  0AB5               	incf	___almod@sign,f
  1429  0301                     l256:
  1430  0301  1FAE               	btfss	___almod@divisor+3,7
  1431  0302  2B04               	goto	u531
  1432  0303  2B05               	goto	u530
  1433  0304                     u531:
  1434  0304  2B10               	goto	l1112
  1435  0305                     u530:
  1436  0305                     l1110:
  1437  0305  09AB               	comf	___almod@divisor,f
  1438  0306  09AC               	comf	___almod@divisor+1,f
  1439  0307  09AD               	comf	___almod@divisor+2,f
  1440  0308  09AE               	comf	___almod@divisor+3,f
  1441  0309  0AAB               	incf	___almod@divisor,f
  1442  030A  1903               	skipnz
  1443  030B  0AAC               	incf	___almod@divisor+1,f
  1444  030C  1903               	skipnz
  1445  030D  0AAD               	incf	___almod@divisor+2,f
  1446  030E  1903               	skipnz
  1447  030F  0AAE               	incf	___almod@divisor+3,f
  1448  0310                     l1112:
  1449  0310  082E               	movf	___almod@divisor+3,w
  1450  0311  042D               	iorwf	___almod@divisor+2,w
  1451  0312  042C               	iorwf	___almod@divisor+1,w
  1452  0313  042B               	iorwf	___almod@divisor,w
  1453  0314  1903               	skipnz
  1454  0315  2B17               	goto	u541
  1455  0316  2B18               	goto	u540
  1456  0317                     u541:
  1457  0317  2B5B               	goto	l1128
  1458  0318                     u540:
  1459  0318                     l1114:
  1460  0318  01B4               	clrf	___almod@counter
  1461  0319  0AB4               	incf	___almod@counter,f
  1462  031A  2B28               	goto	l1118
  1463  031B                     l1116:
  1464  031B  3001               	movlw	1
  1465  031C  00B3               	movwf	??___almod
  1466  031D                     u555:
  1467  031D  1003               	clrc
  1468  031E  0DAB               	rlf	___almod@divisor,f
  1469  031F  0DAC               	rlf	___almod@divisor+1,f
  1470  0320  0DAD               	rlf	___almod@divisor+2,f
  1471  0321  0DAE               	rlf	___almod@divisor+3,f
  1472  0322  0BB3               	decfsz	??___almod,f
  1473  0323  2B1D               	goto	u555
  1474  0324  3001               	movlw	1
  1475  0325  00B3               	movwf	??___almod
  1476  0326  0833               	movf	??___almod,w
  1477  0327  07B4               	addwf	___almod@counter,f
  1478  0328                     l1118:
  1479  0328  1FAE               	btfss	___almod@divisor+3,7
  1480  0329  2B2B               	goto	u561
  1481  032A  2B2C               	goto	u560
  1482  032B                     u561:
  1483  032B  2B1B               	goto	l1116
  1484  032C                     u560:
  1485  032C                     l1120:
  1486  032C  082E               	movf	___almod@divisor+3,w
  1487  032D  0232               	subwf	___almod@dividend+3,w
  1488  032E  1D03               	skipz
  1489  032F  2B3A               	goto	u575
  1490  0330  082D               	movf	___almod@divisor+2,w
  1491  0331  0231               	subwf	___almod@dividend+2,w
  1492  0332  1D03               	skipz
  1493  0333  2B3A               	goto	u575
  1494  0334  082C               	movf	___almod@divisor+1,w
  1495  0335  0230               	subwf	___almod@dividend+1,w
  1496  0336  1D03               	skipz
  1497  0337  2B3A               	goto	u575
  1498  0338  082B               	movf	___almod@divisor,w
  1499  0339  022F               	subwf	___almod@dividend,w
  1500  033A                     u575:
  1501  033A  1C03               	skipc
  1502  033B  2B3D               	goto	u571
  1503  033C  2B3E               	goto	u570
  1504  033D                     u571:
  1505  033D  2B4C               	goto	l1124
  1506  033E                     u570:
  1507  033E                     l1122:
  1508  033E  082B               	movf	___almod@divisor,w
  1509  033F  02AF               	subwf	___almod@dividend,f
  1510  0340  082C               	movf	___almod@divisor+1,w
  1511  0341  1C03               	skipc
  1512  0342  0F2C               	incfsz	___almod@divisor+1,w
  1513  0343  02B0               	subwf	___almod@dividend+1,f
  1514  0344  082D               	movf	___almod@divisor+2,w
  1515  0345  1C03               	skipc
  1516  0346  0F2D               	incfsz	___almod@divisor+2,w
  1517  0347  02B1               	subwf	___almod@dividend+2,f
  1518  0348  082E               	movf	___almod@divisor+3,w
  1519  0349  1C03               	skipc
  1520  034A  0F2E               	incfsz	___almod@divisor+3,w
  1521  034B  02B2               	subwf	___almod@dividend+3,f
  1522  034C                     l1124:
  1523  034C  3001               	movlw	1
  1524  034D                     u585:
  1525  034D  1003               	clrc
  1526  034E  0CAE               	rrf	___almod@divisor+3,f
  1527  034F  0CAD               	rrf	___almod@divisor+2,f
  1528  0350  0CAC               	rrf	___almod@divisor+1,f
  1529  0351  0CAB               	rrf	___almod@divisor,f
  1530  0352  3EFF               	addlw	-1
  1531  0353  1D03               	skipz
  1532  0354  2B4D               	goto	u585
  1533  0355                     l1126:
  1534  0355  3001               	movlw	1
  1535  0356  02B4               	subwf	___almod@counter,f
  1536  0357  1D03               	btfss	3,2
  1537  0358  2B5A               	goto	u591
  1538  0359  2B5B               	goto	u590
  1539  035A                     u591:
  1540  035A  2B2C               	goto	l1120
  1541  035B                     u590:
  1542  035B                     l1128:
  1543  035B  0835               	movf	___almod@sign,w
  1544  035C  1903               	btfsc	3,2
  1545  035D  2B5F               	goto	u601
  1546  035E  2B60               	goto	u600
  1547  035F                     u601:
  1548  035F  2B6B               	goto	l1132
  1549  0360                     u600:
  1550  0360                     l1130:
  1551  0360  09AF               	comf	___almod@dividend,f
  1552  0361  09B0               	comf	___almod@dividend+1,f
  1553  0362  09B1               	comf	___almod@dividend+2,f
  1554  0363  09B2               	comf	___almod@dividend+3,f
  1555  0364  0AAF               	incf	___almod@dividend,f
  1556  0365  1903               	skipnz
  1557  0366  0AB0               	incf	___almod@dividend+1,f
  1558  0367  1903               	skipnz
  1559  0368  0AB1               	incf	___almod@dividend+2,f
  1560  0369  1903               	skipnz
  1561  036A  0AB2               	incf	___almod@dividend+3,f
  1562  036B                     l1132:
  1563  036B  0832               	movf	___almod@dividend+3,w
  1564  036C  00AE               	movwf	?___almod+3
  1565  036D  0831               	movf	___almod@dividend+2,w
  1566  036E  00AD               	movwf	?___almod+2
  1567  036F  0830               	movf	___almod@dividend+1,w
  1568  0370  00AC               	movwf	?___almod+1
  1569  0371  082F               	movf	___almod@dividend,w
  1570  0372  00AB               	movwf	?___almod
  1571  0373                     l266:
  1572  0373  0008               	return
  1573  0374                     __end_of___almod:
  1574                           
  1575                           	psect	text5
  1576  0250                     __ptext5:	
  1577 ;; *************** function ___aldiv *****************
  1578 ;; Defined at:
  1579 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\aldiv.c"
  1580 ;; Parameters:    Size  Location     Type
  1581 ;;  divisor         4   11[BANK0 ] long 
  1582 ;;  dividend        4   15[BANK0 ] long 
  1583 ;; Auto vars:     Size  Location     Type
  1584 ;;  quotient        4   22[BANK0 ] long 
  1585 ;;  sign            1   21[BANK0 ] unsigned char 
  1586 ;;  counter         1   20[BANK0 ] unsigned char 
  1587 ;; Return value:  Size  Location     Type
  1588 ;;                  4   11[BANK0 ] long 
  1589 ;; Registers used:
  1590 ;;		wreg, status,2, status,0
  1591 ;; Tracked objects:
  1592 ;;		On entry : 0/0
  1593 ;;		On exit  : 0/0
  1594 ;;		Unchanged: 0/0
  1595 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1596 ;;      Params:         0       8       0       0
  1597 ;;      Locals:         0       6       0       0
  1598 ;;      Temps:          0       1       0       0
  1599 ;;      Totals:         0      15       0       0
  1600 ;;Total ram usage:       15 bytes
  1601 ;; Hardware stack levels used: 1
  1602 ;; Hardware stack levels required when called: 2
  1603 ;; This function calls:
  1604 ;;		Nothing
  1605 ;; This function is called by:
  1606 ;;		_loop
  1607 ;; This function uses a non-reentrant model
  1608 ;;
  1609                           
  1610                           
  1611                           ;psect for function ___aldiv
  1612  0250                     ___aldiv:
  1613  0250                     l1064:	
  1614                           ;incstack = 0
  1615                           ; Regs used in ___aldiv: [wreg+status,2+status,0]
  1616                           
  1617  0250  1283               	bcf	3,5	;RP0=0, select bank0
  1618  0251  1303               	bcf	3,6	;RP1=0, select bank0
  1619  0252  01B5               	clrf	___aldiv@sign
  1620  0253                     l1066:
  1621  0253  1FAE               	btfss	___aldiv@divisor+3,7
  1622  0254  2A56               	goto	u421
  1623  0255  2A57               	goto	u420
  1624  0256                     u421:
  1625  0256  2A64               	goto	l243
  1626  0257                     u420:
  1627  0257                     l1068:
  1628  0257  09AB               	comf	___aldiv@divisor,f
  1629  0258  09AC               	comf	___aldiv@divisor+1,f
  1630  0259  09AD               	comf	___aldiv@divisor+2,f
  1631  025A  09AE               	comf	___aldiv@divisor+3,f
  1632  025B  0AAB               	incf	___aldiv@divisor,f
  1633  025C  1903               	skipnz
  1634  025D  0AAC               	incf	___aldiv@divisor+1,f
  1635  025E  1903               	skipnz
  1636  025F  0AAD               	incf	___aldiv@divisor+2,f
  1637  0260  1903               	skipnz
  1638  0261  0AAE               	incf	___aldiv@divisor+3,f
  1639  0262  01B5               	clrf	___aldiv@sign
  1640  0263  0AB5               	incf	___aldiv@sign,f
  1641  0264                     l243:
  1642  0264  1FB2               	btfss	___aldiv@dividend+3,7
  1643  0265  2A67               	goto	u431
  1644  0266  2A68               	goto	u430
  1645  0267                     u431:
  1646  0267  2A77               	goto	l1074
  1647  0268                     u430:
  1648  0268                     l1070:
  1649  0268  09AF               	comf	___aldiv@dividend,f
  1650  0269  09B0               	comf	___aldiv@dividend+1,f
  1651  026A  09B1               	comf	___aldiv@dividend+2,f
  1652  026B  09B2               	comf	___aldiv@dividend+3,f
  1653  026C  0AAF               	incf	___aldiv@dividend,f
  1654  026D  1903               	skipnz
  1655  026E  0AB0               	incf	___aldiv@dividend+1,f
  1656  026F  1903               	skipnz
  1657  0270  0AB1               	incf	___aldiv@dividend+2,f
  1658  0271  1903               	skipnz
  1659  0272  0AB2               	incf	___aldiv@dividend+3,f
  1660  0273                     l1072:
  1661  0273  3001               	movlw	1
  1662  0274  00B3               	movwf	??___aldiv
  1663  0275  0833               	movf	??___aldiv,w
  1664  0276  06B5               	xorwf	___aldiv@sign,f
  1665  0277                     l1074:
  1666  0277  3000               	movlw	0
  1667  0278  00B9               	movwf	___aldiv@quotient+3
  1668  0279  3000               	movlw	0
  1669  027A  00B8               	movwf	___aldiv@quotient+2
  1670  027B  3000               	movlw	0
  1671  027C  00B7               	movwf	___aldiv@quotient+1
  1672  027D  3000               	movlw	0
  1673  027E  00B6               	movwf	___aldiv@quotient
  1674  027F                     l1076:
  1675  027F  082E               	movf	___aldiv@divisor+3,w
  1676  0280  042D               	iorwf	___aldiv@divisor+2,w
  1677  0281  042C               	iorwf	___aldiv@divisor+1,w
  1678  0282  042B               	iorwf	___aldiv@divisor,w
  1679  0283  1903               	skipnz
  1680  0284  2A86               	goto	u441
  1681  0285  2A87               	goto	u440
  1682  0286                     u441:
  1683  0286  2AD4               	goto	l1096
  1684  0287                     u440:
  1685  0287                     l1078:
  1686  0287  01B4               	clrf	___aldiv@counter
  1687  0288  0AB4               	incf	___aldiv@counter,f
  1688  0289  2A97               	goto	l1082
  1689  028A                     l1080:
  1690  028A  3001               	movlw	1
  1691  028B  00B3               	movwf	??___aldiv
  1692  028C                     u455:
  1693  028C  1003               	clrc
  1694  028D  0DAB               	rlf	___aldiv@divisor,f
  1695  028E  0DAC               	rlf	___aldiv@divisor+1,f
  1696  028F  0DAD               	rlf	___aldiv@divisor+2,f
  1697  0290  0DAE               	rlf	___aldiv@divisor+3,f
  1698  0291  0BB3               	decfsz	??___aldiv,f
  1699  0292  2A8C               	goto	u455
  1700  0293  3001               	movlw	1
  1701  0294  00B3               	movwf	??___aldiv
  1702  0295  0833               	movf	??___aldiv,w
  1703  0296  07B4               	addwf	___aldiv@counter,f
  1704  0297                     l1082:
  1705  0297  1FAE               	btfss	___aldiv@divisor+3,7
  1706  0298  2A9A               	goto	u461
  1707  0299  2A9B               	goto	u460
  1708  029A                     u461:
  1709  029A  2A8A               	goto	l1080
  1710  029B                     u460:
  1711  029B                     l1084:
  1712  029B  3001               	movlw	1
  1713  029C  00B3               	movwf	??___aldiv
  1714  029D                     u475:
  1715  029D  1003               	clrc
  1716  029E  0DB6               	rlf	___aldiv@quotient,f
  1717  029F  0DB7               	rlf	___aldiv@quotient+1,f
  1718  02A0  0DB8               	rlf	___aldiv@quotient+2,f
  1719  02A1  0DB9               	rlf	___aldiv@quotient+3,f
  1720  02A2  0BB3               	decfsz	??___aldiv,f
  1721  02A3  2A9D               	goto	u475
  1722  02A4                     l1086:
  1723  02A4  082E               	movf	___aldiv@divisor+3,w
  1724  02A5  0232               	subwf	___aldiv@dividend+3,w
  1725  02A6  1D03               	skipz
  1726  02A7  2AB2               	goto	u485
  1727  02A8  082D               	movf	___aldiv@divisor+2,w
  1728  02A9  0231               	subwf	___aldiv@dividend+2,w
  1729  02AA  1D03               	skipz
  1730  02AB  2AB2               	goto	u485
  1731  02AC  082C               	movf	___aldiv@divisor+1,w
  1732  02AD  0230               	subwf	___aldiv@dividend+1,w
  1733  02AE  1D03               	skipz
  1734  02AF  2AB2               	goto	u485
  1735  02B0  082B               	movf	___aldiv@divisor,w
  1736  02B1  022F               	subwf	___aldiv@dividend,w
  1737  02B2                     u485:
  1738  02B2  1C03               	skipc
  1739  02B3  2AB5               	goto	u481
  1740  02B4  2AB6               	goto	u480
  1741  02B5                     u481:
  1742  02B5  2AC5               	goto	l1092
  1743  02B6                     u480:
  1744  02B6                     l1088:
  1745  02B6  082B               	movf	___aldiv@divisor,w
  1746  02B7  02AF               	subwf	___aldiv@dividend,f
  1747  02B8  082C               	movf	___aldiv@divisor+1,w
  1748  02B9  1C03               	skipc
  1749  02BA  0F2C               	incfsz	___aldiv@divisor+1,w
  1750  02BB  02B0               	subwf	___aldiv@dividend+1,f
  1751  02BC  082D               	movf	___aldiv@divisor+2,w
  1752  02BD  1C03               	skipc
  1753  02BE  0F2D               	incfsz	___aldiv@divisor+2,w
  1754  02BF  02B1               	subwf	___aldiv@dividend+2,f
  1755  02C0  082E               	movf	___aldiv@divisor+3,w
  1756  02C1  1C03               	skipc
  1757  02C2  0F2E               	incfsz	___aldiv@divisor+3,w
  1758  02C3  02B2               	subwf	___aldiv@dividend+3,f
  1759  02C4                     l1090:
  1760  02C4  1436               	bsf	___aldiv@quotient,0
  1761  02C5                     l1092:
  1762  02C5  3001               	movlw	1
  1763  02C6                     u495:
  1764  02C6  1003               	clrc
  1765  02C7  0CAE               	rrf	___aldiv@divisor+3,f
  1766  02C8  0CAD               	rrf	___aldiv@divisor+2,f
  1767  02C9  0CAC               	rrf	___aldiv@divisor+1,f
  1768  02CA  0CAB               	rrf	___aldiv@divisor,f
  1769  02CB  3EFF               	addlw	-1
  1770  02CC  1D03               	skipz
  1771  02CD  2AC6               	goto	u495
  1772  02CE                     l1094:
  1773  02CE  3001               	movlw	1
  1774  02CF  02B4               	subwf	___aldiv@counter,f
  1775  02D0  1D03               	btfss	3,2
  1776  02D1  2AD3               	goto	u501
  1777  02D2  2AD4               	goto	u500
  1778  02D3                     u501:
  1779  02D3  2A9B               	goto	l1084
  1780  02D4                     u500:
  1781  02D4                     l1096:
  1782  02D4  0835               	movf	___aldiv@sign,w
  1783  02D5  1903               	btfsc	3,2
  1784  02D6  2AD8               	goto	u511
  1785  02D7  2AD9               	goto	u510
  1786  02D8                     u511:
  1787  02D8  2AE4               	goto	l1100
  1788  02D9                     u510:
  1789  02D9                     l1098:
  1790  02D9  09B6               	comf	___aldiv@quotient,f
  1791  02DA  09B7               	comf	___aldiv@quotient+1,f
  1792  02DB  09B8               	comf	___aldiv@quotient+2,f
  1793  02DC  09B9               	comf	___aldiv@quotient+3,f
  1794  02DD  0AB6               	incf	___aldiv@quotient,f
  1795  02DE  1903               	skipnz
  1796  02DF  0AB7               	incf	___aldiv@quotient+1,f
  1797  02E0  1903               	skipnz
  1798  02E1  0AB8               	incf	___aldiv@quotient+2,f
  1799  02E2  1903               	skipnz
  1800  02E3  0AB9               	incf	___aldiv@quotient+3,f
  1801  02E4                     l1100:
  1802  02E4  0839               	movf	___aldiv@quotient+3,w
  1803  02E5  00AE               	movwf	?___aldiv+3
  1804  02E6  0838               	movf	___aldiv@quotient+2,w
  1805  02E7  00AD               	movwf	?___aldiv+2
  1806  02E8  0837               	movf	___aldiv@quotient+1,w
  1807  02E9  00AC               	movwf	?___aldiv+1
  1808  02EA  0836               	movf	___aldiv@quotient,w
  1809  02EB  00AB               	movwf	?___aldiv
  1810  02EC                     l253:
  1811  02EC  0008               	return
  1812  02ED                     __end_of___aldiv:
  1813                           
  1814                           	psect	text6
  1815  0184                     __ptext6:	
  1816 ;; *************** function _tcInt *****************
  1817 ;; Defined at:
  1818 ;;		line 30 in file "main.c"
  1819 ;; Parameters:    Size  Location     Type
  1820 ;;		None
  1821 ;; Auto vars:     Size  Location     Type
  1822 ;;		None
  1823 ;; Return value:  Size  Location     Type
  1824 ;;                  1    wreg      void 
  1825 ;; Registers used:
  1826 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  1827 ;; Tracked objects:
  1828 ;;		On entry : 0/0
  1829 ;;		On exit  : 0/0
  1830 ;;		Unchanged: 0/0
  1831 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1832 ;;      Params:         0       0       0       0
  1833 ;;      Locals:         0       0       0       0
  1834 ;;      Temps:          0      11       0       0
  1835 ;;      Totals:         0      11       0       0
  1836 ;;Total ram usage:       11 bytes
  1837 ;; Hardware stack levels used: 1
  1838 ;; Hardware stack levels required when called: 1
  1839 ;; This function calls:
  1840 ;;		___lldiv
  1841 ;;		___lmul
  1842 ;; This function is called by:
  1843 ;;		Interrupt level 1
  1844 ;; This function uses a non-reentrant model
  1845 ;;
  1846                           
  1847                           
  1848                           ;psect for function _tcInt
  1849  0184                     _tcInt:
  1850  0184                     i1l1266:
  1851                           
  1852                           ;main.c: 32:     if (TMR0IE && TMR0IF) {
  1853  0184  1E8B               	btfss	11,5	;volatile
  1854  0185  2987               	goto	u73_21
  1855  0186  2988               	goto	u73_20
  1856  0187                     u73_21:
  1857  0187  299B               	goto	i1l1274
  1858  0188                     u73_20:
  1859  0188                     i1l1268:
  1860  0188  1D0B               	btfss	11,2	;volatile
  1861  0189  298B               	goto	u74_21
  1862  018A  298C               	goto	u74_20
  1863  018B                     u74_21:
  1864  018B  299B               	goto	i1l1274
  1865  018C                     u74_20:
  1866  018C                     i1l1270:
  1867                           
  1868                           ;main.c: 33:         TMR0IF=0;
  1869  018C  110B               	bcf	11,2	;volatile
  1870  018D                     i1l1272:
  1871                           
  1872                           ;main.c: 35:         t0_ovl += 256L;
  1873  018D  3000               	movlw	0
  1874  018E  07CE               	addwf	_t0_ovl,f	;volatile
  1875  018F  3001               	movlw	1
  1876  0190  1803               	skipnc
  1877  0191  3002               	movlw	2
  1878  0192  07CF               	addwf	_t0_ovl+1,f	;volatile
  1879  0193  3000               	movlw	0
  1880  0194  1803               	skipnc
  1881  0195  3001               	movlw	1
  1882  0196  07D0               	addwf	_t0_ovl+2,f	;volatile
  1883  0197  3000               	movlw	0
  1884  0198  1803               	skipnc
  1885  0199  3001               	movlw	1
  1886  019A  07D1               	addwf	_t0_ovl+3,f	;volatile
  1887  019B                     i1l1274:
  1888                           
  1889                           ;main.c: 38:     if (TMR2IE && TMR2IF) {
  1890  019B  1683               	bsf	3,5	;RP0=1, select bank1
  1891  019C  1303               	bcf	3,6	;RP1=0, select bank1
  1892  019D  1C8C               	btfss	12,1	;volatile
  1893  019E  29A0               	goto	u75_21
  1894  019F  29A1               	goto	u75_20
  1895  01A0                     u75_21:
  1896  01A0  2A45               	goto	i1l54
  1897  01A1                     u75_20:
  1898  01A1                     i1l1276:
  1899  01A1  1283               	bcf	3,5	;RP0=0, select bank0
  1900  01A2  1303               	bcf	3,6	;RP1=0, select bank0
  1901  01A3  1C8C               	btfss	12,1	;volatile
  1902  01A4  29A6               	goto	u76_21
  1903  01A5  29A7               	goto	u76_20
  1904  01A6                     u76_21:
  1905  01A6  2A45               	goto	i1l54
  1906  01A7                     u76_20:
  1907  01A7                     i1l1278:
  1908                           
  1909                           ;main.c: 39:         TMR2IF=0;
  1910  01A7  108C               	bcf	12,1	;volatile
  1911  01A8                     i1l1280:
  1912                           
  1913                           ;main.c: 42:         millisecondi ++;
  1914  01A8  3001               	movlw	1
  1915  01A9  07D2               	addwf	_millisecondi,f	;volatile
  1916  01AA  1803               	skipnc
  1917  01AB  0AD3               	incf	_millisecondi+1,f	;volatile
  1918  01AC  3000               	movlw	0
  1919  01AD  07D3               	addwf	_millisecondi+1,f	;volatile
  1920  01AE                     i1l1282:
  1921                           
  1922                           ;main.c: 44:         if (millisecondi >= 5000) {
  1923  01AE  0853               	movf	_millisecondi+1,w	;volatile
  1924  01AF  3A80               	xorlw	128
  1925  01B0  00FF               	movwf	btemp+1
  1926  01B1  3093               	movlw	147
  1927  01B2  027F               	subwf	btemp+1,w
  1928  01B3  1D03               	skipz
  1929  01B4  29B7               	goto	u77_25
  1930  01B5  3088               	movlw	136
  1931  01B6  0252               	subwf	_millisecondi,w	;volatile
  1932  01B7                     u77_25:
  1933  01B7  1C03               	skipc
  1934  01B8  29BA               	goto	u77_21
  1935  01B9  29BB               	goto	u77_20
  1936  01BA                     u77_21:
  1937  01BA  2A45               	goto	i1l54
  1938  01BB                     u77_20:
  1939  01BB                     i1l1284:
  1940                           
  1941                           ;main.c: 47:             t0_gross = ((unsigned long int)TMR0 + t0_ovl) * 20L;
  1942  01BB  1283               	bcf	3,5	;RP0=0, select bank0
  1943  01BC  1303               	bcf	3,6	;RP1=0, select bank0
  1944  01BD  0801               	movf	1,w	;volatile
  1945  01BE  074E               	addwf	_t0_ovl,w	;volatile
  1946  01BF  00F0               	movwf	___lmul@multiplier
  1947  01C0  084F               	movf	_t0_ovl+1,w	;volatile
  1948  01C1  1803               	skipnc
  1949  01C2  0F4F               	incfsz	_t0_ovl+1,w	;volatile
  1950  01C3  1003               	clrc
  1951  01C4  00F1               	movwf	___lmul@multiplier+1
  1952  01C5  0850               	movf	_t0_ovl+2,w	;volatile
  1953  01C6  1803               	skipnc
  1954  01C7  0F50               	incfsz	_t0_ovl+2,w	;volatile
  1955  01C8  1003               	clrc
  1956  01C9  00F2               	movwf	___lmul@multiplier+2
  1957  01CA  0851               	movf	_t0_ovl+3,w	;volatile
  1958  01CB  1803               	skipnc
  1959  01CC  0A51               	incf	_t0_ovl+3,w	;volatile
  1960  01CD  00F3               	movwf	___lmul@multiplier+3
  1961  01CE  3000               	movlw	0
  1962  01CF  00F7               	movwf	___lmul@multiplicand+3
  1963  01D0  3000               	movlw	0
  1964  01D1  00F6               	movwf	___lmul@multiplicand+2
  1965  01D2  3000               	movlw	0
  1966  01D3  00F5               	movwf	___lmul@multiplicand+1
  1967  01D4  3014               	movlw	20
  1968  01D5  00F4               	movwf	___lmul@multiplicand
  1969  01D6  24A1               	fcall	___lmul
  1970  01D7  0873               	movf	?___lmul+3,w
  1971  01D8  1283               	bcf	3,5	;RP0=0, select bank0
  1972  01D9  1303               	bcf	3,6	;RP1=0, select bank0
  1973  01DA  00CD               	movwf	_t0_gross+3	;volatile
  1974  01DB  0872               	movf	?___lmul+2,w
  1975  01DC  00CC               	movwf	_t0_gross+2	;volatile
  1976  01DD  0871               	movf	?___lmul+1,w
  1977  01DE  00CB               	movwf	_t0_gross+1	;volatile
  1978  01DF  0870               	movf	?___lmul,w
  1979  01E0  00CA               	movwf	_t0_gross	;volatile
  1980                           
  1981                           ;main.c: 50:             frequenza_x100 = ((frequenza_x100) + ((t0_gross - t0_gross_prec
      +                          )*4)) / 5;
  1982  01E1  3000               	movlw	0
  1983  01E2  00F3               	movwf	___lldiv@divisor+3
  1984  01E3  3000               	movlw	0
  1985  01E4  00F2               	movwf	___lldiv@divisor+2
  1986  01E5  3000               	movlw	0
  1987  01E6  00F1               	movwf	___lldiv@divisor+1
  1988  01E7  3005               	movlw	5
  1989  01E8  00F0               	movwf	___lldiv@divisor
  1990  01E9  0842               	movf	_frequenza_x100,w	;volatile
  1991  01EA  00A0               	movwf	??_tcInt
  1992  01EB  0843               	movf	_frequenza_x100+1,w	;volatile
  1993  01EC  00A1               	movwf	??_tcInt+1
  1994  01ED  0844               	movf	_frequenza_x100+2,w	;volatile
  1995  01EE  00A2               	movwf	??_tcInt+2
  1996  01EF  0845               	movf	_frequenza_x100+3,w	;volatile
  1997  01F0  00A3               	movwf	??_tcInt+3
  1998  01F1  084A               	movf	_t0_gross,w	;volatile
  1999  01F2  00A4               	movwf	??_tcInt+4
  2000  01F3  084B               	movf	_t0_gross+1,w	;volatile
  2001  01F4  00A5               	movwf	??_tcInt+5
  2002  01F5  084C               	movf	_t0_gross+2,w	;volatile
  2003  01F6  00A6               	movwf	??_tcInt+6
  2004  01F7  084D               	movf	_t0_gross+3,w	;volatile
  2005  01F8  00A7               	movwf	??_tcInt+7
  2006  01F9  0846               	movf	_t0_gross_prec,w	;volatile
  2007  01FA  02A4               	subwf	??_tcInt+4,f
  2008  01FB  0847               	movf	_t0_gross_prec+1,w	;volatile
  2009  01FC  1C03               	skipc
  2010  01FD  0F47               	incfsz	_t0_gross_prec+1,w	;volatile
  2011  01FE  2A00               	goto	u78_21
  2012  01FF  2A01               	goto	u78_22
  2013  0200                     u78_21:
  2014  0200  02A5               	subwf	??_tcInt+5,f
  2015  0201                     u78_22:
  2016  0201  0848               	movf	_t0_gross_prec+2,w	;volatile
  2017  0202  1C03               	skipc
  2018  0203  0F48               	incfsz	_t0_gross_prec+2,w	;volatile
  2019  0204  2A06               	goto	u78_23
  2020  0205  2A07               	goto	u78_24
  2021  0206                     u78_23:
  2022  0206  02A6               	subwf	??_tcInt+6,f
  2023  0207                     u78_24:
  2024  0207  0849               	movf	_t0_gross_prec+3,w	;volatile
  2025  0208  1C03               	skipc
  2026  0209  0F49               	incfsz	_t0_gross_prec+3,w	;volatile
  2027  020A  2A0C               	goto	u78_25
  2028  020B  2A0D               	goto	u78_26
  2029  020C                     u78_25:
  2030  020C  02A7               	subwf	??_tcInt+7,f
  2031  020D                     u78_26:
  2032  020D  3002               	movlw	2
  2033  020E                     u79_25:
  2034  020E  1003               	clrc
  2035  020F  0DA4               	rlf	??_tcInt+4,f
  2036  0210  0DA5               	rlf	??_tcInt+5,f
  2037  0211  0DA6               	rlf	??_tcInt+6,f
  2038  0212  0DA7               	rlf	??_tcInt+7,f
  2039  0213                     u79_20:
  2040  0213  3EFF               	addlw	-1
  2041  0214  1D03               	skipz
  2042  0215  2A0E               	goto	u79_25
  2043  0216  0824               	movf	??_tcInt+4,w
  2044  0217  07A0               	addwf	??_tcInt,f
  2045  0218  0825               	movf	??_tcInt+5,w
  2046  0219  1803               	skipnc
  2047  021A  0F25               	incfsz	??_tcInt+5,w
  2048  021B  2A1D               	goto	u80_20
  2049  021C  2A1E               	goto	u80_21
  2050  021D                     u80_20:
  2051  021D  07A1               	addwf	??_tcInt+1,f
  2052  021E                     u80_21:
  2053  021E  0826               	movf	??_tcInt+6,w
  2054  021F  1803               	skipnc
  2055  0220  0F26               	incfsz	??_tcInt+6,w
  2056  0221  2A23               	goto	u80_22
  2057  0222  2A24               	goto	u80_23
  2058  0223                     u80_22:
  2059  0223  07A2               	addwf	??_tcInt+2,f
  2060  0224                     u80_23:
  2061  0224  0827               	movf	??_tcInt+7,w
  2062  0225  1803               	skipnc
  2063  0226  0A27               	incf	??_tcInt+7,w
  2064  0227  07A3               	addwf	??_tcInt+3,f
  2065  0228  0823               	movf	??_tcInt+3,w
  2066  0229  00F7               	movwf	___lldiv@dividend+3
  2067  022A  0822               	movf	??_tcInt+2,w
  2068  022B  00F6               	movwf	___lldiv@dividend+2
  2069  022C  0821               	movf	??_tcInt+1,w
  2070  022D  00F5               	movwf	___lldiv@dividend+1
  2071  022E  0820               	movf	??_tcInt,w
  2072  022F  00F4               	movwf	___lldiv@dividend
  2073  0230  23E7               	fcall	___lldiv
  2074  0231  0873               	movf	?___lldiv+3,w
  2075  0232  1283               	bcf	3,5	;RP0=0, select bank0
  2076  0233  1303               	bcf	3,6	;RP1=0, select bank0
  2077  0234  00C5               	movwf	_frequenza_x100+3	;volatile
  2078  0235  0872               	movf	?___lldiv+2,w
  2079  0236  00C4               	movwf	_frequenza_x100+2	;volatile
  2080  0237  0871               	movf	?___lldiv+1,w
  2081  0238  00C3               	movwf	_frequenza_x100+1	;volatile
  2082  0239  0870               	movf	?___lldiv,w
  2083  023A  00C2               	movwf	_frequenza_x100	;volatile
  2084  023B                     i1l1286:
  2085                           
  2086                           ;main.c: 53:             t0_gross_prec = t0_gross;
  2087  023B  084D               	movf	_t0_gross+3,w	;volatile
  2088  023C  00C9               	movwf	_t0_gross_prec+3	;volatile
  2089  023D  084C               	movf	_t0_gross+2,w	;volatile
  2090  023E  00C8               	movwf	_t0_gross_prec+2	;volatile
  2091  023F  084B               	movf	_t0_gross+1,w	;volatile
  2092  0240  00C7               	movwf	_t0_gross_prec+1	;volatile
  2093  0241  084A               	movf	_t0_gross,w	;volatile
  2094  0242  00C6               	movwf	_t0_gross_prec	;volatile
  2095  0243                     i1l1288:
  2096                           
  2097                           ;main.c: 54:             millisecondi = 0;
  2098  0243  01D2               	clrf	_millisecondi	;volatile
  2099  0244  01D3               	clrf	_millisecondi+1	;volatile
  2100  0245                     i1l54:
  2101  0245  1283               	bcf	3,5	;RP0=0, select bank0
  2102  0246  1303               	bcf	3,6	;RP1=0, select bank0
  2103  0247  082A               	movf	??_tcInt+10,w
  2104  0248  00FF               	movwf	btemp+1
  2105  0249  0829               	movf	??_tcInt+9,w
  2106  024A  008A               	movwf	10
  2107  024B  0E28               	swapf	??_tcInt+8,w
  2108  024C  0083               	movwf	3
  2109  024D  0EFE               	swapf	btemp,f
  2110  024E  0E7E               	swapf	btemp,w
  2111  024F  0009               	retfie
  2112  0250                     __end_of_tcInt:
  2113                           
  2114                           	psect	intentry
  2115  0004                     __pintentry:	
  2116                           ;incstack = 0
  2117                           ; Regs used in _tcInt: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  2118                           
  2119  0004                     interrupt_function:
  2120  007E                     saved_w	set	btemp
  2121  0004  00FE               	movwf	btemp
  2122  0005  0E03               	swapf	3,w
  2123  0006  1283               	bcf	3,5	;RP0=0, select bank0
  2124  0007  1303               	bcf	3,6	;RP1=0, select bank0
  2125  0008  00A8               	movwf	??_tcInt+8
  2126  0009  080A               	movf	10,w
  2127  000A  00A9               	movwf	??_tcInt+9
  2128  000B  087F               	movf	btemp+1,w
  2129  000C  00AA               	movwf	??_tcInt+10
  2130  000D  2984               	ljmp	_tcInt
  2131                           
  2132                           	psect	text7
  2133  04A1                     __ptext7:	
  2134 ;; *************** function ___lmul *****************
  2135 ;; Defined at:
  2136 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\Umul32.c"
  2137 ;; Parameters:    Size  Location     Type
  2138 ;;  multiplier      4    0[COMMON] unsigned long 
  2139 ;;  multiplicand    4    4[COMMON] unsigned long 
  2140 ;; Auto vars:     Size  Location     Type
  2141 ;;  product         4    9[COMMON] unsigned long 
  2142 ;; Return value:  Size  Location     Type
  2143 ;;                  4    0[COMMON] unsigned long 
  2144 ;; Registers used:
  2145 ;;		wreg, status,2, status,0
  2146 ;; Tracked objects:
  2147 ;;		On entry : 0/0
  2148 ;;		On exit  : 0/0
  2149 ;;		Unchanged: 0/0
  2150 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2151 ;;      Params:         8       0       0       0
  2152 ;;      Locals:         4       0       0       0
  2153 ;;      Temps:          1       0       0       0
  2154 ;;      Totals:        13       0       0       0
  2155 ;;Total ram usage:       13 bytes
  2156 ;; Hardware stack levels used: 1
  2157 ;; This function calls:
  2158 ;;		Nothing
  2159 ;; This function is called by:
  2160 ;;		_tcInt
  2161 ;; This function uses a non-reentrant model
  2162 ;;
  2163                           
  2164                           
  2165                           ;psect for function ___lmul
  2166  04A1                     ___lmul:
  2167  04A1                     i1l1228:	
  2168                           ;incstack = 0
  2169                           ; Regs used in ___lmul: [wreg+status,2+status,0]
  2170                           
  2171  04A1  3000               	movlw	0
  2172  04A2  00FC               	movwf	___lmul@product+3
  2173  04A3  3000               	movlw	0
  2174  04A4  00FB               	movwf	___lmul@product+2
  2175  04A5  3000               	movlw	0
  2176  04A6  00FA               	movwf	___lmul@product+1
  2177  04A7  3000               	movlw	0
  2178  04A8  00F9               	movwf	___lmul@product
  2179  04A9                     i1l1230:
  2180  04A9  1C70               	btfss	___lmul@multiplier,0
  2181  04AA  2CAC               	goto	u61_21
  2182  04AB  2CAD               	goto	u61_20
  2183  04AC                     u61_21:
  2184  04AC  2CC4               	goto	i1l1234
  2185  04AD                     u61_20:
  2186  04AD                     i1l1232:
  2187  04AD  0874               	movf	___lmul@multiplicand,w
  2188  04AE  07F9               	addwf	___lmul@product,f
  2189  04AF  0875               	movf	___lmul@multiplicand+1,w
  2190  04B0  1103               	clrz
  2191  04B1  1803               	skipnc
  2192  04B2  3E01               	addlw	1
  2193  04B3  1903               	skipnz
  2194  04B4  2CB6               	goto	u62_21
  2195  04B5  07FA               	addwf	___lmul@product+1,f
  2196  04B6                     u62_21:
  2197  04B6  0876               	movf	___lmul@multiplicand+2,w
  2198  04B7  1103               	clrz
  2199  04B8  1803               	skipnc
  2200  04B9  3E01               	addlw	1
  2201  04BA  1903               	skipnz
  2202  04BB  2CBD               	goto	u62_22
  2203  04BC  07FB               	addwf	___lmul@product+2,f
  2204  04BD                     u62_22:
  2205  04BD  0877               	movf	___lmul@multiplicand+3,w
  2206  04BE  1103               	clrz
  2207  04BF  1803               	skipnc
  2208  04C0  3E01               	addlw	1
  2209  04C1  1903               	skipnz
  2210  04C2  2CC4               	goto	u62_23
  2211  04C3  07FC               	addwf	___lmul@product+3,f
  2212  04C4                     u62_23:
  2213  04C4                     i1l1234:
  2214  04C4  3001               	movlw	1
  2215  04C5  00F8               	movwf	??___lmul
  2216  04C6                     u63_25:
  2217  04C6  1003               	clrc
  2218  04C7  0DF4               	rlf	___lmul@multiplicand,f
  2219  04C8  0DF5               	rlf	___lmul@multiplicand+1,f
  2220  04C9  0DF6               	rlf	___lmul@multiplicand+2,f
  2221  04CA  0DF7               	rlf	___lmul@multiplicand+3,f
  2222  04CB  0BF8               	decfsz	??___lmul,f
  2223  04CC  2CC6               	goto	u63_25
  2224  04CD                     i1l1236:
  2225  04CD  3001               	movlw	1
  2226  04CE                     u64_25:
  2227  04CE  1003               	clrc
  2228  04CF  0CF3               	rrf	___lmul@multiplier+3,f
  2229  04D0  0CF2               	rrf	___lmul@multiplier+2,f
  2230  04D1  0CF1               	rrf	___lmul@multiplier+1,f
  2231  04D2  0CF0               	rrf	___lmul@multiplier,f
  2232  04D3  3EFF               	addlw	-1
  2233  04D4  1D03               	skipz
  2234  04D5  2CCE               	goto	u64_25
  2235  04D6  0873               	movf	___lmul@multiplier+3,w
  2236  04D7  0472               	iorwf	___lmul@multiplier+2,w
  2237  04D8  0471               	iorwf	___lmul@multiplier+1,w
  2238  04D9  0470               	iorwf	___lmul@multiplier,w
  2239  04DA  1D03               	skipz
  2240  04DB  2CDD               	goto	u65_21
  2241  04DC  2CDE               	goto	u65_20
  2242  04DD                     u65_21:
  2243  04DD  2CA9               	goto	i1l1230
  2244  04DE                     u65_20:
  2245  04DE                     i1l1238:
  2246  04DE  087C               	movf	___lmul@product+3,w
  2247  04DF  00F3               	movwf	?___lmul+3
  2248  04E0  087B               	movf	___lmul@product+2,w
  2249  04E1  00F2               	movwf	?___lmul+2
  2250  04E2  087A               	movf	___lmul@product+1,w
  2251  04E3  00F1               	movwf	?___lmul+1
  2252  04E4  0879               	movf	___lmul@product,w
  2253  04E5  00F0               	movwf	?___lmul
  2254  04E6                     i1l192:
  2255  04E6  0008               	return
  2256  04E7                     __end_of___lmul:
  2257                           
  2258                           	psect	text8
  2259  03E7                     __ptext8:	
  2260 ;; *************** function ___lldiv *****************
  2261 ;; Defined at:
  2262 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\__lldiv.c"
  2263 ;; Parameters:    Size  Location     Type
  2264 ;;  divisor         4    0[COMMON] unsigned long 
  2265 ;;  dividend        4    4[COMMON] unsigned long 
  2266 ;; Auto vars:     Size  Location     Type
  2267 ;;  quotient        4    9[COMMON] unsigned long 
  2268 ;;  counter         1   13[COMMON] unsigned char 
  2269 ;; Return value:  Size  Location     Type
  2270 ;;                  4    0[COMMON] unsigned long 
  2271 ;; Registers used:
  2272 ;;		wreg, status,2, status,0
  2273 ;; Tracked objects:
  2274 ;;		On entry : 0/0
  2275 ;;		On exit  : 0/0
  2276 ;;		Unchanged: 0/0
  2277 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2278 ;;      Params:         8       0       0       0
  2279 ;;      Locals:         5       0       0       0
  2280 ;;      Temps:          1       0       0       0
  2281 ;;      Totals:        14       0       0       0
  2282 ;;Total ram usage:       14 bytes
  2283 ;; Hardware stack levels used: 1
  2284 ;; This function calls:
  2285 ;;		Nothing
  2286 ;; This function is called by:
  2287 ;;		_tcInt
  2288 ;; This function uses a non-reentrant model
  2289 ;;
  2290                           
  2291                           
  2292                           ;psect for function ___lldiv
  2293  03E7                     ___lldiv:
  2294  03E7                     i1l1242:	
  2295                           ;incstack = 0
  2296                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  2297                           
  2298  03E7  3000               	movlw	0
  2299  03E8  00FC               	movwf	___lldiv@quotient+3
  2300  03E9  3000               	movlw	0
  2301  03EA  00FB               	movwf	___lldiv@quotient+2
  2302  03EB  3000               	movlw	0
  2303  03EC  00FA               	movwf	___lldiv@quotient+1
  2304  03ED  3000               	movlw	0
  2305  03EE  00F9               	movwf	___lldiv@quotient
  2306  03EF  0873               	movf	___lldiv@divisor+3,w
  2307  03F0  0472               	iorwf	___lldiv@divisor+2,w
  2308  03F1  0471               	iorwf	___lldiv@divisor+1,w
  2309  03F2  0470               	iorwf	___lldiv@divisor,w
  2310  03F3  1903               	skipnz
  2311  03F4  2BF6               	goto	u66_21
  2312  03F5  2BF7               	goto	u66_20
  2313  03F6                     u66_21:
  2314  03F6  2C44               	goto	i1l1262
  2315  03F7                     u66_20:
  2316  03F7                     i1l1244:
  2317  03F7  01FD               	clrf	___lldiv@counter
  2318  03F8  0AFD               	incf	___lldiv@counter,f
  2319  03F9  2C07               	goto	i1l1248
  2320  03FA                     i1l1246:
  2321  03FA  3001               	movlw	1
  2322  03FB  00F8               	movwf	??___lldiv
  2323  03FC                     u67_25:
  2324  03FC  1003               	clrc
  2325  03FD  0DF0               	rlf	___lldiv@divisor,f
  2326  03FE  0DF1               	rlf	___lldiv@divisor+1,f
  2327  03FF  0DF2               	rlf	___lldiv@divisor+2,f
  2328  0400  0DF3               	rlf	___lldiv@divisor+3,f
  2329  0401  0BF8               	decfsz	??___lldiv,f
  2330  0402  2BFC               	goto	u67_25
  2331  0403  3001               	movlw	1
  2332  0404  00F8               	movwf	??___lldiv
  2333  0405  0878               	movf	??___lldiv,w
  2334  0406  07FD               	addwf	___lldiv@counter,f
  2335  0407                     i1l1248:
  2336  0407  1FF3               	btfss	___lldiv@divisor+3,7
  2337  0408  2C0A               	goto	u68_21
  2338  0409  2C0B               	goto	u68_20
  2339  040A                     u68_21:
  2340  040A  2BFA               	goto	i1l1246
  2341  040B                     u68_20:
  2342  040B                     i1l1250:
  2343  040B  3001               	movlw	1
  2344  040C  00F8               	movwf	??___lldiv
  2345  040D                     u69_25:
  2346  040D  1003               	clrc
  2347  040E  0DF9               	rlf	___lldiv@quotient,f
  2348  040F  0DFA               	rlf	___lldiv@quotient+1,f
  2349  0410  0DFB               	rlf	___lldiv@quotient+2,f
  2350  0411  0DFC               	rlf	___lldiv@quotient+3,f
  2351  0412  0BF8               	decfsz	??___lldiv,f
  2352  0413  2C0D               	goto	u69_25
  2353  0414                     i1l1252:
  2354  0414  0873               	movf	___lldiv@divisor+3,w
  2355  0415  0277               	subwf	___lldiv@dividend+3,w
  2356  0416  1D03               	skipz
  2357  0417  2C22               	goto	u70_25
  2358  0418  0872               	movf	___lldiv@divisor+2,w
  2359  0419  0276               	subwf	___lldiv@dividend+2,w
  2360  041A  1D03               	skipz
  2361  041B  2C22               	goto	u70_25
  2362  041C  0871               	movf	___lldiv@divisor+1,w
  2363  041D  0275               	subwf	___lldiv@dividend+1,w
  2364  041E  1D03               	skipz
  2365  041F  2C22               	goto	u70_25
  2366  0420  0870               	movf	___lldiv@divisor,w
  2367  0421  0274               	subwf	___lldiv@dividend,w
  2368  0422                     u70_25:
  2369  0422  1C03               	skipc
  2370  0423  2C25               	goto	u70_21
  2371  0424  2C26               	goto	u70_20
  2372  0425                     u70_21:
  2373  0425  2C35               	goto	i1l1258
  2374  0426                     u70_20:
  2375  0426                     i1l1254:
  2376  0426  0870               	movf	___lldiv@divisor,w
  2377  0427  02F4               	subwf	___lldiv@dividend,f
  2378  0428  0871               	movf	___lldiv@divisor+1,w
  2379  0429  1C03               	skipc
  2380  042A  0F71               	incfsz	___lldiv@divisor+1,w
  2381  042B  02F5               	subwf	___lldiv@dividend+1,f
  2382  042C  0872               	movf	___lldiv@divisor+2,w
  2383  042D  1C03               	skipc
  2384  042E  0F72               	incfsz	___lldiv@divisor+2,w
  2385  042F  02F6               	subwf	___lldiv@dividend+2,f
  2386  0430  0873               	movf	___lldiv@divisor+3,w
  2387  0431  1C03               	skipc
  2388  0432  0F73               	incfsz	___lldiv@divisor+3,w
  2389  0433  02F7               	subwf	___lldiv@dividend+3,f
  2390  0434                     i1l1256:
  2391  0434  1479               	bsf	___lldiv@quotient,0
  2392  0435                     i1l1258:
  2393  0435  3001               	movlw	1
  2394  0436                     u71_25:
  2395  0436  1003               	clrc
  2396  0437  0CF3               	rrf	___lldiv@divisor+3,f
  2397  0438  0CF2               	rrf	___lldiv@divisor+2,f
  2398  0439  0CF1               	rrf	___lldiv@divisor+1,f
  2399  043A  0CF0               	rrf	___lldiv@divisor,f
  2400  043B  3EFF               	addlw	-1
  2401  043C  1D03               	skipz
  2402  043D  2C36               	goto	u71_25
  2403  043E                     i1l1260:
  2404  043E  3001               	movlw	1
  2405  043F  02FD               	subwf	___lldiv@counter,f
  2406  0440  1D03               	btfss	3,2
  2407  0441  2C43               	goto	u72_21
  2408  0442  2C44               	goto	u72_20
  2409  0443                     u72_21:
  2410  0443  2C0B               	goto	i1l1250
  2411  0444                     u72_20:
  2412  0444                     i1l1262:
  2413  0444  087C               	movf	___lldiv@quotient+3,w
  2414  0445  00F3               	movwf	?___lldiv+3
  2415  0446  087B               	movf	___lldiv@quotient+2,w
  2416  0447  00F2               	movwf	?___lldiv+2
  2417  0448  087A               	movf	___lldiv@quotient+1,w
  2418  0449  00F1               	movwf	?___lldiv+1
  2419  044A  0879               	movf	___lldiv@quotient,w
  2420  044B  00F0               	movwf	?___lldiv
  2421  044C                     i1l214:
  2422  044C  0008               	return
  2423  044D                     __end_of___lldiv:
  2424  007E                     btemp	set	126	;btemp
  2425  007E                     wtemp0	set	126
  2426                           
  2427                           	psect	config
  2428                           
  2429                           ;Config register CONFIG @ 0x2007
  2430                           ;	Oscillator Selection bits
  2431                           ;	FOSC = HS, HS oscillator: High-speed crystal/resonator on RA6/OSC2/CLKOUT and RA7/OSC1
      +                          /CLKIN
  2432                           ;	Watchdog Timer Enable bit
  2433                           ;	WDTE = OFF, WDT disabled
  2434                           ;	Power-up Timer Enable bit
  2435                           ;	PWRTE = ON, PWRT enabled
  2436                           ;	RA5/MCLR/VPP Pin Function Select bit
  2437                           ;	MCLRE = ON, RA5/MCLR/VPP pin function is MCLR
  2438                           ;	Brown-out Detect Enable bit
  2439                           ;	BOREN = ON, BOD enabled
  2440                           ;	Low-Voltage Programming Enable bit
  2441                           ;	LVP = OFF, RB4/PGM pin has digital I/O function, HV on MCLR must be used for programmi
      +                          ng
  2442                           ;	Data EE Memory Code Protection bit
  2443                           ;	CPD = OFF, Data memory code protection off
  2444                           ;	Flash Program Memory Code Protection bit
  2445                           ;	CP = OFF, Code protection off
  2446  2007                     	org	8199
  2447  2007  3F62               	dw	16226

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         18
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     34      52
    BANK1            80      0       0
    BANK2            48      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _tcInt in COMMON

    _tcInt->___lldiv

Critical Paths under _main in BANK0

    _main->_loop
    _loop->___aldiv

Critical Paths under _tcInt in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _tcInt in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _tcInt in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    3488
                               _loop
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _loop                                                 8     8      0    3488
                                             26 BANK0      8     8      0
                            ___aldiv
                            ___almod
                      _accendi_cifra
 ---------------------------------------------------------------------------------
 (2) _accendi_cifra                                        6     0      6    1206
                                             11 BANK0      6     0      6
 ---------------------------------------------------------------------------------
 (2) ___almod                                             11     3      8    1056
                                             11 BANK0     11     3      8
 ---------------------------------------------------------------------------------
 (2) ___aldiv                                             15     7      8     908
                                             11 BANK0     15     7      8
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _tcInt                                               11    11      0     558
                                              0 BANK0     11    11      0
                            ___lldiv
                             ___lmul
 ---------------------------------------------------------------------------------
 (4) ___lmul                                              13     5      8     244
                                              0 COMMON    13     5      8
 ---------------------------------------------------------------------------------
 (4) ___lldiv                                             14     6      8     314
                                              0 COMMON    14     6      8
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _loop
     ___aldiv
     ___almod
     _accendi_cifra
   _setup

 _tcInt (ROOT)
   ___lldiv
   ___lmul

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA              80      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      E       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
BANK0               50     22      34       3       65.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      42       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK2            30      0       0       8        0.0%
BANK2               30      0       0       9        0.0%
DATA                 0      0      42      10        0.0%


Microchip Technology PIC Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Mon Jun 19 16:26:57 2023

                     l81 04A0                       l84 0183                       l78 03E6  
                     fsr 0004                      l243 0264                      l253 02EC  
                    l256 0301                      l266 0373                      u410 03E5  
                    u411 03E4                      u500 02D4                      u420 0257  
                    u501 02D3                      u421 0256                      u510 02D9  
                    u430 0268                      _PR2 0092                      u511 02D8  
                    u431 0267                      u440 0287                      u600 0360  
                    u520 02F4                      u441 0286                      u601 035F  
                    u521 02F3                      u530 0305                      u531 0304  
                    u460 029B                      u540 0318                      u461 029A  
                    u541 0317                      u455 028C                      u480 02B6  
                    u560 032C                      u481 02B5                      u561 032B  
                    u570 033E                      u475 029D                      u571 033D  
                    u555 031D                      u485 02B2                      u590 035B  
                    u495 02C6                      u591 035A                      u575 033A  
                    u585 034D                      u817 0051                      u827 009C  
                    u837 00E8                      u847 0133                      u857 017E  
                    indf 0000                     l1010 0374                     l1100 02E4  
                   l1020 0384                     l1012 0378                     l1110 0305  
                   l1030 03A0                     l1014 037B                     l1120 032C  
                   l1112 0310                     l1104 02ED                     l1040 03AF  
                   l1032 03A3                     l1016 037E                     l1024 0387  
                   l1200 008A                     l1130 0360                     l1122 033E  
                   l1114 0318                     l1106 02F0                     l1042 03B2  
                   l1034 03A6                     l1026 039A                     l1018 0381  
                   l1050 03BA                     l1210 00E2                     l1202 0096  
                   l1132 036B                     l1124 034C                     l1116 031B  
                   l1108 02F4                     l1044 03B5                     l1036 03A9  
                   l1028 039D                     l1052 03DF                     l1220 0138  
                   l1212 00ED                     l1204 00A1                     l1140 0452  
                   l1070 0268                     l1126 0355                     l1118 0328  
                   l1054 03E5                     l1046 03B8                     l1038 03AC  
                   l1222 0155                     l1214 010A                     l1206 00BE  
                   l1150 0457                     l1142 0453                     l1080 028A  
                   l1072 0273                     l1064 0250                     l1128 035B  
                   l1224 016C                     l1216 0121                     l1208 00D5  
                   l1160 0463                     l1152 0458                     l1144 0454  
                   l1136 044D                     l1090 02C4                     l1082 0297  
                   l1074 0277                     l1066 0253                     l1226 0178  
                   l1218 012D                     l1170 047A                     l1162 0467  
                   l1154 0459                     l1146 0455                     l1138 0451  
                   l1092 02C5                     l1084 029B                     l1076 027F  
                   l1068 0257                     l1180 0497                     l1172 0484  
                   l1164 046A                     l1156 045A                     l1148 0456  
                   l1094 02CE                     l1086 02A4                     l1078 0287  
                   l1190 0026                     l1182 049F                     l1174 0485  
                   l1166 0475                     l1158 045F                     l1088 02B6  
                   l1096 02D4                     l1336 038C                     l1192 003F  
                   l1184 0016                     l1176 048D                     l1168 0476  
                   l1098 02D9                     l1338 03BF                     l1194 004B  
                   l1186 0019                     l1178 0495                     l1196 0056  
                   l1188 0023                     l1292 04EF                     l1198 0073  
                   l1294 04F0                     i1l54 0245                     _TMR0 0001  
                   _main 04EF                     _loop 0016                     btemp 007E  
                   start 000E          __end_of___aldiv 02ED          __end_of___almod 0374  
                  ?_main 0070                    ?_loop 0070          __end_of___lldiv 044D  
                  i1l214 044C                    i1l192 04E6                    _PORTA 0005  
                  _PORTB 0006                    u61_20 04AD                    u61_21 04AC  
                  u70_20 0426                    u70_21 0425                    u62_21 04B6  
                  u62_22 04BD                    u62_23 04C4                    u70_25 0422  
                  u71_25 0436                    u63_25 04C6                    u72_20 0444  
                  u80_20 021D                    u72_21 0443                    u80_21 021E  
                  u80_22 0223                    u80_23 0224                    u64_25 04CE  
                  u65_20 04DE                    u73_20 0188                    u65_21 04DD  
                  u73_21 0187                    _TRISA 0085                    _TRISB 0086  
                  u66_20 03F7                    u74_20 018C                    u66_21 03F6  
                  u74_21 018B                    u75_20 01A1                    u75_21 01A0  
                  u67_25 03FC                    u68_20 040B                    u76_20 01A7  
                  u68_21 040A                    u76_21 01A6                    u77_20 01BB  
                  u77_21 01BA                    u69_25 040D                    u77_25 01B7  
                  u78_21 0200                    u78_22 0201                    u78_23 0206  
                  u78_24 0207                    u78_25 020C                    u78_26 020D  
                  u79_20 0213                    u79_25 020E      ___lmul@multiplicand 0074  
                  _tcInt 0184   __size_of_accendi_cifra 0073                    _setup 044D  
                  pclath 000A                    loop@f 003E                    status 0003  
                  wtemp0 007E          __initialization 000F             __end_of_main 04F3  
           __end_of_loop 0184                   ??_main 0042                   ??_loop 003A  
                 ?_tcInt 0070                   ?_setup 0070                   i1l1230 04A9  
                 i1l1232 04AD                   i1l1250 040B                   i1l1242 03E7  
                 i1l1234 04C4                   i1l1260 043E                   i1l1252 0414  
                 i1l1244 03F7                   i1l1236 04CD                   i1l1228 04A1  
                 i1l1254 0426                   i1l1246 03FA                   i1l1262 0444  
                 i1l1238 04DE                   i1l1270 018C                   i1l1256 0434  
                 i1l1248 0407                   i1l1280 01A8                   i1l1272 018D  
                 i1l1258 0435                   i1l1282 01AE                   i1l1274 019B  
                 i1l1266 0184                   i1l1284 01BB                   i1l1276 01A1  
                 i1l1268 0188                   i1l1286 023B                   i1l1278 01A7  
                 i1l1288 0243                   _TMR0IE 005D                   _TMR0IF 005A  
                 _TMR2IE 0461                   _TMR2IF 0061                   _t0_ovl 004E  
                 ___lmul 04A1                ??___aldiv 0033                ??___almod 0033  
          _accendi_cifra 0374                ??___lldiv 0078                   saved_w 007E  
__end_of__initialization 0014           __pcstackCOMMON 0070           ?_accendi_cifra 002B  
          __end_of_tcInt 0250            __end_of_setup 04A1           _OPTION_REGbits 0081  
                ??_tcInt 0020                  ??_setup 002B               __pbssBANK0 0042  
             __pmaintext 04EF                  ?___lmul 0070               __pintentry 0004  
         ___lmul@product 0079          ??_accendi_cifra 0031                  ___aldiv 0250  
                ___almod 02ED          __size_of___lmul 0046                  ___lldiv 03E7  
              _CMCONbits 001F                  __ptext1 044D                  __ptext2 0016  
                __ptext3 0374                  __ptext4 02ED                  __ptext5 0250  
                __ptext6 0184                  __ptext7 04A1                  __ptext8 03E7  
              _T2CONbits 0012         ___aldiv@dividend 002F                  clrloop0 04E8  
   end_of_initialization 0014          ___lldiv@divisor 0070          ___lldiv@counter 007D  
       ___aldiv@quotient 0036           _frequenza_x100 0042                _PORTBbits 0006  
 accendi_cifra@posizione 002B           __end_of___lmul 04E7      start_initialization 000F  
               ??___lmul 0078                ___latbits 0000            __pcstackBANK0 0020  
   accendi_cifra@virgola 002F                 ?___aldiv 002B                 ?___almod 002B  
               ?___lldiv 0070         ___almod@dividend 002F           __size_of_tcInt 00CC  
         __size_of_setup 0054          ___aldiv@divisor 002B        interrupt_function 0004  
        ___aldiv@counter 0034             _millisecondi 0052                clear_ram0 04E7  
               _PIE1bits 008C                 _PIR1bits 000C    __end_of_accendi_cifra 03E7  
      ___lmul@multiplier 0070            _t0_gross_prec 0046                 _t0_gross 004A  
       __size_of___aldiv 009D         __size_of___almod 0087         __size_of___lldiv 0066  
              loop@cifra 003C          ___almod@divisor 002B          ___almod@counter 0034  
          __size_of_main 0004            __size_of_loop 016E               _INTCONbits 000B  
     accendi_cifra@cifra 002D                 intlevel1 0000         ___lldiv@dividend 0074  
       ___lldiv@quotient 0079             ___aldiv@sign 0035             ___almod@sign 0035  
