

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Sat Sep 23 13:43:20 2023

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	16F628A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     6                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
     7                           	psect	clrtext,global,class=CODE,delta=2
     8                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
     9                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    11                           	psect	maintext,global,class=CODE,split=1,delta=2
    12                           	psect	text1,local,class=CODE,merge=1,delta=2
    13                           	psect	text2,local,class=CODE,merge=1,delta=2
    14                           	psect	text3,local,class=CODE,merge=1,delta=2
    15                           	psect	text4,local,class=CODE,merge=1,delta=2,group=1
    16                           	psect	text5,local,class=CODE,merge=1,delta=2,group=1
    17                           	psect	text6,local,class=CODE,merge=1,delta=2
    18                           	psect	intentry,global,class=CODE,delta=2
    19                           	psect	text7,local,class=CODE,merge=1,delta=2
    20                           	psect	text8,local,class=CODE,merge=1,delta=2,group=1
    21                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    22                           	dabs	1,0x7E,2
    23  0000                     
    24                           ; Version 2.20
    25                           ; Generated 12/02/2020 GMT
    26                           ; 
    27                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    28                           ; All rights reserved.
    29                           ; 
    30                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    31                           ; 
    32                           ; Redistribution and use in source and binary forms, with or without modification, are
    33                           ; permitted provided that the following conditions are met:
    34                           ; 
    35                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    36                           ;        conditions and the following disclaimer.
    37                           ; 
    38                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    39                           ;        of conditions and the following disclaimer in the documentation and/or other
    40                           ;        materials provided with the distribution.
    41                           ; 
    42                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    43                           ;        software without specific prior written permission.
    44                           ; 
    45                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    46                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    47                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    48                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    49                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    50                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    51                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    52                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    53                           ; 
    54                           ; 
    55                           ; Code-generator required, PIC16F628A Definitions
    56                           ; 
    57                           ; SFR Addresses
    58  0000                     	;# 
    59  0001                     	;# 
    60  0002                     	;# 
    61  0003                     	;# 
    62  0004                     	;# 
    63  0005                     	;# 
    64  0006                     	;# 
    65  000A                     	;# 
    66  000B                     	;# 
    67  000C                     	;# 
    68  000E                     	;# 
    69  000E                     	;# 
    70  000F                     	;# 
    71  0010                     	;# 
    72  0011                     	;# 
    73  0012                     	;# 
    74  0015                     	;# 
    75  0015                     	;# 
    76  0016                     	;# 
    77  0017                     	;# 
    78  0018                     	;# 
    79  0019                     	;# 
    80  001A                     	;# 
    81  001F                     	;# 
    82  0081                     	;# 
    83  0085                     	;# 
    84  0086                     	;# 
    85  008C                     	;# 
    86  008E                     	;# 
    87  0092                     	;# 
    88  0098                     	;# 
    89  0099                     	;# 
    90  009A                     	;# 
    91  009B                     	;# 
    92  009C                     	;# 
    93  009D                     	;# 
    94  009F                     	;# 
    95  0000                     	;# 
    96  0001                     	;# 
    97  0002                     	;# 
    98  0003                     	;# 
    99  0004                     	;# 
   100  0005                     	;# 
   101  0006                     	;# 
   102  000A                     	;# 
   103  000B                     	;# 
   104  000C                     	;# 
   105  000E                     	;# 
   106  000E                     	;# 
   107  000F                     	;# 
   108  0010                     	;# 
   109  0011                     	;# 
   110  0012                     	;# 
   111  0015                     	;# 
   112  0015                     	;# 
   113  0016                     	;# 
   114  0017                     	;# 
   115  0018                     	;# 
   116  0019                     	;# 
   117  001A                     	;# 
   118  001F                     	;# 
   119  0081                     	;# 
   120  0085                     	;# 
   121  0086                     	;# 
   122  008C                     	;# 
   123  008E                     	;# 
   124  0092                     	;# 
   125  0098                     	;# 
   126  0099                     	;# 
   127  009A                     	;# 
   128  009B                     	;# 
   129  009C                     	;# 
   130  009D                     	;# 
   131  009F                     	;# 
   132  0012                     _T2CONbits	set	18
   133  001F                     _CMCONbits	set	31
   134  000C                     _PIR1bits	set	12
   135  000B                     _INTCONbits	set	11
   136  0006                     _PORTBbits	set	6
   137  0005                     _PORTA	set	5
   138  0006                     _PORTB	set	6
   139  0001                     _TMR0	set	1
   140  0061                     _TMR2IF	set	97
   141  005A                     _TMR0IF	set	90
   142  005D                     _TMR0IE	set	93
   143  0092                     _PR2	set	146
   144  0086                     _TRISB	set	134
   145  0085                     _TRISA	set	133
   146  008C                     _PIE1bits	set	140
   147  0081                     _OPTION_REGbits	set	129
   148  0461                     _TMR2IE	set	1121
   149                           
   150                           	psect	cinit
   151  000F                     start_initialization:	
   152                           ; #config settings
   153                           
   154  000F                     __initialization:
   155                           
   156                           ; Clear objects allocated to BANK0
   157  000F  1383               	bcf	3,7	;select IRP bank0
   158  0010  3048               	movlw	low __pbssBANK0
   159  0011  0084               	movwf	4
   160  0012  3068               	movlw	low (__pbssBANK0+32)
   161  0013  27A3               	fcall	clear_ram0
   162                           
   163                           ; Clear objects allocated to BANK1
   164  0014  30BC               	movlw	low __pbssBANK1
   165  0015  0084               	movwf	4
   166  0016  30CC               	movlw	low (__pbssBANK1+16)
   167  0017  27A3               	fcall	clear_ram0
   168  0018                     end_of_initialization:	
   169                           ;End of C runtime variable initialization code
   170                           
   171  0018                     __end_of__initialization:
   172  0018  0183               	clrf	3
   173  0019  2F77               	ljmp	_main	;jump to C main() function
   174                           
   175                           	psect	bssBANK0
   176  0048                     __pbssBANK0:
   177  0048                     _frequenza_x1:
   178  0048                     	ds	4
   179  004C                     _frequenza_x100:
   180  004C                     	ds	4
   181  0050                     _frequenza_x10000:
   182  0050                     	ds	4
   183  0054                     _t0_gross_prec:
   184  0054                     	ds	4
   185  0058                     _t0_gross:
   186  0058                     	ds	4
   187  005C                     _t0_ovl:
   188  005C                     	ds	4
   189  0060                     _millisecondi:
   190  0060                     	ds	2
   191  0062                     _t0_prec:
   192  0062                     	ds	2
   193  0064                     _periodo_lento:
   194  0064                     	ds	4
   195                           
   196                           	psect	bssBANK1
   197  00BC                     __pbssBANK1:
   198  00BC                     loop@f_x10000:
   199  00BC                     	ds	4
   200  00C0                     loop@f_x100:
   201  00C0                     	ds	4
   202  00C4                     loop@f_x1:
   203  00C4                     	ds	4
   204  00C8                     loop@f:
   205  00C8                     	ds	4
   206                           
   207                           	psect	clrtext
   208  07A3                     clear_ram0:	
   209                           ;	Called with FSR containing the base address, and
   210                           ;	W with the last address+1
   211                           
   212  07A3  0064               	clrwdt	;clear the watchdog before getting into this loop
   213  07A4                     clrloop0:
   214  07A4  0180               	clrf	0	;clear RAM location pointed to by FSR
   215  07A5  0A84               	incf	4,f	;increment pointer
   216  07A6  0604               	xorwf	4,w	;XOR with final address
   217  07A7  1903               	btfsc	3,2	;have we reached the end yet?
   218  07A8  3400               	retlw	0	;all done for this memory range, return
   219  07A9  0604               	xorwf	4,w	;XOR again to restore value
   220  07AA  2FA4               	goto	clrloop0	;do the next byte
   221                           
   222                           	psect	cstackBANK1
   223  00A0                     __pcstackBANK1:
   224  00A0                     ?_accendi_cifra:
   225  00A0                     ??_setup:	
   226                           ; 1 bytes @ 0x0
   227                           
   228  00A0                     ?___lldiv:	
   229                           ; 1 bytes @ 0x0
   230                           
   231  00A0                     ?___llmod:	
   232                           ; 4 bytes @ 0x0
   233                           
   234  00A0                     accendi_cifra@posizione:	
   235                           ; 4 bytes @ 0x0
   236                           
   237  00A0                     ___lldiv@divisor:	
   238                           ; 2 bytes @ 0x0
   239                           
   240  00A0                     ___llmod@divisor:	
   241                           ; 4 bytes @ 0x0
   242                           
   243                           
   244                           ; 4 bytes @ 0x0
   245  00A0                     	ds	2
   246  00A2                     accendi_cifra@cifra:
   247                           
   248                           ; 2 bytes @ 0x2
   249  00A2                     	ds	2
   250  00A4                     accendi_cifra@virgola:
   251  00A4                     ___lldiv@dividend:	
   252                           ; 2 bytes @ 0x4
   253                           
   254  00A4                     ___llmod@dividend:	
   255                           ; 4 bytes @ 0x4
   256                           
   257                           
   258                           ; 4 bytes @ 0x4
   259  00A4                     	ds	2
   260  00A6                     ??_accendi_cifra:
   261                           
   262                           ; 1 bytes @ 0x6
   263  00A6                     	ds	2
   264  00A8                     ??___lldiv:
   265  00A8                     ??___llmod:	
   266                           ; 1 bytes @ 0x8
   267                           
   268                           
   269                           ; 1 bytes @ 0x8
   270  00A8                     	ds	1
   271  00A9                     ___llmod@counter:
   272  00A9                     ___lldiv@quotient:	
   273                           ; 1 bytes @ 0x9
   274                           
   275                           
   276                           ; 4 bytes @ 0x9
   277  00A9                     	ds	4
   278  00AD                     ___lldiv@counter:
   279                           
   280                           ; 1 bytes @ 0xD
   281  00AD                     	ds	1
   282  00AE                     ?_loop:
   283  00AE                     loop@refresh:	
   284                           ; 1 bytes @ 0xE
   285                           
   286                           
   287                           ; 2 bytes @ 0xE
   288  00AE                     	ds	2
   289  00B0                     ??_loop:
   290                           
   291                           ; 1 bytes @ 0x10
   292  00B0                     	ds	2
   293  00B2                     loop@dp1:
   294                           
   295                           ; 2 bytes @ 0x12
   296  00B2                     	ds	2
   297  00B4                     loop@dp2:
   298                           
   299                           ; 2 bytes @ 0x14
   300  00B4                     	ds	2
   301  00B6                     loop@dp3:
   302                           
   303                           ; 2 bytes @ 0x16
   304  00B6                     	ds	2
   305  00B8                     loop@cifra:
   306                           
   307                           ; 2 bytes @ 0x18
   308  00B8                     	ds	2
   309  00BA                     ??_main:
   310  00BA                     main@n:	
   311                           ; 1 bytes @ 0x1A
   312                           
   313                           
   314                           ; 2 bytes @ 0x1A
   315  00BA                     	ds	2
   316                           
   317                           	psect	cstackCOMMON
   318  0070                     __pcstackCOMMON:
   319  0070                     ?_tcInt:
   320  0070                     ?_setup:	
   321                           ; 1 bytes @ 0x0
   322                           
   323  0070                     ?_main:	
   324                           ; 1 bytes @ 0x0
   325                           
   326  0070                     ?___lmul:	
   327                           ; 1 bytes @ 0x0
   328                           
   329  0070                     ___lmul@multiplier:	
   330                           ; 4 bytes @ 0x0
   331                           
   332                           
   333                           ; 4 bytes @ 0x0
   334  0070                     	ds	4
   335  0074                     ___lmul@multiplicand:
   336                           
   337                           ; 4 bytes @ 0x4
   338  0074                     	ds	4
   339  0078                     ??___lmul:
   340                           
   341                           ; 1 bytes @ 0x8
   342  0078                     	ds	1
   343  0079                     ___lmul@product:
   344                           
   345                           ; 4 bytes @ 0x9
   346  0079                     	ds	4
   347  007D                     ??i1___lldiv:
   348                           
   349                           ; 1 bytes @ 0xD
   350  007D                     	ds	1
   351                           
   352                           	psect	cstackBANK0
   353  0020                     __pcstackBANK0:
   354  0020                     ?i1___lldiv:
   355  0020                     i1___lldiv@divisor:	
   356                           ; 4 bytes @ 0x0
   357                           
   358                           
   359                           ; 4 bytes @ 0x0
   360  0020                     	ds	4
   361  0024                     i1___lldiv@dividend:
   362                           
   363                           ; 4 bytes @ 0x4
   364  0024                     	ds	4
   365  0028                     i1___lldiv@quotient:
   366                           
   367                           ; 4 bytes @ 0x8
   368  0028                     	ds	4
   369  002C                     i1___lldiv@counter:
   370                           
   371                           ; 1 bytes @ 0xC
   372  002C                     	ds	1
   373  002D                     ??_tcInt:
   374                           
   375                           ; 1 bytes @ 0xD
   376  002D                     	ds	15
   377  003C                     tcInt@frequenza_x10000_temp:
   378                           
   379                           ; 4 bytes @ 0x1C
   380  003C                     	ds	4
   381  0040                     tcInt@frequenza_x1_temp:
   382                           
   383                           ; 4 bytes @ 0x20
   384  0040                     	ds	4
   385  0044                     tcInt@ratio:
   386                           
   387                           ; 4 bytes @ 0x24
   388  0044                     	ds	4
   389                           
   390                           	psect	maintext
   391  0777                     __pmaintext:	
   392 ;;
   393 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   394 ;;
   395 ;; *************** function _main *****************
   396 ;; Defined at:
   397 ;;		line 310 in file "main.c"
   398 ;; Parameters:    Size  Location     Type
   399 ;;		None
   400 ;; Auto vars:     Size  Location     Type
   401 ;;  n               2   26[BANK1 ] int 
   402 ;; Return value:  Size  Location     Type
   403 ;;                  1    wreg      void 
   404 ;; Registers used:
   405 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   406 ;; Tracked objects:
   407 ;;		On entry : B00/0
   408 ;;		On exit  : 0/0
   409 ;;		Unchanged: 0/0
   410 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   411 ;;      Params:         0       0       0       0
   412 ;;      Locals:         0       0       2       0
   413 ;;      Temps:          0       0       0       0
   414 ;;      Totals:         0       0       2       0
   415 ;;Total ram usage:        2 bytes
   416 ;; Hardware stack levels required when called: 4
   417 ;; This function calls:
   418 ;;		_loop
   419 ;;		_setup
   420 ;; This function is called by:
   421 ;;		Startup code after reset
   422 ;; This function uses a non-reentrant model
   423 ;;
   424                           
   425                           
   426                           ;psect for function _main
   427  0777                     _main:
   428  0777                     l1649:	
   429                           ;incstack = 0
   430                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   431                           
   432                           
   433                           ;main.c: 311:     int n = 0;
   434  0777  1683               	bsf	3,5	;RP0=1, select bank1
   435  0778  1303               	bcf	3,6	;RP1=0, select bank1
   436  0779  01BA               	clrf	main@n^(0+128)
   437  077A  01BB               	clrf	(main@n+1)^(0+128)
   438  077B                     l1651:
   439                           
   440                           ;main.c: 313:     setup();
   441  077B  26DD               	fcall	_setup
   442  077C                     l1653:
   443                           
   444                           ;main.c: 317:         n++;
   445  077C  3001               	movlw	1
   446  077D  1683               	bsf	3,5	;RP0=1, select bank1
   447  077E  1303               	bcf	3,6	;RP1=0, select bank1
   448  077F  07BA               	addwf	main@n^(0+128),f
   449  0780  1803               	skipnc
   450  0781  0ABB               	incf	(main@n+1)^(0+128),f
   451  0782  3000               	movlw	0
   452  0783  07BB               	addwf	(main@n+1)^(0+128),f
   453  0784                     l1655:
   454                           
   455                           ;main.c: 318:         if ( n < 100 ) {
   456  0784  083B               	movf	(main@n+1)^(0+128),w
   457  0785  3A80               	xorlw	128
   458  0786  00FF               	movwf	btemp+1
   459  0787  3080               	movlw	128
   460  0788  027F               	subwf	btemp+1,w
   461  0789  1D03               	skipz
   462  078A  2F8D               	goto	u1005
   463  078B  3064               	movlw	100
   464  078C  023A               	subwf	main@n^(0+128),w
   465  078D                     u1005:
   466  078D  1803               	skipnc
   467  078E  2F90               	goto	u1001
   468  078F  2F91               	goto	u1000
   469  0790                     u1001:
   470  0790  2F98               	goto	l1659
   471  0791                     u1000:
   472  0791                     l1657:
   473                           
   474                           ;main.c: 319:             loop( 0 );
   475  0791  3000               	movlw	0
   476  0792  1683               	bsf	3,5	;RP0=1, select bank1
   477  0793  1303               	bcf	3,6	;RP1=0, select bank1
   478  0794  00AE               	movwf	loop@refresh^(0+128)
   479  0795  00AF               	movwf	(loop@refresh+1)^(0+128)
   480  0796  22DA               	fcall	_loop
   481                           
   482                           ;main.c: 320:         }
   483  0797  2F7C               	goto	l1653
   484  0798                     l1659:
   485                           
   486                           ;main.c: 322:             n = 0;
   487  0798  1683               	bsf	3,5	;RP0=1, select bank1
   488  0799  1303               	bcf	3,6	;RP1=0, select bank1
   489  079A  01BA               	clrf	main@n^(0+128)
   490  079B  01BB               	clrf	(main@n+1)^(0+128)
   491  079C                     l1661:
   492                           
   493                           ;main.c: 323:             loop( 1 );
   494  079C  3001               	movlw	1
   495  079D  00AE               	movwf	loop@refresh^(0+128)
   496  079E  3000               	movlw	0
   497  079F  00AF               	movwf	(loop@refresh^(0+128)+1)
   498  07A0  22DA               	fcall	_loop
   499  07A1  2F7C               	goto	l1653
   500  07A2  280E               	ljmp	start
   501  07A3                     __end_of_main:
   502                           
   503                           	psect	text1
   504  06DD                     __ptext1:	
   505 ;; *************** function _setup *****************
   506 ;; Defined at:
   507 ;;		line 171 in file "main.c"
   508 ;; Parameters:    Size  Location     Type
   509 ;;		None
   510 ;; Auto vars:     Size  Location     Type
   511 ;;		None
   512 ;; Return value:  Size  Location     Type
   513 ;;                  1    wreg      void 
   514 ;; Registers used:
   515 ;;		wreg, status,2, status,0
   516 ;; Tracked objects:
   517 ;;		On entry : 0/0
   518 ;;		On exit  : 0/0
   519 ;;		Unchanged: 0/0
   520 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   521 ;;      Params:         0       0       0       0
   522 ;;      Locals:         0       0       0       0
   523 ;;      Temps:          0       0       0       0
   524 ;;      Totals:         0       0       0       0
   525 ;;Total ram usage:        0 bytes
   526 ;; Hardware stack levels used: 1
   527 ;; Hardware stack levels required when called: 2
   528 ;; This function calls:
   529 ;;		Nothing
   530 ;; This function is called by:
   531 ;;		_main
   532 ;; This function uses a non-reentrant model
   533 ;;
   534                           
   535                           
   536                           ;psect for function _setup
   537  06DD                     _setup:
   538  06DD                     l1521:	
   539                           ;incstack = 0
   540                           ; Regs used in _setup: [wreg+status,2+status,0]
   541                           
   542                           
   543                           ;main.c: 173:     OPTION_REGbits.PS = 7;
   544  06DD  3007               	movlw	7
   545  06DE  1683               	bsf	3,5	;RP0=1, select bank1
   546  06DF  1303               	bcf	3,6	;RP1=0, select bank1
   547  06E0  0481               	iorwf	1,f	;volatile
   548  06E1                     l1523:
   549                           
   550                           ;main.c: 174:     OPTION_REGbits.PSA = 1;
   551  06E1  1581               	bsf	1,3	;volatile
   552  06E2                     l1525:
   553                           
   554                           ;main.c: 175:     OPTION_REGbits.T0SE = 0;
   555  06E2  1201               	bcf	1,4	;volatile
   556  06E3                     l1527:
   557                           
   558                           ;main.c: 176:     OPTION_REGbits.T0CS = 1;
   559  06E3  1681               	bsf	1,5	;volatile
   560  06E4                     l1529:
   561                           
   562                           ;main.c: 177:     OPTION_REGbits.nRBPU = 1;
   563  06E4  1781               	bsf	1,7	;volatile
   564  06E5                     l1531:
   565                           
   566                           ;main.c: 179:     INTCONbits.GIE = 0;
   567  06E5  138B               	bcf	11,7	;volatile
   568  06E6                     l1533:
   569                           
   570                           ;main.c: 181:     INTCONbits.PEIE = 1;
   571  06E6  170B               	bsf	11,6	;volatile
   572  06E7                     l1535:
   573                           
   574                           ;main.c: 182:     INTCONbits.T0IE = 1;
   575  06E7  168B               	bsf	11,5	;volatile
   576  06E8                     l1537:
   577                           
   578                           ;main.c: 183:     INTCONbits.T0IF = 0;
   579  06E8  110B               	bcf	11,2	;volatile
   580  06E9                     l1539:
   581                           
   582                           ;main.c: 185:     PIE1bits.TMR2IE = 1;
   583  06E9  148C               	bsf	12,1	;volatile
   584  06EA                     l1541:
   585                           
   586                           ;main.c: 187:     PIR1bits.TMR2IF = 0;
   587  06EA  1283               	bcf	3,5	;RP0=0, select bank0
   588  06EB  1303               	bcf	3,6	;RP1=0, select bank0
   589  06EC  108C               	bcf	12,1	;volatile
   590                           
   591                           ;main.c: 191:     CMCONbits.CM = 7;
   592  06ED  3007               	movlw	7
   593  06EE  049F               	iorwf	31,f	;volatile
   594  06EF                     l1543:
   595                           
   596                           ;main.c: 193:     TRISA = 0b00110000;
   597  06EF  3030               	movlw	48
   598  06F0  1683               	bsf	3,5	;RP0=1, select bank1
   599  06F1  1303               	bcf	3,6	;RP1=0, select bank1
   600  06F2  0085               	movwf	5	;volatile
   601  06F3                     l1545:
   602                           
   603                           ;main.c: 197:     PORTA = 0b00001111;
   604  06F3  300F               	movlw	15
   605  06F4  1283               	bcf	3,5	;RP0=0, select bank0
   606  06F5  1303               	bcf	3,6	;RP1=0, select bank0
   607  06F6  0085               	movwf	5	;volatile
   608  06F7                     l1547:
   609                           
   610                           ;main.c: 199:     TRISB = 0b00000000;
   611  06F7  1683               	bsf	3,5	;RP0=1, select bank1
   612  06F8  1303               	bcf	3,6	;RP1=0, select bank1
   613  06F9  0186               	clrf	6	;volatile
   614  06FA                     l1549:
   615                           
   616                           ;main.c: 208:     PORTB = 0b00000000;
   617  06FA  1283               	bcf	3,5	;RP0=0, select bank0
   618  06FB  1303               	bcf	3,6	;RP1=0, select bank0
   619  06FC  0186               	clrf	6	;volatile
   620                           
   621                           ;main.c: 215:     T2CONbits.T2CKPS = 1;
   622  06FD  0812               	movf	18,w	;volatile
   623  06FE  39FC               	andlw	-4
   624  06FF  3801               	iorlw	1
   625  0700  0092               	movwf	18	;volatile
   626                           
   627                           ;main.c: 216:     T2CONbits.TOUTPS = 10-1;
   628  0701  0812               	movf	18,w	;volatile
   629  0702  3987               	andlw	-121
   630  0703  3848               	iorlw	72
   631  0704  0092               	movwf	18	;volatile
   632  0705                     l1551:
   633                           
   634                           ;main.c: 217:     T2CONbits.TMR2ON = 1;
   635  0705  1512               	bsf	18,2	;volatile
   636  0706                     l1553:
   637                           
   638                           ;main.c: 218:     PR2 = 125 - 1;
   639  0706  307C               	movlw	124
   640  0707  1683               	bsf	3,5	;RP0=1, select bank1
   641  0708  1303               	bcf	3,6	;RP1=0, select bank1
   642  0709  0092               	movwf	18	;volatile
   643  070A                     l1555:
   644                           
   645                           ;main.c: 221:     t0_ovl = 0;
   646  070A  3000               	movlw	0
   647  070B  1283               	bcf	3,5	;RP0=0, select bank0
   648  070C  1303               	bcf	3,6	;RP1=0, select bank0
   649  070D  00DF               	movwf	_t0_ovl+3	;volatile
   650  070E  3000               	movlw	0
   651  070F  00DE               	movwf	_t0_ovl+2	;volatile
   652  0710  3000               	movlw	0
   653  0711  00DD               	movwf	_t0_ovl+1	;volatile
   654  0712  3000               	movlw	0
   655  0713  00DC               	movwf	_t0_ovl	;volatile
   656  0714                     l1557:
   657                           
   658                           ;main.c: 222:     TMR0 = 0;
   659  0714  0181               	clrf	1	;volatile
   660  0715                     l1559:
   661                           
   662                           ;main.c: 224:     t0_gross = 0;
   663  0715  3000               	movlw	0
   664  0716  00DB               	movwf	_t0_gross+3	;volatile
   665  0717  3000               	movlw	0
   666  0718  00DA               	movwf	_t0_gross+2	;volatile
   667  0719  3000               	movlw	0
   668  071A  00D9               	movwf	_t0_gross+1	;volatile
   669  071B  3000               	movlw	0
   670  071C  00D8               	movwf	_t0_gross	;volatile
   671  071D                     l1561:
   672                           
   673                           ;main.c: 225:     t0_gross_prec = 0;
   674  071D  3000               	movlw	0
   675  071E  00D7               	movwf	_t0_gross_prec+3	;volatile
   676  071F  3000               	movlw	0
   677  0720  00D6               	movwf	_t0_gross_prec+2	;volatile
   678  0721  3000               	movlw	0
   679  0722  00D5               	movwf	_t0_gross_prec+1	;volatile
   680  0723  3000               	movlw	0
   681  0724  00D4               	movwf	_t0_gross_prec	;volatile
   682  0725                     l1563:
   683                           
   684                           ;main.c: 227:     millisecondi = 0;
   685  0725  01E0               	clrf	_millisecondi	;volatile
   686  0726  01E1               	clrf	_millisecondi+1	;volatile
   687  0727                     l1565:
   688                           
   689                           ;main.c: 228:     frequenza_x100 = 0;
   690  0727  3000               	movlw	0
   691  0728  00CF               	movwf	_frequenza_x100+3	;volatile
   692  0729  3000               	movlw	0
   693  072A  00CE               	movwf	_frequenza_x100+2	;volatile
   694  072B  3000               	movlw	0
   695  072C  00CD               	movwf	_frequenza_x100+1	;volatile
   696  072D  3000               	movlw	0
   697  072E  00CC               	movwf	_frequenza_x100	;volatile
   698  072F                     l1567:
   699                           
   700                           ;main.c: 230:     INTCONbits.GIE = 1;
   701  072F  178B               	bsf	11,7	;volatile
   702  0730                     l99:
   703  0730  0008               	return
   704  0731                     __end_of_setup:
   705                           
   706                           	psect	text2
   707  02DA                     __ptext2:	
   708 ;; *************** function _loop *****************
   709 ;; Defined at:
   710 ;;		line 233 in file "main.c"
   711 ;; Parameters:    Size  Location     Type
   712 ;;  refresh         2   14[BANK1 ] int 
   713 ;; Auto vars:     Size  Location     Type
   714 ;;  cifra           2   24[BANK1 ] int 
   715 ;;  dp3             2   22[BANK1 ] int 
   716 ;;  dp2             2   20[BANK1 ] int 
   717 ;;  dp1             2   18[BANK1 ] int 
   718 ;; Return value:  Size  Location     Type
   719 ;;                  1    wreg      void 
   720 ;; Registers used:
   721 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   722 ;; Tracked objects:
   723 ;;		On entry : 0/0
   724 ;;		On exit  : 0/0
   725 ;;		Unchanged: 0/0
   726 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   727 ;;      Params:         0       0       2       0
   728 ;;      Locals:         0       0       8       0
   729 ;;      Temps:          0       0       2       0
   730 ;;      Totals:         0       0      12       0
   731 ;;Total ram usage:       12 bytes
   732 ;; Hardware stack levels used: 1
   733 ;; Hardware stack levels required when called: 3
   734 ;; This function calls:
   735 ;;		___lldiv
   736 ;;		___llmod
   737 ;;		_accendi_cifra
   738 ;; This function is called by:
   739 ;;		_main
   740 ;; This function uses a non-reentrant model
   741 ;;
   742                           
   743                           
   744                           ;psect for function _loop
   745  02DA                     _loop:
   746  02DA                     l1569:	
   747                           ;incstack = 0
   748                           ; Regs used in _loop: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   749                           
   750                           
   751                           ;main.c: 236:     static unsigned long f, f_x1, f_x100, f_x10000;;main.c: 237:     int c
      +                          ifra, dp1, dp2, dp3;;main.c: 239:     if (refresh) {
   752  02DA  1683               	bsf	3,5	;RP0=1, select bank1
   753  02DB  1303               	bcf	3,6	;RP1=0, select bank1
   754  02DC  082E               	movf	loop@refresh^(0+128),w
   755  02DD  042F               	iorwf	(loop@refresh+1)^(0+128),w
   756  02DE  1903               	btfsc	3,2
   757  02DF  2AE1               	goto	u961
   758  02E0  2AE2               	goto	u960
   759  02E1                     u961:
   760  02E1  2B2C               	goto	l1577
   761  02E2                     u960:
   762  02E2                     l1571:
   763                           
   764                           ;main.c: 240:         TMR2IE = 0;
   765  02E2  108C               	bcf	12,1	;volatile
   766  02E3                     l1573:
   767                           
   768                           ;main.c: 241:         f_x1 = frequenza_x1;
   769  02E3  1283               	bcf	3,5	;RP0=0, select bank0
   770  02E4  1303               	bcf	3,6	;RP1=0, select bank0
   771  02E5  084B               	movf	_frequenza_x1+3,w	;volatile
   772  02E6  1683               	bsf	3,5	;RP0=1, select bank1
   773  02E7  1303               	bcf	3,6	;RP1=0, select bank1
   774  02E8  00C7               	movwf	(loop@f_x1+3)^(0+128)
   775  02E9  1283               	bcf	3,5	;RP0=0, select bank0
   776  02EA  1303               	bcf	3,6	;RP1=0, select bank0
   777  02EB  084A               	movf	_frequenza_x1+2,w	;volatile
   778  02EC  1683               	bsf	3,5	;RP0=1, select bank1
   779  02ED  1303               	bcf	3,6	;RP1=0, select bank1
   780  02EE  00C6               	movwf	(loop@f_x1+2)^(0+128)
   781  02EF  1283               	bcf	3,5	;RP0=0, select bank0
   782  02F0  1303               	bcf	3,6	;RP1=0, select bank0
   783  02F1  0849               	movf	_frequenza_x1+1,w	;volatile
   784  02F2  1683               	bsf	3,5	;RP0=1, select bank1
   785  02F3  1303               	bcf	3,6	;RP1=0, select bank1
   786  02F4  00C5               	movwf	(loop@f_x1+1)^(0+128)
   787  02F5  1283               	bcf	3,5	;RP0=0, select bank0
   788  02F6  1303               	bcf	3,6	;RP1=0, select bank0
   789  02F7  0848               	movf	_frequenza_x1,w	;volatile
   790  02F8  1683               	bsf	3,5	;RP0=1, select bank1
   791  02F9  1303               	bcf	3,6	;RP1=0, select bank1
   792  02FA  00C4               	movwf	loop@f_x1^(0+128)
   793                           
   794                           ;main.c: 242:         f_x100 = frequenza_x100;
   795  02FB  1283               	bcf	3,5	;RP0=0, select bank0
   796  02FC  1303               	bcf	3,6	;RP1=0, select bank0
   797  02FD  084F               	movf	_frequenza_x100+3,w	;volatile
   798  02FE  1683               	bsf	3,5	;RP0=1, select bank1
   799  02FF  1303               	bcf	3,6	;RP1=0, select bank1
   800  0300  00C3               	movwf	(loop@f_x100+3)^(0+128)
   801  0301  1283               	bcf	3,5	;RP0=0, select bank0
   802  0302  1303               	bcf	3,6	;RP1=0, select bank0
   803  0303  084E               	movf	_frequenza_x100+2,w	;volatile
   804  0304  1683               	bsf	3,5	;RP0=1, select bank1
   805  0305  1303               	bcf	3,6	;RP1=0, select bank1
   806  0306  00C2               	movwf	(loop@f_x100+2)^(0+128)
   807  0307  1283               	bcf	3,5	;RP0=0, select bank0
   808  0308  1303               	bcf	3,6	;RP1=0, select bank0
   809  0309  084D               	movf	_frequenza_x100+1,w	;volatile
   810  030A  1683               	bsf	3,5	;RP0=1, select bank1
   811  030B  1303               	bcf	3,6	;RP1=0, select bank1
   812  030C  00C1               	movwf	(loop@f_x100+1)^(0+128)
   813  030D  1283               	bcf	3,5	;RP0=0, select bank0
   814  030E  1303               	bcf	3,6	;RP1=0, select bank0
   815  030F  084C               	movf	_frequenza_x100,w	;volatile
   816  0310  1683               	bsf	3,5	;RP0=1, select bank1
   817  0311  1303               	bcf	3,6	;RP1=0, select bank1
   818  0312  00C0               	movwf	loop@f_x100^(0+128)
   819                           
   820                           ;main.c: 243:         f_x10000 = frequenza_x10000;
   821  0313  1283               	bcf	3,5	;RP0=0, select bank0
   822  0314  1303               	bcf	3,6	;RP1=0, select bank0
   823  0315  0853               	movf	_frequenza_x10000+3,w	;volatile
   824  0316  1683               	bsf	3,5	;RP0=1, select bank1
   825  0317  1303               	bcf	3,6	;RP1=0, select bank1
   826  0318  00BF               	movwf	(loop@f_x10000+3)^(0+128)
   827  0319  1283               	bcf	3,5	;RP0=0, select bank0
   828  031A  1303               	bcf	3,6	;RP1=0, select bank0
   829  031B  0852               	movf	_frequenza_x10000+2,w	;volatile
   830  031C  1683               	bsf	3,5	;RP0=1, select bank1
   831  031D  1303               	bcf	3,6	;RP1=0, select bank1
   832  031E  00BE               	movwf	(loop@f_x10000+2)^(0+128)
   833  031F  1283               	bcf	3,5	;RP0=0, select bank0
   834  0320  1303               	bcf	3,6	;RP1=0, select bank0
   835  0321  0851               	movf	_frequenza_x10000+1,w	;volatile
   836  0322  1683               	bsf	3,5	;RP0=1, select bank1
   837  0323  1303               	bcf	3,6	;RP1=0, select bank1
   838  0324  00BD               	movwf	(loop@f_x10000+1)^(0+128)
   839  0325  1283               	bcf	3,5	;RP0=0, select bank0
   840  0326  1303               	bcf	3,6	;RP1=0, select bank0
   841  0327  0850               	movf	_frequenza_x10000,w	;volatile
   842  0328  1683               	bsf	3,5	;RP0=1, select bank1
   843  0329  1303               	bcf	3,6	;RP1=0, select bank1
   844  032A  00BC               	movwf	loop@f_x10000^(0+128)
   845  032B                     l1575:
   846                           
   847                           ;main.c: 245:         TMR2IE = 1;
   848  032B  148C               	bsf	12,1	;volatile
   849  032C                     l1577:
   850                           
   851                           ;main.c: 255:     if (f_x1 > 999L) {
   852  032C  0847               	movf	(loop@f_x1+3)^(0+128),w
   853  032D  1D03               	btfss	3,2
   854  032E  2B3E               	goto	u970
   855  032F  0846               	movf	(loop@f_x1+2)^(0+128),w
   856  0330  1D03               	btfss	3,2
   857  0331  2B3E               	goto	u970
   858  0332  3003               	movlw	3
   859  0333  0245               	subwf	(loop@f_x1+1)^(0+128),w
   860  0334  1D03               	skipz
   861  0335  2B3A               	goto	u973
   862  0336  30E8               	movlw	232
   863  0337  0244               	subwf	loop@f_x1^(0+128),w
   864  0338  1D03               	skipz
   865  0339  2B3A               	goto	u973
   866  033A                     u973:
   867  033A  1C03               	btfss	3,0
   868  033B  2B3D               	goto	u971
   869  033C  2B3E               	goto	u970
   870  033D                     u971:
   871  033D  2B4F               	goto	l1587
   872  033E                     u970:
   873  033E                     l1579:
   874                           
   875                           ;main.c: 257:         f = f_x1;
   876  033E  1683               	bsf	3,5	;RP0=1, select bank1
   877  033F  1303               	bcf	3,6	;RP1=0, select bank1
   878  0340  0847               	movf	(loop@f_x1+3)^(0+128),w
   879  0341  00CB               	movwf	(loop@f+3)^(0+128)
   880  0342  0846               	movf	(loop@f_x1+2)^(0+128),w
   881  0343  00CA               	movwf	(loop@f+2)^(0+128)
   882  0344  0845               	movf	(loop@f_x1+1)^(0+128),w
   883  0345  00C9               	movwf	(loop@f+1)^(0+128)
   884  0346  0844               	movf	loop@f_x1^(0+128),w
   885  0347  00C8               	movwf	loop@f^(0+128)
   886  0348                     l1581:
   887                           
   888                           ;main.c: 258:         dp1 = 0; dp2 = 0; dp3 = 0;
   889  0348  01B2               	clrf	loop@dp1^(0+128)
   890  0349  01B3               	clrf	(loop@dp1+1)^(0+128)
   891  034A                     l1583:
   892  034A  01B4               	clrf	loop@dp2^(0+128)
   893  034B  01B5               	clrf	(loop@dp2+1)^(0+128)
   894  034C                     l1585:
   895  034C  01B6               	clrf	loop@dp3^(0+128)
   896  034D  01B7               	clrf	(loop@dp3+1)^(0+128)
   897                           
   898                           ;main.c: 259:     }
   899  034E  2BBE               	goto	l1611
   900  034F                     l1587:
   901                           
   902                           ;main.c: 261:     if (f_x10000 < 100000L) {
   903  034F  1683               	bsf	3,5	;RP0=1, select bank1
   904  0350  1303               	bcf	3,6	;RP1=0, select bank1
   905  0351  083F               	movf	(loop@f_x10000+3)^(0+128),w
   906  0352  1D03               	btfss	3,2
   907  0353  2B63               	goto	u981
   908  0354  3001               	movlw	1
   909  0355  023E               	subwf	(loop@f_x10000+2)^(0+128),w
   910  0356  1D03               	skipz
   911  0357  2B60               	goto	u983
   912  0358  3086               	movlw	134
   913  0359  023D               	subwf	(loop@f_x10000+1)^(0+128),w
   914  035A  1D03               	skipz
   915  035B  2B60               	goto	u983
   916  035C  30A0               	movlw	160
   917  035D  023C               	subwf	loop@f_x10000^(0+128),w
   918  035E  1D03               	skipz
   919  035F  2B60               	goto	u983
   920  0360                     u983:
   921  0360  1803               	btfsc	3,0
   922  0361  2B63               	goto	u981
   923  0362  2B64               	goto	u980
   924  0363                     u981:
   925  0363  2B73               	goto	l1595
   926  0364                     u980:
   927  0364                     l1589:
   928                           
   929                           ;main.c: 263:         f = f_x10000;
   930  0364  1683               	bsf	3,5	;RP0=1, select bank1
   931  0365  1303               	bcf	3,6	;RP1=0, select bank1
   932  0366  083F               	movf	(loop@f_x10000+3)^(0+128),w
   933  0367  00CB               	movwf	(loop@f+3)^(0+128)
   934  0368  083E               	movf	(loop@f_x10000+2)^(0+128),w
   935  0369  00CA               	movwf	(loop@f+2)^(0+128)
   936  036A  083D               	movf	(loop@f_x10000+1)^(0+128),w
   937  036B  00C9               	movwf	(loop@f+1)^(0+128)
   938  036C  083C               	movf	loop@f_x10000^(0+128),w
   939  036D  00C8               	movwf	loop@f^(0+128)
   940                           
   941                           ;main.c: 264:         dp1 = 1; dp2 = 0; dp3 = 0;
   942  036E  3001               	movlw	1
   943  036F  00B2               	movwf	loop@dp1^(0+128)
   944  0370  3000               	movlw	0
   945  0371  00B3               	movwf	(loop@dp1^(0+128)+1)
   946  0372  2B4A               	goto	l1583
   947  0373                     l1595:
   948                           
   949                           ;main.c: 267:     if (f_x10000 < 500000L) {
   950  0373  1683               	bsf	3,5	;RP0=1, select bank1
   951  0374  1303               	bcf	3,6	;RP1=0, select bank1
   952  0375  083F               	movf	(loop@f_x10000+3)^(0+128),w
   953  0376  1D03               	btfss	3,2
   954  0377  2B87               	goto	u991
   955  0378  3007               	movlw	7
   956  0379  023E               	subwf	(loop@f_x10000+2)^(0+128),w
   957  037A  1D03               	skipz
   958  037B  2B84               	goto	u993
   959  037C  30A1               	movlw	161
   960  037D  023D               	subwf	(loop@f_x10000+1)^(0+128),w
   961  037E  1D03               	skipz
   962  037F  2B84               	goto	u993
   963  0380  3020               	movlw	32
   964  0381  023C               	subwf	loop@f_x10000^(0+128),w
   965  0382  1D03               	skipz
   966  0383  2B84               	goto	u993
   967  0384                     u993:
   968  0384  1803               	btfsc	3,0
   969  0385  2B87               	goto	u991
   970  0386  2B88               	goto	u990
   971  0387                     u991:
   972  0387  2BAC               	goto	l1605
   973  0388                     u990:
   974  0388                     l1597:
   975                           
   976                           ;main.c: 269:         f = f_x10000 / 10L;
   977  0388  3000               	movlw	0
   978  0389  1683               	bsf	3,5	;RP0=1, select bank1
   979  038A  1303               	bcf	3,6	;RP1=0, select bank1
   980  038B  00A3               	movwf	(___lldiv@divisor+3)^(0+128)
   981  038C  3000               	movlw	0
   982  038D  00A2               	movwf	(___lldiv@divisor+2)^(0+128)
   983  038E  3000               	movlw	0
   984  038F  00A1               	movwf	(___lldiv@divisor+1)^(0+128)
   985  0390  300A               	movlw	10
   986  0391  00A0               	movwf	___lldiv@divisor^(0+128)
   987  0392  083F               	movf	(loop@f_x10000+3)^(0+128),w
   988  0393  00A7               	movwf	(___lldiv@dividend+3)^(0+128)
   989  0394  083E               	movf	(loop@f_x10000+2)^(0+128),w
   990  0395  00A6               	movwf	(___lldiv@dividend+2)^(0+128)
   991  0396  083D               	movf	(loop@f_x10000+1)^(0+128),w
   992  0397  00A5               	movwf	(___lldiv@dividend+1)^(0+128)
   993  0398  083C               	movf	loop@f_x10000^(0+128),w
   994  0399  00A4               	movwf	___lldiv@dividend^(0+128)
   995  039A  25B7               	fcall	___lldiv
   996  039B  1683               	bsf	3,5	;RP0=1, select bank1
   997  039C  1303               	bcf	3,6	;RP1=0, select bank1
   998  039D  0823               	movf	(?___lldiv+3)^(0+128),w
   999  039E  00CB               	movwf	(loop@f+3)^(0+128)
  1000  039F  0822               	movf	(?___lldiv+2)^(0+128),w
  1001  03A0  00CA               	movwf	(loop@f+2)^(0+128)
  1002  03A1  0821               	movf	(?___lldiv+1)^(0+128),w
  1003  03A2  00C9               	movwf	(loop@f+1)^(0+128)
  1004  03A3  0820               	movf	?___lldiv^(0+128),w
  1005  03A4  00C8               	movwf	loop@f^(0+128)
  1006  03A5                     l1599:
  1007                           
  1008                           ;main.c: 270:         dp1 = 0; dp2 = 1; dp3 = 0;
  1009  03A5  01B2               	clrf	loop@dp1^(0+128)
  1010  03A6  01B3               	clrf	(loop@dp1+1)^(0+128)
  1011  03A7                     l1601:
  1012  03A7  3001               	movlw	1
  1013  03A8  00B4               	movwf	loop@dp2^(0+128)
  1014  03A9  3000               	movlw	0
  1015  03AA  00B5               	movwf	(loop@dp2^(0+128)+1)
  1016  03AB  2B4C               	goto	l1585
  1017  03AC                     l1605:
  1018                           
  1019                           ;main.c: 274:         f = f_x100;
  1020  03AC  1683               	bsf	3,5	;RP0=1, select bank1
  1021  03AD  1303               	bcf	3,6	;RP1=0, select bank1
  1022  03AE  0843               	movf	(loop@f_x100+3)^(0+128),w
  1023  03AF  00CB               	movwf	(loop@f+3)^(0+128)
  1024  03B0  0842               	movf	(loop@f_x100+2)^(0+128),w
  1025  03B1  00CA               	movwf	(loop@f+2)^(0+128)
  1026  03B2  0841               	movf	(loop@f_x100+1)^(0+128),w
  1027  03B3  00C9               	movwf	(loop@f+1)^(0+128)
  1028  03B4  0840               	movf	loop@f_x100^(0+128),w
  1029  03B5  00C8               	movwf	loop@f^(0+128)
  1030  03B6                     l1607:
  1031                           
  1032                           ;main.c: 275:         dp1 = 0; dp2 = 0; dp3 = 1;
  1033  03B6  01B2               	clrf	loop@dp1^(0+128)
  1034  03B7  01B3               	clrf	(loop@dp1+1)^(0+128)
  1035  03B8                     l1609:
  1036  03B8  01B4               	clrf	loop@dp2^(0+128)
  1037  03B9  01B5               	clrf	(loop@dp2+1)^(0+128)
  1038  03BA  3001               	movlw	1
  1039  03BB  00B6               	movwf	loop@dp3^(0+128)
  1040  03BC  3000               	movlw	0
  1041  03BD  00B7               	movwf	(loop@dp3^(0+128)+1)
  1042  03BE                     l1611:
  1043                           
  1044                           ;main.c: 279:     cifra = f % 10;
  1045  03BE  3000               	movlw	0
  1046  03BF  00A3               	movwf	(___llmod@divisor+3)^(0+128)
  1047  03C0  3000               	movlw	0
  1048  03C1  00A2               	movwf	(___llmod@divisor+2)^(0+128)
  1049  03C2  3000               	movlw	0
  1050  03C3  00A1               	movwf	(___llmod@divisor+1)^(0+128)
  1051  03C4  300A               	movlw	10
  1052  03C5  00A0               	movwf	___llmod@divisor^(0+128)
  1053  03C6  084B               	movf	(loop@f+3)^(0+128),w
  1054  03C7  00A7               	movwf	(___llmod@dividend+3)^(0+128)
  1055  03C8  084A               	movf	(loop@f+2)^(0+128),w
  1056  03C9  00A6               	movwf	(___llmod@dividend+2)^(0+128)
  1057  03CA  0849               	movf	(loop@f+1)^(0+128),w
  1058  03CB  00A5               	movwf	(___llmod@dividend+1)^(0+128)
  1059  03CC  0848               	movf	loop@f^(0+128),w
  1060  03CD  00A4               	movwf	___llmod@dividend^(0+128)
  1061  03CE  2687               	fcall	___llmod
  1062  03CF  1683               	bsf	3,5	;RP0=1, select bank1
  1063  03D0  1303               	bcf	3,6	;RP1=0, select bank1
  1064  03D1  0821               	movf	(?___llmod+1)^(0+128),w
  1065  03D2  00B9               	movwf	(loop@cifra+1)^(0+128)
  1066  03D3  0820               	movf	?___llmod^(0+128),w
  1067  03D4  00B8               	movwf	loop@cifra^(0+128)
  1068  03D5                     l1613:
  1069                           
  1070                           ;main.c: 281:     accendi_cifra( 5, cifra, 0 );
  1071  03D5  3005               	movlw	5
  1072  03D6  00A0               	movwf	accendi_cifra@posizione^(0+128)
  1073  03D7  3000               	movlw	0
  1074  03D8  00A1               	movwf	(accendi_cifra@posizione^(0+128)+1)
  1075  03D9  0839               	movf	(loop@cifra+1)^(0+128),w
  1076  03DA  00A3               	movwf	(accendi_cifra@cifra+1)^(0+128)
  1077  03DB  0838               	movf	loop@cifra^(0+128),w
  1078  03DC  00A2               	movwf	accendi_cifra@cifra^(0+128)
  1079  03DD  3000               	movlw	0
  1080  03DE  00A4               	movwf	accendi_cifra@virgola^(0+128)
  1081  03DF  00A5               	movwf	(accendi_cifra@virgola+1)^(0+128)
  1082  03E0  251C               	fcall	_accendi_cifra
  1083  03E1                     l1615:
  1084                           
  1085                           ;main.c: 282:     _delay((unsigned long)((1)*(20000000/4000.0)));
  1086  03E1  3007               	movlw	7
  1087  03E2  1683               	bsf	3,5	;RP0=1, select bank1
  1088  03E3  1303               	bcf	3,6	;RP1=0, select bank1
  1089  03E4  00B1               	movwf	(??_loop^(0+128)+1)
  1090  03E5  307C               	movlw	124
  1091  03E6  00B0               	movwf	??_loop^(0+128)
  1092  03E7                     u1017:
  1093  03E7  0BB0               	decfsz	??_loop^(0+128),f
  1094  03E8  2BE7               	goto	u1017
  1095  03E9  0BB1               	decfsz	(??_loop^(0+128)+1),f
  1096  03EA  2BE7               	goto	u1017
  1097  03EB  2BEC               	nop2
  1098  03EC                     l1617:
  1099                           
  1100                           ;main.c: 284:     f = f / 10;
  1101  03EC  3000               	movlw	0
  1102  03ED  1683               	bsf	3,5	;RP0=1, select bank1
  1103  03EE  1303               	bcf	3,6	;RP1=0, select bank1
  1104  03EF  00A3               	movwf	(___lldiv@divisor+3)^(0+128)
  1105  03F0  3000               	movlw	0
  1106  03F1  00A2               	movwf	(___lldiv@divisor+2)^(0+128)
  1107  03F2  3000               	movlw	0
  1108  03F3  00A1               	movwf	(___lldiv@divisor+1)^(0+128)
  1109  03F4  300A               	movlw	10
  1110  03F5  00A0               	movwf	___lldiv@divisor^(0+128)
  1111  03F6  084B               	movf	(loop@f+3)^(0+128),w
  1112  03F7  00A7               	movwf	(___lldiv@dividend+3)^(0+128)
  1113  03F8  084A               	movf	(loop@f+2)^(0+128),w
  1114  03F9  00A6               	movwf	(___lldiv@dividend+2)^(0+128)
  1115  03FA  0849               	movf	(loop@f+1)^(0+128),w
  1116  03FB  00A5               	movwf	(___lldiv@dividend+1)^(0+128)
  1117  03FC  0848               	movf	loop@f^(0+128),w
  1118  03FD  00A4               	movwf	___lldiv@dividend^(0+128)
  1119  03FE  25B7               	fcall	___lldiv
  1120  03FF  1683               	bsf	3,5	;RP0=1, select bank1
  1121  0400  1303               	bcf	3,6	;RP1=0, select bank1
  1122  0401  0823               	movf	(?___lldiv+3)^(0+128),w
  1123  0402  00CB               	movwf	(loop@f+3)^(0+128)
  1124  0403  0822               	movf	(?___lldiv+2)^(0+128),w
  1125  0404  00CA               	movwf	(loop@f+2)^(0+128)
  1126  0405  0821               	movf	(?___lldiv+1)^(0+128),w
  1127  0406  00C9               	movwf	(loop@f+1)^(0+128)
  1128  0407  0820               	movf	?___lldiv^(0+128),w
  1129  0408  00C8               	movwf	loop@f^(0+128)
  1130  0409                     l1619:
  1131                           
  1132                           ;main.c: 285:     cifra = f % 10;
  1133  0409  3000               	movlw	0
  1134  040A  00A3               	movwf	(___llmod@divisor+3)^(0+128)
  1135  040B  3000               	movlw	0
  1136  040C  00A2               	movwf	(___llmod@divisor+2)^(0+128)
  1137  040D  3000               	movlw	0
  1138  040E  00A1               	movwf	(___llmod@divisor+1)^(0+128)
  1139  040F  300A               	movlw	10
  1140  0410  00A0               	movwf	___llmod@divisor^(0+128)
  1141  0411  084B               	movf	(loop@f+3)^(0+128),w
  1142  0412  00A7               	movwf	(___llmod@dividend+3)^(0+128)
  1143  0413  084A               	movf	(loop@f+2)^(0+128),w
  1144  0414  00A6               	movwf	(___llmod@dividend+2)^(0+128)
  1145  0415  0849               	movf	(loop@f+1)^(0+128),w
  1146  0416  00A5               	movwf	(___llmod@dividend+1)^(0+128)
  1147  0417  0848               	movf	loop@f^(0+128),w
  1148  0418  00A4               	movwf	___llmod@dividend^(0+128)
  1149  0419  2687               	fcall	___llmod
  1150  041A  1683               	bsf	3,5	;RP0=1, select bank1
  1151  041B  1303               	bcf	3,6	;RP1=0, select bank1
  1152  041C  0821               	movf	(?___llmod+1)^(0+128),w
  1153  041D  00B9               	movwf	(loop@cifra+1)^(0+128)
  1154  041E  0820               	movf	?___llmod^(0+128),w
  1155  041F  00B8               	movwf	loop@cifra^(0+128)
  1156  0420                     l1621:
  1157                           
  1158                           ;main.c: 287:     accendi_cifra( 4, cifra, 0 );
  1159  0420  3004               	movlw	4
  1160  0421  00A0               	movwf	accendi_cifra@posizione^(0+128)
  1161  0422  3000               	movlw	0
  1162  0423  00A1               	movwf	(accendi_cifra@posizione^(0+128)+1)
  1163  0424  0839               	movf	(loop@cifra+1)^(0+128),w
  1164  0425  00A3               	movwf	(accendi_cifra@cifra+1)^(0+128)
  1165  0426  0838               	movf	loop@cifra^(0+128),w
  1166  0427  00A2               	movwf	accendi_cifra@cifra^(0+128)
  1167  0428  3000               	movlw	0
  1168  0429  00A4               	movwf	accendi_cifra@virgola^(0+128)
  1169  042A  00A5               	movwf	(accendi_cifra@virgola+1)^(0+128)
  1170  042B  251C               	fcall	_accendi_cifra
  1171  042C                     l1623:
  1172                           
  1173                           ;main.c: 288:     _delay((unsigned long)((1)*(20000000/4000.0)));
  1174  042C  3007               	movlw	7
  1175  042D  1683               	bsf	3,5	;RP0=1, select bank1
  1176  042E  1303               	bcf	3,6	;RP1=0, select bank1
  1177  042F  00B1               	movwf	(??_loop^(0+128)+1)
  1178  0430  307C               	movlw	124
  1179  0431  00B0               	movwf	??_loop^(0+128)
  1180  0432                     u1027:
  1181  0432  0BB0               	decfsz	??_loop^(0+128),f
  1182  0433  2C32               	goto	u1027
  1183  0434  0BB1               	decfsz	(??_loop^(0+128)+1),f
  1184  0435  2C32               	goto	u1027
  1185  0436  2C37               	nop2
  1186  0437                     l1625:
  1187                           
  1188                           ;main.c: 290:     f = f / 10;
  1189  0437  3000               	movlw	0
  1190  0438  1683               	bsf	3,5	;RP0=1, select bank1
  1191  0439  1303               	bcf	3,6	;RP1=0, select bank1
  1192  043A  00A3               	movwf	(___lldiv@divisor+3)^(0+128)
  1193  043B  3000               	movlw	0
  1194  043C  00A2               	movwf	(___lldiv@divisor+2)^(0+128)
  1195  043D  3000               	movlw	0
  1196  043E  00A1               	movwf	(___lldiv@divisor+1)^(0+128)
  1197  043F  300A               	movlw	10
  1198  0440  00A0               	movwf	___lldiv@divisor^(0+128)
  1199  0441  084B               	movf	(loop@f+3)^(0+128),w
  1200  0442  00A7               	movwf	(___lldiv@dividend+3)^(0+128)
  1201  0443  084A               	movf	(loop@f+2)^(0+128),w
  1202  0444  00A6               	movwf	(___lldiv@dividend+2)^(0+128)
  1203  0445  0849               	movf	(loop@f+1)^(0+128),w
  1204  0446  00A5               	movwf	(___lldiv@dividend+1)^(0+128)
  1205  0447  0848               	movf	loop@f^(0+128),w
  1206  0448  00A4               	movwf	___lldiv@dividend^(0+128)
  1207  0449  25B7               	fcall	___lldiv
  1208  044A  1683               	bsf	3,5	;RP0=1, select bank1
  1209  044B  1303               	bcf	3,6	;RP1=0, select bank1
  1210  044C  0823               	movf	(?___lldiv+3)^(0+128),w
  1211  044D  00CB               	movwf	(loop@f+3)^(0+128)
  1212  044E  0822               	movf	(?___lldiv+2)^(0+128),w
  1213  044F  00CA               	movwf	(loop@f+2)^(0+128)
  1214  0450  0821               	movf	(?___lldiv+1)^(0+128),w
  1215  0451  00C9               	movwf	(loop@f+1)^(0+128)
  1216  0452  0820               	movf	?___lldiv^(0+128),w
  1217  0453  00C8               	movwf	loop@f^(0+128)
  1218  0454                     l1627:
  1219                           
  1220                           ;main.c: 291:     cifra = f % 10;
  1221  0454  3000               	movlw	0
  1222  0455  00A3               	movwf	(___llmod@divisor+3)^(0+128)
  1223  0456  3000               	movlw	0
  1224  0457  00A2               	movwf	(___llmod@divisor+2)^(0+128)
  1225  0458  3000               	movlw	0
  1226  0459  00A1               	movwf	(___llmod@divisor+1)^(0+128)
  1227  045A  300A               	movlw	10
  1228  045B  00A0               	movwf	___llmod@divisor^(0+128)
  1229  045C  084B               	movf	(loop@f+3)^(0+128),w
  1230  045D  00A7               	movwf	(___llmod@dividend+3)^(0+128)
  1231  045E  084A               	movf	(loop@f+2)^(0+128),w
  1232  045F  00A6               	movwf	(___llmod@dividend+2)^(0+128)
  1233  0460  0849               	movf	(loop@f+1)^(0+128),w
  1234  0461  00A5               	movwf	(___llmod@dividend+1)^(0+128)
  1235  0462  0848               	movf	loop@f^(0+128),w
  1236  0463  00A4               	movwf	___llmod@dividend^(0+128)
  1237  0464  2687               	fcall	___llmod
  1238  0465  1683               	bsf	3,5	;RP0=1, select bank1
  1239  0466  1303               	bcf	3,6	;RP1=0, select bank1
  1240  0467  0821               	movf	(?___llmod+1)^(0+128),w
  1241  0468  00B9               	movwf	(loop@cifra+1)^(0+128)
  1242  0469  0820               	movf	?___llmod^(0+128),w
  1243  046A  00B8               	movwf	loop@cifra^(0+128)
  1244  046B                     l1629:
  1245                           
  1246                           ;main.c: 293:     accendi_cifra( 3, cifra, dp3);
  1247  046B  3003               	movlw	3
  1248  046C  00A0               	movwf	accendi_cifra@posizione^(0+128)
  1249  046D  3000               	movlw	0
  1250  046E  00A1               	movwf	(accendi_cifra@posizione^(0+128)+1)
  1251  046F  0839               	movf	(loop@cifra+1)^(0+128),w
  1252  0470  00A3               	movwf	(accendi_cifra@cifra+1)^(0+128)
  1253  0471  0838               	movf	loop@cifra^(0+128),w
  1254  0472  00A2               	movwf	accendi_cifra@cifra^(0+128)
  1255  0473  0837               	movf	(loop@dp3+1)^(0+128),w
  1256  0474  00A5               	movwf	(accendi_cifra@virgola+1)^(0+128)
  1257  0475  0836               	movf	loop@dp3^(0+128),w
  1258  0476  00A4               	movwf	accendi_cifra@virgola^(0+128)
  1259  0477  251C               	fcall	_accendi_cifra
  1260  0478                     l1631:
  1261                           
  1262                           ;main.c: 294:     _delay((unsigned long)((1)*(20000000/4000.0)));
  1263  0478  3007               	movlw	7
  1264  0479  1683               	bsf	3,5	;RP0=1, select bank1
  1265  047A  1303               	bcf	3,6	;RP1=0, select bank1
  1266  047B  00B1               	movwf	(??_loop^(0+128)+1)
  1267  047C  307C               	movlw	124
  1268  047D  00B0               	movwf	??_loop^(0+128)
  1269  047E                     u1037:
  1270  047E  0BB0               	decfsz	??_loop^(0+128),f
  1271  047F  2C7E               	goto	u1037
  1272  0480  0BB1               	decfsz	(??_loop^(0+128)+1),f
  1273  0481  2C7E               	goto	u1037
  1274  0482  2C83               	nop2
  1275  0483                     l1633:
  1276                           
  1277                           ;main.c: 296:     f = f / 10;
  1278  0483  3000               	movlw	0
  1279  0484  1683               	bsf	3,5	;RP0=1, select bank1
  1280  0485  1303               	bcf	3,6	;RP1=0, select bank1
  1281  0486  00A3               	movwf	(___lldiv@divisor+3)^(0+128)
  1282  0487  3000               	movlw	0
  1283  0488  00A2               	movwf	(___lldiv@divisor+2)^(0+128)
  1284  0489  3000               	movlw	0
  1285  048A  00A1               	movwf	(___lldiv@divisor+1)^(0+128)
  1286  048B  300A               	movlw	10
  1287  048C  00A0               	movwf	___lldiv@divisor^(0+128)
  1288  048D  084B               	movf	(loop@f+3)^(0+128),w
  1289  048E  00A7               	movwf	(___lldiv@dividend+3)^(0+128)
  1290  048F  084A               	movf	(loop@f+2)^(0+128),w
  1291  0490  00A6               	movwf	(___lldiv@dividend+2)^(0+128)
  1292  0491  0849               	movf	(loop@f+1)^(0+128),w
  1293  0492  00A5               	movwf	(___lldiv@dividend+1)^(0+128)
  1294  0493  0848               	movf	loop@f^(0+128),w
  1295  0494  00A4               	movwf	___lldiv@dividend^(0+128)
  1296  0495  25B7               	fcall	___lldiv
  1297  0496  1683               	bsf	3,5	;RP0=1, select bank1
  1298  0497  1303               	bcf	3,6	;RP1=0, select bank1
  1299  0498  0823               	movf	(?___lldiv+3)^(0+128),w
  1300  0499  00CB               	movwf	(loop@f+3)^(0+128)
  1301  049A  0822               	movf	(?___lldiv+2)^(0+128),w
  1302  049B  00CA               	movwf	(loop@f+2)^(0+128)
  1303  049C  0821               	movf	(?___lldiv+1)^(0+128),w
  1304  049D  00C9               	movwf	(loop@f+1)^(0+128)
  1305  049E  0820               	movf	?___lldiv^(0+128),w
  1306  049F  00C8               	movwf	loop@f^(0+128)
  1307  04A0                     l1635:
  1308                           
  1309                           ;main.c: 297:     cifra = f % 10;
  1310  04A0  3000               	movlw	0
  1311  04A1  00A3               	movwf	(___llmod@divisor+3)^(0+128)
  1312  04A2  3000               	movlw	0
  1313  04A3  00A2               	movwf	(___llmod@divisor+2)^(0+128)
  1314  04A4  3000               	movlw	0
  1315  04A5  00A1               	movwf	(___llmod@divisor+1)^(0+128)
  1316  04A6  300A               	movlw	10
  1317  04A7  00A0               	movwf	___llmod@divisor^(0+128)
  1318  04A8  084B               	movf	(loop@f+3)^(0+128),w
  1319  04A9  00A7               	movwf	(___llmod@dividend+3)^(0+128)
  1320  04AA  084A               	movf	(loop@f+2)^(0+128),w
  1321  04AB  00A6               	movwf	(___llmod@dividend+2)^(0+128)
  1322  04AC  0849               	movf	(loop@f+1)^(0+128),w
  1323  04AD  00A5               	movwf	(___llmod@dividend+1)^(0+128)
  1324  04AE  0848               	movf	loop@f^(0+128),w
  1325  04AF  00A4               	movwf	___llmod@dividend^(0+128)
  1326  04B0  2687               	fcall	___llmod
  1327  04B1  1683               	bsf	3,5	;RP0=1, select bank1
  1328  04B2  1303               	bcf	3,6	;RP1=0, select bank1
  1329  04B3  0821               	movf	(?___llmod+1)^(0+128),w
  1330  04B4  00B9               	movwf	(loop@cifra+1)^(0+128)
  1331  04B5  0820               	movf	?___llmod^(0+128),w
  1332  04B6  00B8               	movwf	loop@cifra^(0+128)
  1333  04B7                     l1637:
  1334                           
  1335                           ;main.c: 299:     accendi_cifra( 2, cifra, dp2 );
  1336  04B7  3002               	movlw	2
  1337  04B8  00A0               	movwf	accendi_cifra@posizione^(0+128)
  1338  04B9  3000               	movlw	0
  1339  04BA  00A1               	movwf	(accendi_cifra@posizione^(0+128)+1)
  1340  04BB  0839               	movf	(loop@cifra+1)^(0+128),w
  1341  04BC  00A3               	movwf	(accendi_cifra@cifra+1)^(0+128)
  1342  04BD  0838               	movf	loop@cifra^(0+128),w
  1343  04BE  00A2               	movwf	accendi_cifra@cifra^(0+128)
  1344  04BF  0835               	movf	(loop@dp2+1)^(0+128),w
  1345  04C0  00A5               	movwf	(accendi_cifra@virgola+1)^(0+128)
  1346  04C1  0834               	movf	loop@dp2^(0+128),w
  1347  04C2  00A4               	movwf	accendi_cifra@virgola^(0+128)
  1348  04C3  251C               	fcall	_accendi_cifra
  1349  04C4                     l1639:
  1350                           
  1351                           ;main.c: 300:     _delay((unsigned long)((1)*(20000000/4000.0)));
  1352  04C4  3007               	movlw	7
  1353  04C5  1683               	bsf	3,5	;RP0=1, select bank1
  1354  04C6  1303               	bcf	3,6	;RP1=0, select bank1
  1355  04C7  00B1               	movwf	(??_loop^(0+128)+1)
  1356  04C8  307C               	movlw	124
  1357  04C9  00B0               	movwf	??_loop^(0+128)
  1358  04CA                     u1047:
  1359  04CA  0BB0               	decfsz	??_loop^(0+128),f
  1360  04CB  2CCA               	goto	u1047
  1361  04CC  0BB1               	decfsz	(??_loop^(0+128)+1),f
  1362  04CD  2CCA               	goto	u1047
  1363  04CE  2CCF               	nop2
  1364  04CF                     l1641:
  1365                           
  1366                           ;main.c: 302:     f = f / 10;
  1367  04CF  3000               	movlw	0
  1368  04D0  1683               	bsf	3,5	;RP0=1, select bank1
  1369  04D1  1303               	bcf	3,6	;RP1=0, select bank1
  1370  04D2  00A3               	movwf	(___lldiv@divisor+3)^(0+128)
  1371  04D3  3000               	movlw	0
  1372  04D4  00A2               	movwf	(___lldiv@divisor+2)^(0+128)
  1373  04D5  3000               	movlw	0
  1374  04D6  00A1               	movwf	(___lldiv@divisor+1)^(0+128)
  1375  04D7  300A               	movlw	10
  1376  04D8  00A0               	movwf	___lldiv@divisor^(0+128)
  1377  04D9  084B               	movf	(loop@f+3)^(0+128),w
  1378  04DA  00A7               	movwf	(___lldiv@dividend+3)^(0+128)
  1379  04DB  084A               	movf	(loop@f+2)^(0+128),w
  1380  04DC  00A6               	movwf	(___lldiv@dividend+2)^(0+128)
  1381  04DD  0849               	movf	(loop@f+1)^(0+128),w
  1382  04DE  00A5               	movwf	(___lldiv@dividend+1)^(0+128)
  1383  04DF  0848               	movf	loop@f^(0+128),w
  1384  04E0  00A4               	movwf	___lldiv@dividend^(0+128)
  1385  04E1  25B7               	fcall	___lldiv
  1386  04E2  1683               	bsf	3,5	;RP0=1, select bank1
  1387  04E3  1303               	bcf	3,6	;RP1=0, select bank1
  1388  04E4  0823               	movf	(?___lldiv+3)^(0+128),w
  1389  04E5  00CB               	movwf	(loop@f+3)^(0+128)
  1390  04E6  0822               	movf	(?___lldiv+2)^(0+128),w
  1391  04E7  00CA               	movwf	(loop@f+2)^(0+128)
  1392  04E8  0821               	movf	(?___lldiv+1)^(0+128),w
  1393  04E9  00C9               	movwf	(loop@f+1)^(0+128)
  1394  04EA  0820               	movf	?___lldiv^(0+128),w
  1395  04EB  00C8               	movwf	loop@f^(0+128)
  1396  04EC                     l1643:
  1397                           
  1398                           ;main.c: 303:     cifra = f % 10;
  1399  04EC  3000               	movlw	0
  1400  04ED  00A3               	movwf	(___llmod@divisor+3)^(0+128)
  1401  04EE  3000               	movlw	0
  1402  04EF  00A2               	movwf	(___llmod@divisor+2)^(0+128)
  1403  04F0  3000               	movlw	0
  1404  04F1  00A1               	movwf	(___llmod@divisor+1)^(0+128)
  1405  04F2  300A               	movlw	10
  1406  04F3  00A0               	movwf	___llmod@divisor^(0+128)
  1407  04F4  084B               	movf	(loop@f+3)^(0+128),w
  1408  04F5  00A7               	movwf	(___llmod@dividend+3)^(0+128)
  1409  04F6  084A               	movf	(loop@f+2)^(0+128),w
  1410  04F7  00A6               	movwf	(___llmod@dividend+2)^(0+128)
  1411  04F8  0849               	movf	(loop@f+1)^(0+128),w
  1412  04F9  00A5               	movwf	(___llmod@dividend+1)^(0+128)
  1413  04FA  0848               	movf	loop@f^(0+128),w
  1414  04FB  00A4               	movwf	___llmod@dividend^(0+128)
  1415  04FC  2687               	fcall	___llmod
  1416  04FD  1683               	bsf	3,5	;RP0=1, select bank1
  1417  04FE  1303               	bcf	3,6	;RP1=0, select bank1
  1418  04FF  0821               	movf	(?___llmod+1)^(0+128),w
  1419  0500  00B9               	movwf	(loop@cifra+1)^(0+128)
  1420  0501  0820               	movf	?___llmod^(0+128),w
  1421  0502  00B8               	movwf	loop@cifra^(0+128)
  1422  0503                     l1645:
  1423                           
  1424                           ;main.c: 305:     accendi_cifra( 1, cifra, dp1);
  1425  0503  3001               	movlw	1
  1426  0504  00A0               	movwf	accendi_cifra@posizione^(0+128)
  1427  0505  3000               	movlw	0
  1428  0506  00A1               	movwf	(accendi_cifra@posizione^(0+128)+1)
  1429  0507  0839               	movf	(loop@cifra+1)^(0+128),w
  1430  0508  00A3               	movwf	(accendi_cifra@cifra+1)^(0+128)
  1431  0509  0838               	movf	loop@cifra^(0+128),w
  1432  050A  00A2               	movwf	accendi_cifra@cifra^(0+128)
  1433  050B  0833               	movf	(loop@dp1+1)^(0+128),w
  1434  050C  00A5               	movwf	(accendi_cifra@virgola+1)^(0+128)
  1435  050D  0832               	movf	loop@dp1^(0+128),w
  1436  050E  00A4               	movwf	accendi_cifra@virgola^(0+128)
  1437  050F  251C               	fcall	_accendi_cifra
  1438  0510                     l1647:
  1439                           
  1440                           ;main.c: 306:     _delay((unsigned long)((1)*(20000000/4000.0)));
  1441  0510  3007               	movlw	7
  1442  0511  1683               	bsf	3,5	;RP0=1, select bank1
  1443  0512  1303               	bcf	3,6	;RP1=0, select bank1
  1444  0513  00B1               	movwf	(??_loop^(0+128)+1)
  1445  0514  307C               	movlw	124
  1446  0515  00B0               	movwf	??_loop^(0+128)
  1447  0516                     u1057:
  1448  0516  0BB0               	decfsz	??_loop^(0+128),f
  1449  0517  2D16               	goto	u1057
  1450  0518  0BB1               	decfsz	(??_loop^(0+128)+1),f
  1451  0519  2D16               	goto	u1057
  1452  051A  2D1B               	nop2
  1453  051B                     l117:
  1454  051B  0008               	return
  1455  051C                     __end_of_loop:
  1456                           
  1457                           	psect	text3
  1458  051C                     __ptext3:	
  1459 ;; *************** function _accendi_cifra *****************
  1460 ;; Defined at:
  1461 ;;		line 103 in file "main.c"
  1462 ;; Parameters:    Size  Location     Type
  1463 ;;  posizione       2    0[BANK1 ] int 
  1464 ;;  cifra           2    2[BANK1 ] int 
  1465 ;;  virgola         2    4[BANK1 ] int 
  1466 ;; Auto vars:     Size  Location     Type
  1467 ;;		None
  1468 ;; Return value:  Size  Location     Type
  1469 ;;                  1    wreg      void 
  1470 ;; Registers used:
  1471 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1472 ;; Tracked objects:
  1473 ;;		On entry : 0/0
  1474 ;;		On exit  : 0/0
  1475 ;;		Unchanged: 0/0
  1476 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1477 ;;      Params:         0       0       6       0
  1478 ;;      Locals:         0       0       0       0
  1479 ;;      Temps:          0       0       0       0
  1480 ;;      Totals:         0       0       6       0
  1481 ;;Total ram usage:        6 bytes
  1482 ;; Hardware stack levels used: 1
  1483 ;; Hardware stack levels required when called: 2
  1484 ;; This function calls:
  1485 ;;		Nothing
  1486 ;; This function is called by:
  1487 ;;		_loop
  1488 ;; This function uses a non-reentrant model
  1489 ;;
  1490                           
  1491                           
  1492                           ;psect for function _accendi_cifra
  1493  051C                     _accendi_cifra:
  1494  051C                     l1467:	
  1495                           ;incstack = 0
  1496                           ; Regs used in _accendi_cifra: [wreg-fsr0h+status,2+status,0]
  1497                           
  1498                           
  1499                           ;main.c: 105:     PORTB = 0;
  1500  051C  1283               	bcf	3,5	;RP0=0, select bank0
  1501  051D  1303               	bcf	3,6	;RP1=0, select bank0
  1502  051E  0186               	clrf	6	;volatile
  1503                           
  1504                           ;main.c: 108:     switch ( posizione ) {
  1505  051F  2D39               	goto	l1481
  1506  0520                     l1469:
  1507                           
  1508                           ;main.c: 110:             PORTA = 0b00000111;
  1509  0520  3007               	movlw	7
  1510  0521  1283               	bcf	3,5	;RP0=0, select bank0
  1511  0522  1303               	bcf	3,6	;RP1=0, select bank0
  1512  0523  0085               	movwf	5	;volatile
  1513                           
  1514                           ;main.c: 111:             break;
  1515  0524  2D84               	goto	l1507
  1516  0525                     l1471:
  1517                           
  1518                           ;main.c: 113:             PORTA = 0b00001011;
  1519  0525  300B               	movlw	11
  1520  0526  1283               	bcf	3,5	;RP0=0, select bank0
  1521  0527  1303               	bcf	3,6	;RP1=0, select bank0
  1522  0528  0085               	movwf	5	;volatile
  1523                           
  1524                           ;main.c: 114:             break;
  1525  0529  2D84               	goto	l1507
  1526  052A                     l1473:
  1527                           
  1528                           ;main.c: 116:             PORTA = 0b00001110;
  1529  052A  300E               	movlw	14
  1530  052B  1283               	bcf	3,5	;RP0=0, select bank0
  1531  052C  1303               	bcf	3,6	;RP1=0, select bank0
  1532  052D  0085               	movwf	5	;volatile
  1533                           
  1534                           ;main.c: 117:             break;
  1535  052E  2D84               	goto	l1507
  1536  052F                     l1475:
  1537                           
  1538                           ;main.c: 119:             PORTA = 0b00001101;
  1539  052F  300D               	movlw	13
  1540  0530  1283               	bcf	3,5	;RP0=0, select bank0
  1541  0531  1303               	bcf	3,6	;RP1=0, select bank0
  1542  0532  0085               	movwf	5	;volatile
  1543                           
  1544                           ;main.c: 120:             break;
  1545  0533  2D84               	goto	l1507
  1546  0534                     l1477:
  1547                           
  1548                           ;main.c: 122:             PORTA = 0b00001111;
  1549  0534  300F               	movlw	15
  1550  0535  1283               	bcf	3,5	;RP0=0, select bank0
  1551  0536  1303               	bcf	3,6	;RP1=0, select bank0
  1552  0537  0085               	movwf	5	;volatile
  1553                           
  1554                           ;main.c: 123:             break;
  1555  0538  2D84               	goto	l1507
  1556  0539                     l1481:
  1557                           
  1558                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1559                           ; Switch size 1, requested type "simple"
  1560                           ; Number of cases is 1, Range of values is 0 to 0
  1561                           ; switch strategies available:
  1562                           ; Name         Instructions Cycles
  1563                           ; simple_byte            4     3 (average)
  1564                           ; direct_byte            7     6 (fixed)
  1565                           ; jumptable            260     6 (fixed)
  1566                           ;	Chosen strategy is simple_byte
  1567  0539  1683               	bsf	3,5	;RP0=1, select bank1
  1568  053A  1303               	bcf	3,6	;RP1=0, select bank1
  1569  053B  0821               	movf	(accendi_cifra@posizione+1)^(0+128),w
  1570  053C  3A00               	xorlw	0	; case 0
  1571  053D  1903               	skipnz
  1572  053E  2D40               	goto	l1703
  1573  053F  2D34               	goto	l1477
  1574  0540                     l1703:
  1575                           
  1576                           ; Switch size 1, requested type "simple"
  1577                           ; Number of cases is 4, Range of values is 1 to 4
  1578                           ; switch strategies available:
  1579                           ; Name         Instructions Cycles
  1580                           ; simple_byte           13     7 (average)
  1581                           ; direct_byte           13     9 (fixed)
  1582                           ; jumptable            263     9 (fixed)
  1583                           ;	Chosen strategy is simple_byte
  1584  0540  0820               	movf	accendi_cifra@posizione^(0+128),w
  1585  0541  3A01               	xorlw	1	; case 1
  1586  0542  1903               	skipnz
  1587  0543  2D20               	goto	l1469
  1588  0544  3A03               	xorlw	3	; case 2
  1589  0545  1903               	skipnz
  1590  0546  2D25               	goto	l1471
  1591  0547  3A01               	xorlw	1	; case 3
  1592  0548  1903               	skipnz
  1593  0549  2D2A               	goto	l1473
  1594  054A  3A07               	xorlw	7	; case 4
  1595  054B  1903               	skipnz
  1596  054C  2D2F               	goto	l1475
  1597  054D  2D34               	goto	l1477
  1598  054E                     l1483:
  1599                           
  1600                           ;main.c: 129:             PORTB = 0b11011101;
  1601  054E  30DD               	movlw	221
  1602  054F  1283               	bcf	3,5	;RP0=0, select bank0
  1603  0550  1303               	bcf	3,6	;RP1=0, select bank0
  1604  0551  0086               	movwf	6	;volatile
  1605                           
  1606                           ;main.c: 130:             break;
  1607  0552  2DAB               	goto	l1509
  1608  0553                     l1485:
  1609                           
  1610                           ;main.c: 132:             PORTB = 0b10000100;
  1611  0553  3084               	movlw	132
  1612  0554  1283               	bcf	3,5	;RP0=0, select bank0
  1613  0555  1303               	bcf	3,6	;RP1=0, select bank0
  1614  0556  0086               	movwf	6	;volatile
  1615                           
  1616                           ;main.c: 133:             break;
  1617  0557  2DAB               	goto	l1509
  1618  0558                     l1487:
  1619                           
  1620                           ;main.c: 135:             PORTB = 0b11101001;
  1621  0558  30E9               	movlw	233
  1622  0559  1283               	bcf	3,5	;RP0=0, select bank0
  1623  055A  1303               	bcf	3,6	;RP1=0, select bank0
  1624  055B  0086               	movwf	6	;volatile
  1625                           
  1626                           ;main.c: 136:             break;
  1627  055C  2DAB               	goto	l1509
  1628  055D                     l1489:
  1629                           
  1630                           ;main.c: 138:             PORTB = 0b11100101;
  1631  055D  30E5               	movlw	229
  1632  055E  1283               	bcf	3,5	;RP0=0, select bank0
  1633  055F  1303               	bcf	3,6	;RP1=0, select bank0
  1634  0560  0086               	movwf	6	;volatile
  1635                           
  1636                           ;main.c: 139:             break;
  1637  0561  2DAB               	goto	l1509
  1638  0562                     l1491:
  1639                           
  1640                           ;main.c: 141:             PORTB = 0b10110100;
  1641  0562  30B4               	movlw	180
  1642  0563  1283               	bcf	3,5	;RP0=0, select bank0
  1643  0564  1303               	bcf	3,6	;RP1=0, select bank0
  1644  0565  0086               	movwf	6	;volatile
  1645                           
  1646                           ;main.c: 142:             break;
  1647  0566  2DAB               	goto	l1509
  1648  0567                     l1493:
  1649                           
  1650                           ;main.c: 144:             PORTB = 0b01110101;
  1651  0567  3075               	movlw	117
  1652  0568  1283               	bcf	3,5	;RP0=0, select bank0
  1653  0569  1303               	bcf	3,6	;RP1=0, select bank0
  1654  056A  0086               	movwf	6	;volatile
  1655                           
  1656                           ;main.c: 145:             break;
  1657  056B  2DAB               	goto	l1509
  1658  056C                     l1495:
  1659                           
  1660                           ;main.c: 147:             PORTB = 0b01111101;
  1661  056C  307D               	movlw	125
  1662  056D  1283               	bcf	3,5	;RP0=0, select bank0
  1663  056E  1303               	bcf	3,6	;RP1=0, select bank0
  1664  056F  0086               	movwf	6	;volatile
  1665                           
  1666                           ;main.c: 148:             break;
  1667  0570  2DAB               	goto	l1509
  1668  0571                     l1497:
  1669                           
  1670                           ;main.c: 150:             PORTB = 0b11000100;
  1671  0571  30C4               	movlw	196
  1672  0572  1283               	bcf	3,5	;RP0=0, select bank0
  1673  0573  1303               	bcf	3,6	;RP1=0, select bank0
  1674  0574  0086               	movwf	6	;volatile
  1675                           
  1676                           ;main.c: 151:             break;
  1677  0575  2DAB               	goto	l1509
  1678  0576                     l1499:
  1679                           
  1680                           ;main.c: 153:             PORTB = 0b11111101;
  1681  0576  30FD               	movlw	253
  1682  0577  1283               	bcf	3,5	;RP0=0, select bank0
  1683  0578  1303               	bcf	3,6	;RP1=0, select bank0
  1684  0579  0086               	movwf	6	;volatile
  1685                           
  1686                           ;main.c: 154:             break;
  1687  057A  2DAB               	goto	l1509
  1688  057B                     l1501:
  1689                           
  1690                           ;main.c: 156:             PORTB = 0b11110101;
  1691  057B  30F5               	movlw	245
  1692  057C  1283               	bcf	3,5	;RP0=0, select bank0
  1693  057D  1303               	bcf	3,6	;RP1=0, select bank0
  1694  057E  0086               	movwf	6	;volatile
  1695                           
  1696                           ;main.c: 157:             break;
  1697  057F  2DAB               	goto	l1509
  1698  0580                     l1503:
  1699                           
  1700                           ;main.c: 159:             PORTB = 0b00000000;
  1701  0580  1283               	bcf	3,5	;RP0=0, select bank0
  1702  0581  1303               	bcf	3,6	;RP1=0, select bank0
  1703  0582  0186               	clrf	6	;volatile
  1704                           
  1705                           ;main.c: 160:             break;
  1706  0583  2DAB               	goto	l1509
  1707  0584                     l1507:
  1708                           
  1709                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1710                           ; Switch size 1, requested type "simple"
  1711                           ; Number of cases is 1, Range of values is 0 to 0
  1712                           ; switch strategies available:
  1713                           ; Name         Instructions Cycles
  1714                           ; simple_byte            4     3 (average)
  1715                           ; direct_byte            7     6 (fixed)
  1716                           ; jumptable            260     6 (fixed)
  1717                           ;	Chosen strategy is simple_byte
  1718  0584  1683               	bsf	3,5	;RP0=1, select bank1
  1719  0585  1303               	bcf	3,6	;RP1=0, select bank1
  1720  0586  0823               	movf	(accendi_cifra@cifra+1)^(0+128),w
  1721  0587  3A00               	xorlw	0	; case 0
  1722  0588  1903               	skipnz
  1723  0589  2D8B               	goto	l1705
  1724  058A  2D80               	goto	l1503
  1725  058B                     l1705:
  1726                           
  1727                           ; Switch size 1, requested type "simple"
  1728                           ; Number of cases is 10, Range of values is 0 to 9
  1729                           ; switch strategies available:
  1730                           ; Name         Instructions Cycles
  1731                           ; direct_byte           16     6 (fixed)
  1732                           ; simple_byte           31    16 (average)
  1733                           ; jumptable            260     6 (fixed)
  1734                           ;	Chosen strategy is simple_byte
  1735  058B  0822               	movf	accendi_cifra@cifra^(0+128),w
  1736  058C  3A00               	xorlw	0	; case 0
  1737  058D  1903               	skipnz
  1738  058E  2D4E               	goto	l1483
  1739  058F  3A01               	xorlw	1	; case 1
  1740  0590  1903               	skipnz
  1741  0591  2D53               	goto	l1485
  1742  0592  3A03               	xorlw	3	; case 2
  1743  0593  1903               	skipnz
  1744  0594  2D58               	goto	l1487
  1745  0595  3A01               	xorlw	1	; case 3
  1746  0596  1903               	skipnz
  1747  0597  2D5D               	goto	l1489
  1748  0598  3A07               	xorlw	7	; case 4
  1749  0599  1903               	skipnz
  1750  059A  2D62               	goto	l1491
  1751  059B  3A01               	xorlw	1	; case 5
  1752  059C  1903               	skipnz
  1753  059D  2D67               	goto	l1493
  1754  059E  3A03               	xorlw	3	; case 6
  1755  059F  1903               	skipnz
  1756  05A0  2D6C               	goto	l1495
  1757  05A1  3A01               	xorlw	1	; case 7
  1758  05A2  1903               	skipnz
  1759  05A3  2D71               	goto	l1497
  1760  05A4  3A0F               	xorlw	15	; case 8
  1761  05A5  1903               	skipnz
  1762  05A6  2D76               	goto	l1499
  1763  05A7  3A01               	xorlw	1	; case 9
  1764  05A8  1903               	skipnz
  1765  05A9  2D7B               	goto	l1501
  1766  05AA  2D80               	goto	l1503
  1767  05AB                     l1509:
  1768                           
  1769                           ;main.c: 164:     if (virgola != 0) {
  1770  05AB  1683               	bsf	3,5	;RP0=1, select bank1
  1771  05AC  1303               	bcf	3,6	;RP1=0, select bank1
  1772  05AD  0824               	movf	accendi_cifra@virgola^(0+128),w
  1773  05AE  0425               	iorwf	(accendi_cifra@virgola+1)^(0+128),w
  1774  05AF  1903               	btfsc	3,2
  1775  05B0  2DB2               	goto	u951
  1776  05B1  2DB3               	goto	u950
  1777  05B2                     u951:
  1778  05B2  2DB6               	goto	l96
  1779  05B3                     u950:
  1780  05B3                     l1511:
  1781                           
  1782                           ;main.c: 167:         PORTBbits.RB1 = 1;
  1783  05B3  1283               	bcf	3,5	;RP0=0, select bank0
  1784  05B4  1303               	bcf	3,6	;RP1=0, select bank0
  1785  05B5  1486               	bsf	6,1	;volatile
  1786  05B6                     l96:
  1787  05B6  0008               	return
  1788  05B7                     __end_of_accendi_cifra:
  1789                           
  1790                           	psect	text4
  1791  0687                     __ptext4:	
  1792 ;; *************** function ___llmod *****************
  1793 ;; Defined at:
  1794 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\llmod.c"
  1795 ;; Parameters:    Size  Location     Type
  1796 ;;  divisor         4    0[BANK1 ] unsigned long 
  1797 ;;  dividend        4    4[BANK1 ] unsigned long 
  1798 ;; Auto vars:     Size  Location     Type
  1799 ;;  counter         1    9[BANK1 ] unsigned char 
  1800 ;; Return value:  Size  Location     Type
  1801 ;;                  4    0[BANK1 ] unsigned long 
  1802 ;; Registers used:
  1803 ;;		wreg, status,2, status,0
  1804 ;; Tracked objects:
  1805 ;;		On entry : 0/0
  1806 ;;		On exit  : 0/0
  1807 ;;		Unchanged: 0/0
  1808 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1809 ;;      Params:         0       0       8       0
  1810 ;;      Locals:         0       0       1       0
  1811 ;;      Temps:          0       0       1       0
  1812 ;;      Totals:         0       0      10       0
  1813 ;;Total ram usage:       10 bytes
  1814 ;; Hardware stack levels used: 1
  1815 ;; Hardware stack levels required when called: 2
  1816 ;; This function calls:
  1817 ;;		Nothing
  1818 ;; This function is called by:
  1819 ;;		_loop
  1820 ;; This function uses a non-reentrant model
  1821 ;;
  1822                           
  1823                           
  1824                           ;psect for function ___llmod
  1825  0687                     ___llmod:
  1826  0687                     l1171:	
  1827                           ;incstack = 0
  1828                           ; Regs used in ___llmod: [wreg+status,2+status,0]
  1829                           
  1830  0687  1683               	bsf	3,5	;RP0=1, select bank1
  1831  0688  1303               	bcf	3,6	;RP1=0, select bank1
  1832  0689  0823               	movf	(___llmod@divisor+3)^(0+128),w
  1833  068A  0422               	iorwf	(___llmod@divisor+2)^(0+128),w
  1834  068B  0421               	iorwf	(___llmod@divisor+1)^(0+128),w
  1835  068C  0420               	iorwf	___llmod@divisor^(0+128),w
  1836  068D  1903               	skipnz
  1837  068E  2E90               	goto	u561
  1838  068F  2E91               	goto	u560
  1839  0690                     u561:
  1840  0690  2ED4               	goto	l1187
  1841  0691                     u560:
  1842  0691                     l1173:
  1843  0691  01A9               	clrf	___llmod@counter^(0+128)
  1844  0692  0AA9               	incf	___llmod@counter^(0+128),f
  1845  0693  2EA1               	goto	l1177
  1846  0694                     l1175:
  1847  0694  3001               	movlw	1
  1848  0695  00A8               	movwf	??___llmod^(0+128)
  1849  0696                     u575:
  1850  0696  1003               	clrc
  1851  0697  0DA0               	rlf	___llmod@divisor^(0+128),f
  1852  0698  0DA1               	rlf	(___llmod@divisor+1)^(0+128),f
  1853  0699  0DA2               	rlf	(___llmod@divisor+2)^(0+128),f
  1854  069A  0DA3               	rlf	(___llmod@divisor+3)^(0+128),f
  1855  069B  0BA8               	decfsz	??___llmod^(0+128),f
  1856  069C  2E96               	goto	u575
  1857  069D  3001               	movlw	1
  1858  069E  00A8               	movwf	??___llmod^(0+128)
  1859  069F  0828               	movf	??___llmod^(0+128),w
  1860  06A0  07A9               	addwf	___llmod@counter^(0+128),f
  1861  06A1                     l1177:
  1862  06A1  1FA3               	btfss	(___llmod@divisor+3)^(0+128),7
  1863  06A2  2EA4               	goto	u581
  1864  06A3  2EA5               	goto	u580
  1865  06A4                     u581:
  1866  06A4  2E94               	goto	l1175
  1867  06A5                     u580:
  1868  06A5                     l1179:
  1869  06A5  0823               	movf	(___llmod@divisor+3)^(0+128),w
  1870  06A6  0227               	subwf	(___llmod@dividend+3)^(0+128),w
  1871  06A7  1D03               	skipz
  1872  06A8  2EB3               	goto	u595
  1873  06A9  0822               	movf	(___llmod@divisor+2)^(0+128),w
  1874  06AA  0226               	subwf	(___llmod@dividend+2)^(0+128),w
  1875  06AB  1D03               	skipz
  1876  06AC  2EB3               	goto	u595
  1877  06AD  0821               	movf	(___llmod@divisor+1)^(0+128),w
  1878  06AE  0225               	subwf	(___llmod@dividend+1)^(0+128),w
  1879  06AF  1D03               	skipz
  1880  06B0  2EB3               	goto	u595
  1881  06B1  0820               	movf	___llmod@divisor^(0+128),w
  1882  06B2  0224               	subwf	___llmod@dividend^(0+128),w
  1883  06B3                     u595:
  1884  06B3  1C03               	skipc
  1885  06B4  2EB6               	goto	u591
  1886  06B5  2EB7               	goto	u590
  1887  06B6                     u591:
  1888  06B6  2EC5               	goto	l1183
  1889  06B7                     u590:
  1890  06B7                     l1181:
  1891  06B7  0820               	movf	___llmod@divisor^(0+128),w
  1892  06B8  02A4               	subwf	___llmod@dividend^(0+128),f
  1893  06B9  0821               	movf	(___llmod@divisor+1)^(0+128),w
  1894  06BA  1C03               	skipc
  1895  06BB  0F21               	incfsz	(___llmod@divisor+1)^(0+128),w
  1896  06BC  02A5               	subwf	(___llmod@dividend+1)^(0+128),f
  1897  06BD  0822               	movf	(___llmod@divisor+2)^(0+128),w
  1898  06BE  1C03               	skipc
  1899  06BF  0F22               	incfsz	(___llmod@divisor+2)^(0+128),w
  1900  06C0  02A6               	subwf	(___llmod@dividend+2)^(0+128),f
  1901  06C1  0823               	movf	(___llmod@divisor+3)^(0+128),w
  1902  06C2  1C03               	skipc
  1903  06C3  0F23               	incfsz	(___llmod@divisor+3)^(0+128),w
  1904  06C4  02A7               	subwf	(___llmod@dividend+3)^(0+128),f
  1905  06C5                     l1183:
  1906  06C5  3001               	movlw	1
  1907  06C6                     u605:
  1908  06C6  1003               	clrc
  1909  06C7  0CA3               	rrf	(___llmod@divisor+3)^(0+128),f
  1910  06C8  0CA2               	rrf	(___llmod@divisor+2)^(0+128),f
  1911  06C9  0CA1               	rrf	(___llmod@divisor+1)^(0+128),f
  1912  06CA  0CA0               	rrf	___llmod@divisor^(0+128),f
  1913  06CB  3EFF               	addlw	-1
  1914  06CC  1D03               	skipz
  1915  06CD  2EC6               	goto	u605
  1916  06CE                     l1185:
  1917  06CE  3001               	movlw	1
  1918  06CF  02A9               	subwf	___llmod@counter^(0+128),f
  1919  06D0  1D03               	btfss	3,2
  1920  06D1  2ED3               	goto	u611
  1921  06D2  2ED4               	goto	u610
  1922  06D3                     u611:
  1923  06D3  2EA5               	goto	l1179
  1924  06D4                     u610:
  1925  06D4                     l1187:
  1926  06D4  0827               	movf	(___llmod@dividend+3)^(0+128),w
  1927  06D5  00A3               	movwf	(?___llmod+3)^(0+128)
  1928  06D6  0826               	movf	(___llmod@dividend+2)^(0+128),w
  1929  06D7  00A2               	movwf	(?___llmod+2)^(0+128)
  1930  06D8  0825               	movf	(___llmod@dividend+1)^(0+128),w
  1931  06D9  00A1               	movwf	(?___llmod+1)^(0+128)
  1932  06DA  0824               	movf	___llmod@dividend^(0+128),w
  1933  06DB  00A0               	movwf	?___llmod^(0+128)
  1934  06DC                     l435:
  1935  06DC  0008               	return
  1936  06DD                     __end_of___llmod:
  1937                           
  1938                           	psect	text5
  1939  05B7                     __ptext5:	
  1940 ;; *************** function ___lldiv *****************
  1941 ;; Defined at:
  1942 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\__lldiv.c"
  1943 ;; Parameters:    Size  Location     Type
  1944 ;;  divisor         4    0[BANK1 ] unsigned long 
  1945 ;;  dividend        4    4[BANK1 ] unsigned long 
  1946 ;; Auto vars:     Size  Location     Type
  1947 ;;  quotient        4    9[BANK1 ] unsigned long 
  1948 ;;  counter         1   13[BANK1 ] unsigned char 
  1949 ;; Return value:  Size  Location     Type
  1950 ;;                  4    0[BANK1 ] unsigned long 
  1951 ;; Registers used:
  1952 ;;		wreg, status,2, status,0
  1953 ;; Tracked objects:
  1954 ;;		On entry : 0/0
  1955 ;;		On exit  : 0/0
  1956 ;;		Unchanged: 0/0
  1957 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1958 ;;      Params:         0       0       8       0
  1959 ;;      Locals:         0       0       5       0
  1960 ;;      Temps:          0       0       1       0
  1961 ;;      Totals:         0       0      14       0
  1962 ;;Total ram usage:       14 bytes
  1963 ;; Hardware stack levels used: 1
  1964 ;; Hardware stack levels required when called: 2
  1965 ;; This function calls:
  1966 ;;		Nothing
  1967 ;; This function is called by:
  1968 ;;		_loop
  1969 ;; This function uses a non-reentrant model
  1970 ;;
  1971                           
  1972                           
  1973                           ;psect for function ___lldiv
  1974  05B7                     ___lldiv:
  1975  05B7                     l1147:	
  1976                           ;incstack = 0
  1977                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  1978                           
  1979  05B7  3000               	movlw	0
  1980  05B8  1683               	bsf	3,5	;RP0=1, select bank1
  1981  05B9  1303               	bcf	3,6	;RP1=0, select bank1
  1982  05BA  00AC               	movwf	(___lldiv@quotient+3)^(0+128)
  1983  05BB  3000               	movlw	0
  1984  05BC  00AB               	movwf	(___lldiv@quotient+2)^(0+128)
  1985  05BD  3000               	movlw	0
  1986  05BE  00AA               	movwf	(___lldiv@quotient+1)^(0+128)
  1987  05BF  3000               	movlw	0
  1988  05C0  00A9               	movwf	___lldiv@quotient^(0+128)
  1989  05C1  0823               	movf	(___lldiv@divisor+3)^(0+128),w
  1990  05C2  0422               	iorwf	(___lldiv@divisor+2)^(0+128),w
  1991  05C3  0421               	iorwf	(___lldiv@divisor+1)^(0+128),w
  1992  05C4  0420               	iorwf	___lldiv@divisor^(0+128),w
  1993  05C5  1903               	skipnz
  1994  05C6  2DC8               	goto	u491
  1995  05C7  2DC9               	goto	u490
  1996  05C8                     u491:
  1997  05C8  2E16               	goto	l1167
  1998  05C9                     u490:
  1999  05C9                     l1149:
  2000  05C9  01AD               	clrf	___lldiv@counter^(0+128)
  2001  05CA  0AAD               	incf	___lldiv@counter^(0+128),f
  2002  05CB  2DD9               	goto	l1153
  2003  05CC                     l1151:
  2004  05CC  3001               	movlw	1
  2005  05CD  00A8               	movwf	??___lldiv^(0+128)
  2006  05CE                     u505:
  2007  05CE  1003               	clrc
  2008  05CF  0DA0               	rlf	___lldiv@divisor^(0+128),f
  2009  05D0  0DA1               	rlf	(___lldiv@divisor+1)^(0+128),f
  2010  05D1  0DA2               	rlf	(___lldiv@divisor+2)^(0+128),f
  2011  05D2  0DA3               	rlf	(___lldiv@divisor+3)^(0+128),f
  2012  05D3  0BA8               	decfsz	??___lldiv^(0+128),f
  2013  05D4  2DCE               	goto	u505
  2014  05D5  3001               	movlw	1
  2015  05D6  00A8               	movwf	??___lldiv^(0+128)
  2016  05D7  0828               	movf	??___lldiv^(0+128),w
  2017  05D8  07AD               	addwf	___lldiv@counter^(0+128),f
  2018  05D9                     l1153:
  2019  05D9  1FA3               	btfss	(___lldiv@divisor+3)^(0+128),7
  2020  05DA  2DDC               	goto	u511
  2021  05DB  2DDD               	goto	u510
  2022  05DC                     u511:
  2023  05DC  2DCC               	goto	l1151
  2024  05DD                     u510:
  2025  05DD                     l1155:
  2026  05DD  3001               	movlw	1
  2027  05DE  00A8               	movwf	??___lldiv^(0+128)
  2028  05DF                     u525:
  2029  05DF  1003               	clrc
  2030  05E0  0DA9               	rlf	___lldiv@quotient^(0+128),f
  2031  05E1  0DAA               	rlf	(___lldiv@quotient+1)^(0+128),f
  2032  05E2  0DAB               	rlf	(___lldiv@quotient+2)^(0+128),f
  2033  05E3  0DAC               	rlf	(___lldiv@quotient+3)^(0+128),f
  2034  05E4  0BA8               	decfsz	??___lldiv^(0+128),f
  2035  05E5  2DDF               	goto	u525
  2036  05E6                     l1157:
  2037  05E6  0823               	movf	(___lldiv@divisor+3)^(0+128),w
  2038  05E7  0227               	subwf	(___lldiv@dividend+3)^(0+128),w
  2039  05E8  1D03               	skipz
  2040  05E9  2DF4               	goto	u535
  2041  05EA  0822               	movf	(___lldiv@divisor+2)^(0+128),w
  2042  05EB  0226               	subwf	(___lldiv@dividend+2)^(0+128),w
  2043  05EC  1D03               	skipz
  2044  05ED  2DF4               	goto	u535
  2045  05EE  0821               	movf	(___lldiv@divisor+1)^(0+128),w
  2046  05EF  0225               	subwf	(___lldiv@dividend+1)^(0+128),w
  2047  05F0  1D03               	skipz
  2048  05F1  2DF4               	goto	u535
  2049  05F2  0820               	movf	___lldiv@divisor^(0+128),w
  2050  05F3  0224               	subwf	___lldiv@dividend^(0+128),w
  2051  05F4                     u535:
  2052  05F4  1C03               	skipc
  2053  05F5  2DF7               	goto	u531
  2054  05F6  2DF8               	goto	u530
  2055  05F7                     u531:
  2056  05F7  2E07               	goto	l1163
  2057  05F8                     u530:
  2058  05F8                     l1159:
  2059  05F8  0820               	movf	___lldiv@divisor^(0+128),w
  2060  05F9  02A4               	subwf	___lldiv@dividend^(0+128),f
  2061  05FA  0821               	movf	(___lldiv@divisor+1)^(0+128),w
  2062  05FB  1C03               	skipc
  2063  05FC  0F21               	incfsz	(___lldiv@divisor+1)^(0+128),w
  2064  05FD  02A5               	subwf	(___lldiv@dividend+1)^(0+128),f
  2065  05FE  0822               	movf	(___lldiv@divisor+2)^(0+128),w
  2066  05FF  1C03               	skipc
  2067  0600  0F22               	incfsz	(___lldiv@divisor+2)^(0+128),w
  2068  0601  02A6               	subwf	(___lldiv@dividend+2)^(0+128),f
  2069  0602  0823               	movf	(___lldiv@divisor+3)^(0+128),w
  2070  0603  1C03               	skipc
  2071  0604  0F23               	incfsz	(___lldiv@divisor+3)^(0+128),w
  2072  0605  02A7               	subwf	(___lldiv@dividend+3)^(0+128),f
  2073  0606                     l1161:
  2074  0606  1429               	bsf	___lldiv@quotient^(0+128),0
  2075  0607                     l1163:
  2076  0607  3001               	movlw	1
  2077  0608                     u545:
  2078  0608  1003               	clrc
  2079  0609  0CA3               	rrf	(___lldiv@divisor+3)^(0+128),f
  2080  060A  0CA2               	rrf	(___lldiv@divisor+2)^(0+128),f
  2081  060B  0CA1               	rrf	(___lldiv@divisor+1)^(0+128),f
  2082  060C  0CA0               	rrf	___lldiv@divisor^(0+128),f
  2083  060D  3EFF               	addlw	-1
  2084  060E  1D03               	skipz
  2085  060F  2E08               	goto	u545
  2086  0610                     l1165:
  2087  0610  3001               	movlw	1
  2088  0611  02AD               	subwf	___lldiv@counter^(0+128),f
  2089  0612  1D03               	btfss	3,2
  2090  0613  2E15               	goto	u551
  2091  0614  2E16               	goto	u550
  2092  0615                     u551:
  2093  0615  2DDD               	goto	l1155
  2094  0616                     u550:
  2095  0616                     l1167:
  2096  0616  082C               	movf	(___lldiv@quotient+3)^(0+128),w
  2097  0617  00A3               	movwf	(?___lldiv+3)^(0+128)
  2098  0618  082B               	movf	(___lldiv@quotient+2)^(0+128),w
  2099  0619  00A2               	movwf	(?___lldiv+2)^(0+128)
  2100  061A  082A               	movf	(___lldiv@quotient+1)^(0+128),w
  2101  061B  00A1               	movwf	(?___lldiv+1)^(0+128)
  2102  061C  0829               	movf	___lldiv@quotient^(0+128),w
  2103  061D  00A0               	movwf	?___lldiv^(0+128)
  2104  061E                     l249:
  2105  061E  0008               	return
  2106  061F                     __end_of___lldiv:
  2107                           
  2108                           	psect	text6
  2109  001A                     __ptext6:	
  2110 ;; *************** function _tcInt *****************
  2111 ;; Defined at:
  2112 ;;		line 33 in file "main.c"
  2113 ;; Parameters:    Size  Location     Type
  2114 ;;		None
  2115 ;; Auto vars:     Size  Location     Type
  2116 ;;  ratio           4   36[BANK0 ] unsigned long 
  2117 ;;  frequenza_x1    4   32[BANK0 ] unsigned long 
  2118 ;;  frequenza_x1    4   28[BANK0 ] unsigned long 
  2119 ;; Return value:  Size  Location     Type
  2120 ;;                  1    wreg      void 
  2121 ;; Registers used:
  2122 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  2123 ;; Tracked objects:
  2124 ;;		On entry : 0/0
  2125 ;;		On exit  : 0/0
  2126 ;;		Unchanged: 0/0
  2127 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2128 ;;      Params:         0       0       0       0
  2129 ;;      Locals:         0      12       0       0
  2130 ;;      Temps:          0      15       0       0
  2131 ;;      Totals:         0      27       0       0
  2132 ;;Total ram usage:       27 bytes
  2133 ;; Hardware stack levels used: 1
  2134 ;; Hardware stack levels required when called: 1
  2135 ;; This function calls:
  2136 ;;		___lmul
  2137 ;;		i1___lldiv
  2138 ;; This function is called by:
  2139 ;;		Interrupt level 1
  2140 ;; This function uses a non-reentrant model
  2141 ;;
  2142                           
  2143                           
  2144                           ;psect for function _tcInt
  2145  001A                     _tcInt:
  2146  001A                     i1l1357:
  2147                           
  2148                           ;main.c: 35:     unsigned long frequenza_x1_temp, frequenza_x10000_temp;;main.c: 36:    
      +                           unsigned long ratio;;main.c: 38:     if (TMR0IE && TMR0IF) {
  2149  001A  1E8B               	btfss	11,5	;volatile
  2150  001B  281D               	goto	u78_21
  2151  001C  281E               	goto	u78_20
  2152  001D                     u78_21:
  2153  001D  2831               	goto	i1l1365
  2154  001E                     u78_20:
  2155  001E                     i1l1359:
  2156  001E  1D0B               	btfss	11,2	;volatile
  2157  001F  2821               	goto	u79_21
  2158  0020  2822               	goto	u79_20
  2159  0021                     u79_21:
  2160  0021  2831               	goto	i1l1365
  2161  0022                     u79_20:
  2162  0022                     i1l1361:
  2163                           
  2164                           ;main.c: 39:         TMR0IF=0;
  2165  0022  110B               	bcf	11,2	;volatile
  2166  0023                     i1l1363:
  2167                           
  2168                           ;main.c: 41:         t0_ovl += 256L;
  2169  0023  3000               	movlw	0
  2170  0024  07DC               	addwf	_t0_ovl,f	;volatile
  2171  0025  3001               	movlw	1
  2172  0026  1803               	skipnc
  2173  0027  3002               	movlw	2
  2174  0028  07DD               	addwf	_t0_ovl+1,f	;volatile
  2175  0029  3000               	movlw	0
  2176  002A  1803               	skipnc
  2177  002B  3001               	movlw	1
  2178  002C  07DE               	addwf	_t0_ovl+2,f	;volatile
  2179  002D  3000               	movlw	0
  2180  002E  1803               	skipnc
  2181  002F  3001               	movlw	1
  2182  0030  07DF               	addwf	_t0_ovl+3,f	;volatile
  2183  0031                     i1l1365:
  2184                           
  2185                           ;main.c: 44:     if (TMR2IE && TMR2IF) {
  2186  0031  1683               	bsf	3,5	;RP0=1, select bank1
  2187  0032  1303               	bcf	3,6	;RP1=0, select bank1
  2188  0033  1C8C               	btfss	12,1	;volatile
  2189  0034  2836               	goto	u80_21
  2190  0035  2837               	goto	u80_20
  2191  0036                     u80_21:
  2192  0036  2ACF               	goto	i1l72
  2193  0037                     u80_20:
  2194  0037                     i1l1367:
  2195  0037  1283               	bcf	3,5	;RP0=0, select bank0
  2196  0038  1303               	bcf	3,6	;RP1=0, select bank0
  2197  0039  1C8C               	btfss	12,1	;volatile
  2198  003A  283C               	goto	u81_21
  2199  003B  283D               	goto	u81_20
  2200  003C                     u81_21:
  2201  003C  2ACF               	goto	i1l72
  2202  003D                     u81_20:
  2203  003D                     i1l1369:
  2204                           
  2205                           ;main.c: 45:         TMR2IF=0;
  2206  003D  108C               	bcf	12,1	;volatile
  2207  003E                     i1l1371:
  2208                           
  2209                           ;main.c: 48:         millisecondi ++;
  2210  003E  3001               	movlw	1
  2211  003F  07E0               	addwf	_millisecondi,f	;volatile
  2212  0040  1803               	skipnc
  2213  0041  0AE1               	incf	_millisecondi+1,f	;volatile
  2214  0042  3000               	movlw	0
  2215  0043  07E1               	addwf	_millisecondi+1,f	;volatile
  2216  0044                     i1l1373:
  2217                           
  2218                           ;main.c: 51:         if (millisecondi >= 500) {
  2219  0044  0861               	movf	_millisecondi+1,w	;volatile
  2220  0045  3A80               	xorlw	128
  2221  0046  00FF               	movwf	btemp+1
  2222  0047  3081               	movlw	129
  2223  0048  027F               	subwf	btemp+1,w
  2224  0049  1D03               	skipz
  2225  004A  284D               	goto	u82_25
  2226  004B  30F4               	movlw	244
  2227  004C  0260               	subwf	_millisecondi,w	;volatile
  2228  004D                     u82_25:
  2229  004D  1C03               	skipc
  2230  004E  2850               	goto	u82_21
  2231  004F  2851               	goto	u82_20
  2232  0050                     u82_21:
  2233  0050  297E               	goto	i1l1393
  2234  0051                     u82_20:
  2235  0051                     i1l1375:
  2236                           
  2237                           ;main.c: 55:             t0_gross = ((unsigned long int)TMR0 + t0_ovl) * 2L;
  2238  0051  1283               	bcf	3,5	;RP0=0, select bank0
  2239  0052  1303               	bcf	3,6	;RP1=0, select bank0
  2240  0053  085C               	movf	_t0_ovl,w	;volatile
  2241  0054  00AD               	movwf	??_tcInt
  2242  0055  085D               	movf	_t0_ovl+1,w	;volatile
  2243  0056  00AE               	movwf	??_tcInt+1
  2244  0057  085E               	movf	_t0_ovl+2,w	;volatile
  2245  0058  00AF               	movwf	??_tcInt+2
  2246  0059  085F               	movf	_t0_ovl+3,w	;volatile
  2247  005A  00B0               	movwf	??_tcInt+3
  2248  005B  0801               	movf	1,w	;volatile
  2249  005C  00B1               	movwf	??_tcInt+4
  2250  005D  01B2               	clrf	??_tcInt+5
  2251  005E  01B3               	clrf	??_tcInt+6
  2252  005F  01B4               	clrf	??_tcInt+7
  2253  0060  0831               	movf	??_tcInt+4,w
  2254  0061  07AD               	addwf	??_tcInt,f
  2255  0062  0832               	movf	??_tcInt+5,w
  2256  0063  1803               	skipnc
  2257  0064  0F32               	incfsz	??_tcInt+5,w
  2258  0065  2867               	goto	u83_20
  2259  0066  2868               	goto	u83_21
  2260  0067                     u83_20:
  2261  0067  07AE               	addwf	??_tcInt+1,f
  2262  0068                     u83_21:
  2263  0068  0833               	movf	??_tcInt+6,w
  2264  0069  1803               	skipnc
  2265  006A  0F33               	incfsz	??_tcInt+6,w
  2266  006B  286D               	goto	u83_22
  2267  006C  286E               	goto	u83_23
  2268  006D                     u83_22:
  2269  006D  07AF               	addwf	??_tcInt+2,f
  2270  006E                     u83_23:
  2271  006E  0834               	movf	??_tcInt+7,w
  2272  006F  1803               	skipnc
  2273  0070  0A34               	incf	??_tcInt+7,w
  2274  0071  07B0               	addwf	??_tcInt+3,f
  2275  0072  1003               	clrc
  2276  0073  0D2D               	rlf	??_tcInt,w
  2277  0074  00D8               	movwf	_t0_gross	;volatile
  2278  0075  0D2E               	rlf	??_tcInt+1,w
  2279  0076  00D9               	movwf	_t0_gross+1	;volatile
  2280  0077  0D2F               	rlf	??_tcInt+2,w
  2281  0078  00DA               	movwf	_t0_gross+2	;volatile
  2282  0079  0D30               	rlf	??_tcInt+3,w
  2283  007A  00DB               	movwf	_t0_gross+3	;volatile
  2284                           
  2285                           ;main.c: 56:             frequenza_x1_temp = (t0_gross - t0_gross_prec);
  2286  007B  0858               	movf	_t0_gross,w	;volatile
  2287  007C  00AD               	movwf	??_tcInt
  2288  007D  0859               	movf	_t0_gross+1,w	;volatile
  2289  007E  00AE               	movwf	??_tcInt+1
  2290  007F  085A               	movf	_t0_gross+2,w	;volatile
  2291  0080  00AF               	movwf	??_tcInt+2
  2292  0081  085B               	movf	_t0_gross+3,w	;volatile
  2293  0082  00B0               	movwf	??_tcInt+3
  2294  0083  0854               	movf	_t0_gross_prec,w	;volatile
  2295  0084  02AD               	subwf	??_tcInt,f
  2296  0085  0855               	movf	_t0_gross_prec+1,w	;volatile
  2297  0086  1C03               	skipc
  2298  0087  0F55               	incfsz	_t0_gross_prec+1,w	;volatile
  2299  0088  288A               	goto	u84_21
  2300  0089  288B               	goto	u84_22
  2301  008A                     u84_21:
  2302  008A  02AE               	subwf	??_tcInt+1,f
  2303  008B                     u84_22:
  2304  008B  0856               	movf	_t0_gross_prec+2,w	;volatile
  2305  008C  1C03               	skipc
  2306  008D  0F56               	incfsz	_t0_gross_prec+2,w	;volatile
  2307  008E  2890               	goto	u84_23
  2308  008F  2891               	goto	u84_24
  2309  0090                     u84_23:
  2310  0090  02AF               	subwf	??_tcInt+2,f
  2311  0091                     u84_24:
  2312  0091  0857               	movf	_t0_gross_prec+3,w	;volatile
  2313  0092  1C03               	skipc
  2314  0093  0F57               	incfsz	_t0_gross_prec+3,w	;volatile
  2315  0094  2896               	goto	u84_25
  2316  0095  2897               	goto	u84_26
  2317  0096                     u84_25:
  2318  0096  02B0               	subwf	??_tcInt+3,f
  2319  0097                     u84_26:
  2320  0097  0830               	movf	??_tcInt+3,w
  2321  0098  00C3               	movwf	tcInt@frequenza_x1_temp+3
  2322  0099  082F               	movf	??_tcInt+2,w
  2323  009A  00C2               	movwf	tcInt@frequenza_x1_temp+2
  2324  009B  082E               	movf	??_tcInt+1,w
  2325  009C  00C1               	movwf	tcInt@frequenza_x1_temp+1
  2326  009D  082D               	movf	??_tcInt,w
  2327  009E  00C0               	movwf	tcInt@frequenza_x1_temp
  2328  009F                     i1l1377:
  2329                           
  2330                           ;main.c: 59:             ratio = (100 * frequenza_x1_temp) / frequenza_x1;
  2331  009F  084B               	movf	_frequenza_x1+3,w	;volatile
  2332  00A0  00A3               	movwf	i1___lldiv@divisor+3
  2333  00A1  084A               	movf	_frequenza_x1+2,w	;volatile
  2334  00A2  00A2               	movwf	i1___lldiv@divisor+2
  2335  00A3  0849               	movf	_frequenza_x1+1,w	;volatile
  2336  00A4  00A1               	movwf	i1___lldiv@divisor+1
  2337  00A5  0848               	movf	_frequenza_x1,w	;volatile
  2338  00A6  00A0               	movwf	i1___lldiv@divisor
  2339  00A7  0843               	movf	tcInt@frequenza_x1_temp+3,w
  2340  00A8  00F3               	movwf	___lmul@multiplier+3
  2341  00A9  0842               	movf	tcInt@frequenza_x1_temp+2,w
  2342  00AA  00F2               	movwf	___lmul@multiplier+2
  2343  00AB  0841               	movf	tcInt@frequenza_x1_temp+1,w
  2344  00AC  00F1               	movwf	___lmul@multiplier+1
  2345  00AD  0840               	movf	tcInt@frequenza_x1_temp,w
  2346  00AE  00F0               	movwf	___lmul@multiplier
  2347  00AF  3000               	movlw	0
  2348  00B0  00F7               	movwf	___lmul@multiplicand+3
  2349  00B1  3000               	movlw	0
  2350  00B2  00F6               	movwf	___lmul@multiplicand+2
  2351  00B3  3000               	movlw	0
  2352  00B4  00F5               	movwf	___lmul@multiplicand+1
  2353  00B5  3064               	movlw	100
  2354  00B6  00F4               	movwf	___lmul@multiplicand
  2355  00B7  2731               	fcall	___lmul
  2356  00B8  0873               	movf	?___lmul+3,w
  2357  00B9  1283               	bcf	3,5	;RP0=0, select bank0
  2358  00BA  1303               	bcf	3,6	;RP1=0, select bank0
  2359  00BB  00A7               	movwf	i1___lldiv@dividend+3
  2360  00BC  0872               	movf	?___lmul+2,w
  2361  00BD  00A6               	movwf	i1___lldiv@dividend+2
  2362  00BE  0871               	movf	?___lmul+1,w
  2363  00BF  00A5               	movwf	i1___lldiv@dividend+1
  2364  00C0  0870               	movf	?___lmul,w
  2365  00C1  00A4               	movwf	i1___lldiv@dividend
  2366  00C2  261F               	fcall	i1___lldiv
  2367  00C3  1283               	bcf	3,5	;RP0=0, select bank0
  2368  00C4  1303               	bcf	3,6	;RP1=0, select bank0
  2369  00C5  0823               	movf	?i1___lldiv+3,w
  2370  00C6  00C7               	movwf	tcInt@ratio+3
  2371  00C7  0822               	movf	?i1___lldiv+2,w
  2372  00C8  00C6               	movwf	tcInt@ratio+2
  2373  00C9  0821               	movf	?i1___lldiv+1,w
  2374  00CA  00C5               	movwf	tcInt@ratio+1
  2375  00CB  0820               	movf	?i1___lldiv,w
  2376  00CC  00C4               	movwf	tcInt@ratio
  2377  00CD                     i1l1379:
  2378                           
  2379                           ;main.c: 60:             frequenza_x1 = frequenza_x1_temp;
  2380  00CD  0843               	movf	tcInt@frequenza_x1_temp+3,w
  2381  00CE  00CB               	movwf	_frequenza_x1+3	;volatile
  2382  00CF  0842               	movf	tcInt@frequenza_x1_temp+2,w
  2383  00D0  00CA               	movwf	_frequenza_x1+2	;volatile
  2384  00D1  0841               	movf	tcInt@frequenza_x1_temp+1,w
  2385  00D2  00C9               	movwf	_frequenza_x1+1	;volatile
  2386  00D3  0840               	movf	tcInt@frequenza_x1_temp,w
  2387  00D4  00C8               	movwf	_frequenza_x1	;volatile
  2388  00D5                     i1l1381:
  2389                           
  2390                           ;main.c: 62:             if ((ratio > 105) || (ratio < 95)) {
  2391  00D5  0847               	movf	tcInt@ratio+3,w
  2392  00D6  1D03               	btfss	3,2
  2393  00D7  28E5               	goto	u85_21
  2394  00D8  0846               	movf	tcInt@ratio+2,w
  2395  00D9  1D03               	btfss	3,2
  2396  00DA  28E5               	goto	u85_21
  2397  00DB  0845               	movf	tcInt@ratio+1,w
  2398  00DC  1D03               	btfss	3,2
  2399  00DD  28E5               	goto	u85_21
  2400  00DE  306A               	movlw	106
  2401  00DF  0244               	subwf	tcInt@ratio,w
  2402  00E0  1D03               	skipz
  2403  00E1  28E2               	goto	u85_23
  2404  00E2                     u85_23:
  2405  00E2  1803               	btfsc	3,0
  2406  00E3  28E5               	goto	u85_21
  2407  00E4  28E6               	goto	u85_20
  2408  00E5                     u85_21:
  2409  00E5  28F9               	goto	i1l1385
  2410  00E6                     u85_20:
  2411  00E6                     i1l1383:
  2412  00E6  1283               	bcf	3,5	;RP0=0, select bank0
  2413  00E7  1303               	bcf	3,6	;RP1=0, select bank0
  2414  00E8  0847               	movf	tcInt@ratio+3,w
  2415  00E9  1D03               	btfss	3,2
  2416  00EA  28F8               	goto	u86_21
  2417  00EB  0846               	movf	tcInt@ratio+2,w
  2418  00EC  1D03               	btfss	3,2
  2419  00ED  28F8               	goto	u86_21
  2420  00EE  0845               	movf	tcInt@ratio+1,w
  2421  00EF  1D03               	btfss	3,2
  2422  00F0  28F8               	goto	u86_21
  2423  00F1  305F               	movlw	95
  2424  00F2  0244               	subwf	tcInt@ratio,w
  2425  00F3  1D03               	skipz
  2426  00F4  28F5               	goto	u86_23
  2427  00F5                     u86_23:
  2428  00F5  1803               	btfsc	3,0
  2429  00F6  28F8               	goto	u86_21
  2430  00F7  28F9               	goto	u86_20
  2431  00F8                     u86_21:
  2432  00F8  2917               	goto	i1l1387
  2433  00F9                     u86_20:
  2434  00F9                     i1l1385:
  2435                           
  2436                           ;main.c: 64:                 frequenza_x100 = frequenza_x1_temp * 100L;
  2437  00F9  1283               	bcf	3,5	;RP0=0, select bank0
  2438  00FA  1303               	bcf	3,6	;RP1=0, select bank0
  2439  00FB  0843               	movf	tcInt@frequenza_x1_temp+3,w
  2440  00FC  00F3               	movwf	___lmul@multiplier+3
  2441  00FD  0842               	movf	tcInt@frequenza_x1_temp+2,w
  2442  00FE  00F2               	movwf	___lmul@multiplier+2
  2443  00FF  0841               	movf	tcInt@frequenza_x1_temp+1,w
  2444  0100  00F1               	movwf	___lmul@multiplier+1
  2445  0101  0840               	movf	tcInt@frequenza_x1_temp,w
  2446  0102  00F0               	movwf	___lmul@multiplier
  2447  0103  3000               	movlw	0
  2448  0104  00F7               	movwf	___lmul@multiplicand+3
  2449  0105  3000               	movlw	0
  2450  0106  00F6               	movwf	___lmul@multiplicand+2
  2451  0107  3000               	movlw	0
  2452  0108  00F5               	movwf	___lmul@multiplicand+1
  2453  0109  3064               	movlw	100
  2454  010A  00F4               	movwf	___lmul@multiplicand
  2455  010B  2731               	fcall	___lmul
  2456  010C  0873               	movf	?___lmul+3,w
  2457  010D  1283               	bcf	3,5	;RP0=0, select bank0
  2458  010E  1303               	bcf	3,6	;RP1=0, select bank0
  2459  010F  00CF               	movwf	_frequenza_x100+3	;volatile
  2460  0110  0872               	movf	?___lmul+2,w
  2461  0111  00CE               	movwf	_frequenza_x100+2	;volatile
  2462  0112  0871               	movf	?___lmul+1,w
  2463  0113  00CD               	movwf	_frequenza_x100+1	;volatile
  2464  0114  0870               	movf	?___lmul,w
  2465  0115  00CC               	movwf	_frequenza_x100	;volatile
  2466                           
  2467                           ;main.c: 65:             }
  2468  0116  2974               	goto	i1l1389
  2469  0117                     i1l1387:
  2470                           
  2471                           ;main.c: 68:                 frequenza_x100 = ((frequenza_x100*10L) + (frequenza_x1_temp
      +                           * 100L)) / 11L;
  2472  0117  3000               	movlw	0
  2473  0118  1283               	bcf	3,5	;RP0=0, select bank0
  2474  0119  1303               	bcf	3,6	;RP1=0, select bank0
  2475  011A  00A3               	movwf	i1___lldiv@divisor+3
  2476  011B  3000               	movlw	0
  2477  011C  00A2               	movwf	i1___lldiv@divisor+2
  2478  011D  3000               	movlw	0
  2479  011E  00A1               	movwf	i1___lldiv@divisor+1
  2480  011F  300B               	movlw	11
  2481  0120  00A0               	movwf	i1___lldiv@divisor
  2482  0121  084F               	movf	_frequenza_x100+3,w	;volatile
  2483  0122  00F3               	movwf	___lmul@multiplier+3
  2484  0123  084E               	movf	_frequenza_x100+2,w	;volatile
  2485  0124  00F2               	movwf	___lmul@multiplier+2
  2486  0125  084D               	movf	_frequenza_x100+1,w	;volatile
  2487  0126  00F1               	movwf	___lmul@multiplier+1
  2488  0127  084C               	movf	_frequenza_x100,w	;volatile
  2489  0128  00F0               	movwf	___lmul@multiplier
  2490  0129  3000               	movlw	0
  2491  012A  00F7               	movwf	___lmul@multiplicand+3
  2492  012B  3000               	movlw	0
  2493  012C  00F6               	movwf	___lmul@multiplicand+2
  2494  012D  3000               	movlw	0
  2495  012E  00F5               	movwf	___lmul@multiplicand+1
  2496  012F  300A               	movlw	10
  2497  0130  00F4               	movwf	___lmul@multiplicand
  2498  0131  2731               	fcall	___lmul
  2499  0132  0870               	movf	?___lmul,w
  2500  0133  1283               	bcf	3,5	;RP0=0, select bank0
  2501  0134  1303               	bcf	3,6	;RP1=0, select bank0
  2502  0135  00AD               	movwf	??_tcInt
  2503  0136  0871               	movf	?___lmul+1,w
  2504  0137  00AE               	movwf	??_tcInt+1
  2505  0138  0872               	movf	?___lmul+2,w
  2506  0139  00AF               	movwf	??_tcInt+2
  2507  013A  0873               	movf	?___lmul+3,w
  2508  013B  00B0               	movwf	??_tcInt+3
  2509  013C  0843               	movf	tcInt@frequenza_x1_temp+3,w
  2510  013D  00F3               	movwf	___lmul@multiplier+3
  2511  013E  0842               	movf	tcInt@frequenza_x1_temp+2,w
  2512  013F  00F2               	movwf	___lmul@multiplier+2
  2513  0140  0841               	movf	tcInt@frequenza_x1_temp+1,w
  2514  0141  00F1               	movwf	___lmul@multiplier+1
  2515  0142  0840               	movf	tcInt@frequenza_x1_temp,w
  2516  0143  00F0               	movwf	___lmul@multiplier
  2517  0144  3000               	movlw	0
  2518  0145  00F7               	movwf	___lmul@multiplicand+3
  2519  0146  3000               	movlw	0
  2520  0147  00F6               	movwf	___lmul@multiplicand+2
  2521  0148  3000               	movlw	0
  2522  0149  00F5               	movwf	___lmul@multiplicand+1
  2523  014A  3064               	movlw	100
  2524  014B  00F4               	movwf	___lmul@multiplicand
  2525  014C  2731               	fcall	___lmul
  2526  014D  0870               	movf	?___lmul,w
  2527  014E  1283               	bcf	3,5	;RP0=0, select bank0
  2528  014F  1303               	bcf	3,6	;RP1=0, select bank0
  2529  0150  07AD               	addwf	??_tcInt,f
  2530  0151  0871               	movf	?___lmul+1,w
  2531  0152  1803               	skipnc
  2532  0153  0F71               	incfsz	?___lmul+1,w
  2533  0154  2956               	goto	u87_20
  2534  0155  2957               	goto	u87_21
  2535  0156                     u87_20:
  2536  0156  07AE               	addwf	??_tcInt+1,f
  2537  0157                     u87_21:
  2538  0157  0872               	movf	?___lmul+2,w
  2539  0158  1803               	skipnc
  2540  0159  0F72               	incfsz	?___lmul+2,w
  2541  015A  295C               	goto	u87_22
  2542  015B  295D               	goto	u87_23
  2543  015C                     u87_22:
  2544  015C  07AF               	addwf	??_tcInt+2,f
  2545  015D                     u87_23:
  2546  015D  0873               	movf	?___lmul+3,w
  2547  015E  1803               	skipnc
  2548  015F  0A73               	incf	?___lmul+3,w
  2549  0160  07B0               	addwf	??_tcInt+3,f
  2550  0161  0830               	movf	??_tcInt+3,w
  2551  0162  00A7               	movwf	i1___lldiv@dividend+3
  2552  0163  082F               	movf	??_tcInt+2,w
  2553  0164  00A6               	movwf	i1___lldiv@dividend+2
  2554  0165  082E               	movf	??_tcInt+1,w
  2555  0166  00A5               	movwf	i1___lldiv@dividend+1
  2556  0167  082D               	movf	??_tcInt,w
  2557  0168  00A4               	movwf	i1___lldiv@dividend
  2558  0169  261F               	fcall	i1___lldiv
  2559  016A  1283               	bcf	3,5	;RP0=0, select bank0
  2560  016B  1303               	bcf	3,6	;RP1=0, select bank0
  2561  016C  0823               	movf	?i1___lldiv+3,w
  2562  016D  00CF               	movwf	_frequenza_x100+3	;volatile
  2563  016E  0822               	movf	?i1___lldiv+2,w
  2564  016F  00CE               	movwf	_frequenza_x100+2	;volatile
  2565  0170  0821               	movf	?i1___lldiv+1,w
  2566  0171  00CD               	movwf	_frequenza_x100+1	;volatile
  2567  0172  0820               	movf	?i1___lldiv,w
  2568  0173  00CC               	movwf	_frequenza_x100	;volatile
  2569  0174                     i1l1389:
  2570                           
  2571                           ;main.c: 71:             t0_gross_prec = t0_gross;
  2572  0174  085B               	movf	_t0_gross+3,w	;volatile
  2573  0175  00D7               	movwf	_t0_gross_prec+3	;volatile
  2574  0176  085A               	movf	_t0_gross+2,w	;volatile
  2575  0177  00D6               	movwf	_t0_gross_prec+2	;volatile
  2576  0178  0859               	movf	_t0_gross+1,w	;volatile
  2577  0179  00D5               	movwf	_t0_gross_prec+1	;volatile
  2578  017A  0858               	movf	_t0_gross,w	;volatile
  2579  017B  00D4               	movwf	_t0_gross_prec	;volatile
  2580  017C                     i1l1391:
  2581                           
  2582                           ;main.c: 72:             millisecondi = 0;
  2583  017C  01E0               	clrf	_millisecondi	;volatile
  2584  017D  01E1               	clrf	_millisecondi+1	;volatile
  2585  017E                     i1l1393:
  2586                           
  2587                           ;main.c: 75:         if (frequenza_x1 < 50) {
  2588  017E  1283               	bcf	3,5	;RP0=0, select bank0
  2589  017F  1303               	bcf	3,6	;RP1=0, select bank0
  2590  0180  084B               	movf	_frequenza_x1+3,w	;volatile
  2591  0181  1D03               	btfss	3,2
  2592  0182  2990               	goto	u88_21
  2593  0183  084A               	movf	_frequenza_x1+2,w	;volatile
  2594  0184  1D03               	btfss	3,2
  2595  0185  2990               	goto	u88_21
  2596  0186  0849               	movf	_frequenza_x1+1,w	;volatile
  2597  0187  1D03               	btfss	3,2
  2598  0188  2990               	goto	u88_21
  2599  0189  3032               	movlw	50
  2600  018A  0248               	subwf	_frequenza_x1,w	;volatile
  2601  018B  1D03               	skipz
  2602  018C  298D               	goto	u88_23
  2603  018D                     u88_23:
  2604  018D  1803               	btfsc	3,0
  2605  018E  2990               	goto	u88_21
  2606  018F  2991               	goto	u88_20
  2607  0190                     u88_21:
  2608  0190  2ACF               	goto	i1l72
  2609  0191                     u88_20:
  2610  0191                     i1l1395:
  2611                           
  2612                           ;main.c: 78:             periodo_lento ++;
  2613  0191  3001               	movlw	1
  2614  0192  1283               	bcf	3,5	;RP0=0, select bank0
  2615  0193  1303               	bcf	3,6	;RP1=0, select bank0
  2616  0194  07E4               	addwf	_periodo_lento,f	;volatile
  2617  0195  3000               	movlw	0
  2618  0196  1803               	skipnc
  2619  0197  3001               	movlw	1
  2620  0198  07E5               	addwf	_periodo_lento+1,f	;volatile
  2621  0199  3000               	movlw	0
  2622  019A  1803               	skipnc
  2623  019B  3001               	movlw	1
  2624  019C  07E6               	addwf	_periodo_lento+2,f	;volatile
  2625  019D  3000               	movlw	0
  2626  019E  1803               	skipnc
  2627  019F  3001               	movlw	1
  2628  01A0  07E7               	addwf	_periodo_lento+3,f	;volatile
  2629                           
  2630                           ;main.c: 79:             if (TMR0 != t0_prec) {
  2631  01A1  0801               	movf	1,w	;volatile
  2632  01A2  00AD               	movwf	??_tcInt
  2633  01A3  01AE               	clrf	??_tcInt+1
  2634  01A4  0863               	movf	_t0_prec+1,w	;volatile
  2635  01A5  062E               	xorwf	??_tcInt+1,w
  2636  01A6  1D03               	skipz
  2637  01A7  29AA               	goto	u89_25
  2638  01A8  0862               	movf	_t0_prec,w	;volatile
  2639  01A9  062D               	xorwf	??_tcInt,w
  2640  01AA                     u89_25:
  2641  01AA  1903               	skipnz
  2642  01AB  29AD               	goto	u89_21
  2643  01AC  29AE               	goto	u89_20
  2644  01AD                     u89_21:
  2645  01AD  2ACF               	goto	i1l72
  2646  01AE                     u89_20:
  2647  01AE                     i1l1397:
  2648                           
  2649                           ;main.c: 81:                 frequenza_x10000_temp = ((1000L * 10000L) / periodo_lento);
  2650  01AE  0867               	movf	_periodo_lento+3,w	;volatile
  2651  01AF  00A3               	movwf	i1___lldiv@divisor+3
  2652  01B0  0866               	movf	_periodo_lento+2,w	;volatile
  2653  01B1  00A2               	movwf	i1___lldiv@divisor+2
  2654  01B2  0865               	movf	_periodo_lento+1,w	;volatile
  2655  01B3  00A1               	movwf	i1___lldiv@divisor+1
  2656  01B4  0864               	movf	_periodo_lento,w	;volatile
  2657  01B5  00A0               	movwf	i1___lldiv@divisor
  2658  01B6  3000               	movlw	0
  2659  01B7  00A7               	movwf	i1___lldiv@dividend+3
  2660  01B8  3098               	movlw	152
  2661  01B9  00A6               	movwf	i1___lldiv@dividend+2
  2662  01BA  3096               	movlw	150
  2663  01BB  00A5               	movwf	i1___lldiv@dividend+1
  2664  01BC  3080               	movlw	128
  2665  01BD  00A4               	movwf	i1___lldiv@dividend
  2666  01BE  261F               	fcall	i1___lldiv
  2667  01BF  1283               	bcf	3,5	;RP0=0, select bank0
  2668  01C0  1303               	bcf	3,6	;RP1=0, select bank0
  2669  01C1  0823               	movf	?i1___lldiv+3,w
  2670  01C2  00BF               	movwf	tcInt@frequenza_x10000_temp+3
  2671  01C3  0822               	movf	?i1___lldiv+2,w
  2672  01C4  00BE               	movwf	tcInt@frequenza_x10000_temp+2
  2673  01C5  0821               	movf	?i1___lldiv+1,w
  2674  01C6  00BD               	movwf	tcInt@frequenza_x10000_temp+1
  2675  01C7  0820               	movf	?i1___lldiv,w
  2676  01C8  00BC               	movwf	tcInt@frequenza_x10000_temp
  2677  01C9                     i1l1399:
  2678                           
  2679                           ;main.c: 82:                 periodo_lento = 0;
  2680  01C9  3000               	movlw	0
  2681  01CA  00E7               	movwf	_periodo_lento+3	;volatile
  2682  01CB  3000               	movlw	0
  2683  01CC  00E6               	movwf	_periodo_lento+2	;volatile
  2684  01CD  3000               	movlw	0
  2685  01CE  00E5               	movwf	_periodo_lento+1	;volatile
  2686  01CF  3000               	movlw	0
  2687  01D0  00E4               	movwf	_periodo_lento	;volatile
  2688  01D1                     i1l1401:
  2689                           
  2690                           ;main.c: 83:                 t0_prec = TMR0;
  2691  01D1  0801               	movf	1,w	;volatile
  2692  01D2  00AD               	movwf	??_tcInt
  2693  01D3  01AE               	clrf	??_tcInt+1
  2694  01D4  082D               	movf	??_tcInt,w
  2695  01D5  00E2               	movwf	_t0_prec	;volatile
  2696  01D6  082E               	movf	??_tcInt+1,w
  2697  01D7  00E3               	movwf	_t0_prec+1	;volatile
  2698                           
  2699                           ;main.c: 86:                 ratio = (100 * frequenza_x10000_temp) / frequenza_x10000;
  2700  01D8  0853               	movf	_frequenza_x10000+3,w	;volatile
  2701  01D9  00A3               	movwf	i1___lldiv@divisor+3
  2702  01DA  0852               	movf	_frequenza_x10000+2,w	;volatile
  2703  01DB  00A2               	movwf	i1___lldiv@divisor+2
  2704  01DC  0851               	movf	_frequenza_x10000+1,w	;volatile
  2705  01DD  00A1               	movwf	i1___lldiv@divisor+1
  2706  01DE  0850               	movf	_frequenza_x10000,w	;volatile
  2707  01DF  00A0               	movwf	i1___lldiv@divisor
  2708  01E0  083F               	movf	tcInt@frequenza_x10000_temp+3,w
  2709  01E1  00F3               	movwf	___lmul@multiplier+3
  2710  01E2  083E               	movf	tcInt@frequenza_x10000_temp+2,w
  2711  01E3  00F2               	movwf	___lmul@multiplier+2
  2712  01E4  083D               	movf	tcInt@frequenza_x10000_temp+1,w
  2713  01E5  00F1               	movwf	___lmul@multiplier+1
  2714  01E6  083C               	movf	tcInt@frequenza_x10000_temp,w
  2715  01E7  00F0               	movwf	___lmul@multiplier
  2716  01E8  3000               	movlw	0
  2717  01E9  00F7               	movwf	___lmul@multiplicand+3
  2718  01EA  3000               	movlw	0
  2719  01EB  00F6               	movwf	___lmul@multiplicand+2
  2720  01EC  3000               	movlw	0
  2721  01ED  00F5               	movwf	___lmul@multiplicand+1
  2722  01EE  3064               	movlw	100
  2723  01EF  00F4               	movwf	___lmul@multiplicand
  2724  01F0  2731               	fcall	___lmul
  2725  01F1  0873               	movf	?___lmul+3,w
  2726  01F2  1283               	bcf	3,5	;RP0=0, select bank0
  2727  01F3  1303               	bcf	3,6	;RP1=0, select bank0
  2728  01F4  00A7               	movwf	i1___lldiv@dividend+3
  2729  01F5  0872               	movf	?___lmul+2,w
  2730  01F6  00A6               	movwf	i1___lldiv@dividend+2
  2731  01F7  0871               	movf	?___lmul+1,w
  2732  01F8  00A5               	movwf	i1___lldiv@dividend+1
  2733  01F9  0870               	movf	?___lmul,w
  2734  01FA  00A4               	movwf	i1___lldiv@dividend
  2735  01FB  261F               	fcall	i1___lldiv
  2736  01FC  1283               	bcf	3,5	;RP0=0, select bank0
  2737  01FD  1303               	bcf	3,6	;RP1=0, select bank0
  2738  01FE  0823               	movf	?i1___lldiv+3,w
  2739  01FF  00C7               	movwf	tcInt@ratio+3
  2740  0200  0822               	movf	?i1___lldiv+2,w
  2741  0201  00C6               	movwf	tcInt@ratio+2
  2742  0202  0821               	movf	?i1___lldiv+1,w
  2743  0203  00C5               	movwf	tcInt@ratio+1
  2744  0204  0820               	movf	?i1___lldiv,w
  2745  0205  00C4               	movwf	tcInt@ratio
  2746  0206                     i1l1403:
  2747                           
  2748                           ;main.c: 87:                 if ((ratio > 110) || (ratio < 90)) {
  2749  0206  0847               	movf	tcInt@ratio+3,w
  2750  0207  1D03               	btfss	3,2
  2751  0208  2A16               	goto	u90_21
  2752  0209  0846               	movf	tcInt@ratio+2,w
  2753  020A  1D03               	btfss	3,2
  2754  020B  2A16               	goto	u90_21
  2755  020C  0845               	movf	tcInt@ratio+1,w
  2756  020D  1D03               	btfss	3,2
  2757  020E  2A16               	goto	u90_21
  2758  020F  306F               	movlw	111
  2759  0210  0244               	subwf	tcInt@ratio,w
  2760  0211  1D03               	skipz
  2761  0212  2A13               	goto	u90_23
  2762  0213                     u90_23:
  2763  0213  1803               	btfsc	3,0
  2764  0214  2A16               	goto	u90_21
  2765  0215  2A17               	goto	u90_20
  2766  0216                     u90_21:
  2767  0216  2A2A               	goto	i1l1407
  2768  0217                     u90_20:
  2769  0217                     i1l1405:
  2770  0217  1283               	bcf	3,5	;RP0=0, select bank0
  2771  0218  1303               	bcf	3,6	;RP1=0, select bank0
  2772  0219  0847               	movf	tcInt@ratio+3,w
  2773  021A  1D03               	btfss	3,2
  2774  021B  2A29               	goto	u91_21
  2775  021C  0846               	movf	tcInt@ratio+2,w
  2776  021D  1D03               	btfss	3,2
  2777  021E  2A29               	goto	u91_21
  2778  021F  0845               	movf	tcInt@ratio+1,w
  2779  0220  1D03               	btfss	3,2
  2780  0221  2A29               	goto	u91_21
  2781  0222  305A               	movlw	90
  2782  0223  0244               	subwf	tcInt@ratio,w
  2783  0224  1D03               	skipz
  2784  0225  2A26               	goto	u91_23
  2785  0226                     u91_23:
  2786  0226  1803               	btfsc	3,0
  2787  0227  2A29               	goto	u91_21
  2788  0228  2A2A               	goto	u91_20
  2789  0229                     u91_21:
  2790  0229  2A35               	goto	i1l1409
  2791  022A                     u91_20:
  2792  022A                     i1l1407:
  2793                           
  2794                           ;main.c: 89:                     frequenza_x10000 = frequenza_x10000_temp;
  2795  022A  1283               	bcf	3,5	;RP0=0, select bank0
  2796  022B  1303               	bcf	3,6	;RP1=0, select bank0
  2797  022C  083F               	movf	tcInt@frequenza_x10000_temp+3,w
  2798  022D  00D3               	movwf	_frequenza_x10000+3	;volatile
  2799  022E  083E               	movf	tcInt@frequenza_x10000_temp+2,w
  2800  022F  00D2               	movwf	_frequenza_x10000+2	;volatile
  2801  0230  083D               	movf	tcInt@frequenza_x10000_temp+1,w
  2802  0231  00D1               	movwf	_frequenza_x10000+1	;volatile
  2803  0232  083C               	movf	tcInt@frequenza_x10000_temp,w
  2804  0233  00D0               	movwf	_frequenza_x10000	;volatile
  2805                           
  2806                           ;main.c: 90:                 }
  2807  0234  2ACF               	goto	i1l72
  2808  0235                     i1l1409:
  2809                           
  2810                           ;main.c: 93:                     ratio = frequenza_x10000 / 10000L;
  2811  0235  3000               	movlw	0
  2812  0236  1283               	bcf	3,5	;RP0=0, select bank0
  2813  0237  1303               	bcf	3,6	;RP1=0, select bank0
  2814  0238  00A3               	movwf	i1___lldiv@divisor+3
  2815  0239  3000               	movlw	0
  2816  023A  00A2               	movwf	i1___lldiv@divisor+2
  2817  023B  3027               	movlw	39
  2818  023C  00A1               	movwf	i1___lldiv@divisor+1
  2819  023D  3010               	movlw	16
  2820  023E  00A0               	movwf	i1___lldiv@divisor
  2821  023F  0853               	movf	_frequenza_x10000+3,w	;volatile
  2822  0240  00A7               	movwf	i1___lldiv@dividend+3
  2823  0241  0852               	movf	_frequenza_x10000+2,w	;volatile
  2824  0242  00A6               	movwf	i1___lldiv@dividend+2
  2825  0243  0851               	movf	_frequenza_x10000+1,w	;volatile
  2826  0244  00A5               	movwf	i1___lldiv@dividend+1
  2827  0245  0850               	movf	_frequenza_x10000,w	;volatile
  2828  0246  00A4               	movwf	i1___lldiv@dividend
  2829  0247  261F               	fcall	i1___lldiv
  2830  0248  1283               	bcf	3,5	;RP0=0, select bank0
  2831  0249  1303               	bcf	3,6	;RP1=0, select bank0
  2832  024A  0823               	movf	?i1___lldiv+3,w
  2833  024B  00C7               	movwf	tcInt@ratio+3
  2834  024C  0822               	movf	?i1___lldiv+2,w
  2835  024D  00C6               	movwf	tcInt@ratio+2
  2836  024E  0821               	movf	?i1___lldiv+1,w
  2837  024F  00C5               	movwf	tcInt@ratio+1
  2838  0250  0820               	movf	?i1___lldiv,w
  2839  0251  00C4               	movwf	tcInt@ratio
  2840                           
  2841                           ;main.c: 94:                     frequenza_x10000 = ((frequenza_x10000*(10+ratio)) + (fr
      +                          equenza_x10000_temp)) / (11+ratio);
  2842  0252  300B               	movlw	11
  2843  0253  00AD               	movwf	??_tcInt
  2844  0254  3000               	movlw	0
  2845  0255  00AE               	movwf	??_tcInt+1
  2846  0256  3000               	movlw	0
  2847  0257  00AF               	movwf	??_tcInt+2
  2848  0258  3000               	movlw	0
  2849  0259  00B0               	movwf	??_tcInt+3
  2850  025A  0844               	movf	tcInt@ratio,w
  2851  025B  07AD               	addwf	??_tcInt,f
  2852  025C  0845               	movf	tcInt@ratio+1,w
  2853  025D  1803               	skipnc
  2854  025E  0F45               	incfsz	tcInt@ratio+1,w
  2855  025F  2A61               	goto	u92_20
  2856  0260  2A62               	goto	u92_21
  2857  0261                     u92_20:
  2858  0261  07AE               	addwf	??_tcInt+1,f
  2859  0262                     u92_21:
  2860  0262  0846               	movf	tcInt@ratio+2,w
  2861  0263  1803               	skipnc
  2862  0264  0F46               	incfsz	tcInt@ratio+2,w
  2863  0265  2A67               	goto	u92_22
  2864  0266  2A68               	goto	u92_23
  2865  0267                     u92_22:
  2866  0267  07AF               	addwf	??_tcInt+2,f
  2867  0268                     u92_23:
  2868  0268  0847               	movf	tcInt@ratio+3,w
  2869  0269  1803               	skipnc
  2870  026A  0A47               	incf	tcInt@ratio+3,w
  2871  026B  07B0               	addwf	??_tcInt+3,f
  2872  026C  0830               	movf	??_tcInt+3,w
  2873  026D  00A3               	movwf	i1___lldiv@divisor+3
  2874  026E  082F               	movf	??_tcInt+2,w
  2875  026F  00A2               	movwf	i1___lldiv@divisor+2
  2876  0270  082E               	movf	??_tcInt+1,w
  2877  0271  00A1               	movwf	i1___lldiv@divisor+1
  2878  0272  082D               	movf	??_tcInt,w
  2879  0273  00A0               	movwf	i1___lldiv@divisor
  2880  0274  300A               	movlw	10
  2881  0275  00B1               	movwf	??_tcInt+4
  2882  0276  3000               	movlw	0
  2883  0277  00B2               	movwf	??_tcInt+5
  2884  0278  3000               	movlw	0
  2885  0279  00B3               	movwf	??_tcInt+6
  2886  027A  3000               	movlw	0
  2887  027B  00B4               	movwf	??_tcInt+7
  2888  027C  0844               	movf	tcInt@ratio,w
  2889  027D  07B1               	addwf	??_tcInt+4,f
  2890  027E  0845               	movf	tcInt@ratio+1,w
  2891  027F  1803               	skipnc
  2892  0280  0F45               	incfsz	tcInt@ratio+1,w
  2893  0281  2A83               	goto	u93_20
  2894  0282  2A84               	goto	u93_21
  2895  0283                     u93_20:
  2896  0283  07B2               	addwf	??_tcInt+5,f
  2897  0284                     u93_21:
  2898  0284  0846               	movf	tcInt@ratio+2,w
  2899  0285  1803               	skipnc
  2900  0286  0F46               	incfsz	tcInt@ratio+2,w
  2901  0287  2A89               	goto	u93_22
  2902  0288  2A8A               	goto	u93_23
  2903  0289                     u93_22:
  2904  0289  07B3               	addwf	??_tcInt+6,f
  2905  028A                     u93_23:
  2906  028A  0847               	movf	tcInt@ratio+3,w
  2907  028B  1803               	skipnc
  2908  028C  0A47               	incf	tcInt@ratio+3,w
  2909  028D  07B4               	addwf	??_tcInt+7,f
  2910  028E  0834               	movf	??_tcInt+7,w
  2911  028F  00F3               	movwf	___lmul@multiplier+3
  2912  0290  0833               	movf	??_tcInt+6,w
  2913  0291  00F2               	movwf	___lmul@multiplier+2
  2914  0292  0832               	movf	??_tcInt+5,w
  2915  0293  00F1               	movwf	___lmul@multiplier+1
  2916  0294  0831               	movf	??_tcInt+4,w
  2917  0295  00F0               	movwf	___lmul@multiplier
  2918  0296  0853               	movf	_frequenza_x10000+3,w	;volatile
  2919  0297  00F7               	movwf	___lmul@multiplicand+3
  2920  0298  0852               	movf	_frequenza_x10000+2,w	;volatile
  2921  0299  00F6               	movwf	___lmul@multiplicand+2
  2922  029A  0851               	movf	_frequenza_x10000+1,w	;volatile
  2923  029B  00F5               	movwf	___lmul@multiplicand+1
  2924  029C  0850               	movf	_frequenza_x10000,w	;volatile
  2925  029D  00F4               	movwf	___lmul@multiplicand
  2926  029E  2731               	fcall	___lmul
  2927  029F  0870               	movf	?___lmul,w
  2928  02A0  1283               	bcf	3,5	;RP0=0, select bank0
  2929  02A1  1303               	bcf	3,6	;RP1=0, select bank0
  2930  02A2  073C               	addwf	tcInt@frequenza_x10000_temp,w
  2931  02A3  00B5               	movwf	??_tcInt+8
  2932  02A4  3000               	movlw	0
  2933  02A5  1803               	skipnc
  2934  02A6  3001               	movlw	1
  2935  02A7  0771               	addwf	?___lmul+1,w
  2936  02A8  01B7               	clrf	??_tcInt+10
  2937  02A9  1803               	skipnc
  2938  02AA  0AB7               	incf	??_tcInt+10,f
  2939  02AB  073D               	addwf	tcInt@frequenza_x10000_temp+1,w
  2940  02AC  00B6               	movwf	??_tcInt+9
  2941  02AD  1803               	skipnc
  2942  02AE  0AB7               	incf	??_tcInt+10,f
  2943  02AF  0872               	movf	?___lmul+2,w
  2944  02B0  0737               	addwf	??_tcInt+10,w
  2945  02B1  01B8               	clrf	??_tcInt+11
  2946  02B2  1803               	skipnc
  2947  02B3  0AB8               	incf	??_tcInt+11,f
  2948  02B4  073E               	addwf	tcInt@frequenza_x10000_temp+2,w
  2949  02B5  00B7               	movwf	??_tcInt+10
  2950  02B6  1803               	skipnc
  2951  02B7  0AB8               	incf	??_tcInt+11,f
  2952  02B8  0873               	movf	?___lmul+3,w
  2953  02B9  0738               	addwf	??_tcInt+11,w
  2954  02BA  073F               	addwf	tcInt@frequenza_x10000_temp+3,w
  2955  02BB  00B8               	movwf	??_tcInt+11
  2956  02BC  0838               	movf	??_tcInt+11,w
  2957  02BD  00A7               	movwf	i1___lldiv@dividend+3
  2958  02BE  0837               	movf	??_tcInt+10,w
  2959  02BF  00A6               	movwf	i1___lldiv@dividend+2
  2960  02C0  0836               	movf	??_tcInt+9,w
  2961  02C1  00A5               	movwf	i1___lldiv@dividend+1
  2962  02C2  0835               	movf	??_tcInt+8,w
  2963  02C3  00A4               	movwf	i1___lldiv@dividend
  2964  02C4  261F               	fcall	i1___lldiv
  2965  02C5  1283               	bcf	3,5	;RP0=0, select bank0
  2966  02C6  1303               	bcf	3,6	;RP1=0, select bank0
  2967  02C7  0823               	movf	?i1___lldiv+3,w
  2968  02C8  00D3               	movwf	_frequenza_x10000+3	;volatile
  2969  02C9  0822               	movf	?i1___lldiv+2,w
  2970  02CA  00D2               	movwf	_frequenza_x10000+2	;volatile
  2971  02CB  0821               	movf	?i1___lldiv+1,w
  2972  02CC  00D1               	movwf	_frequenza_x10000+1	;volatile
  2973  02CD  0820               	movf	?i1___lldiv,w
  2974  02CE  00D0               	movwf	_frequenza_x10000	;volatile
  2975  02CF                     i1l72:
  2976  02CF  1283               	bcf	3,5	;RP0=0, select bank0
  2977  02D0  1303               	bcf	3,6	;RP1=0, select bank0
  2978  02D1  083B               	movf	??_tcInt+14,w
  2979  02D2  00FF               	movwf	btemp+1
  2980  02D3  083A               	movf	??_tcInt+13,w
  2981  02D4  008A               	movwf	10
  2982  02D5  0E39               	swapf	??_tcInt+12,w
  2983  02D6  0083               	movwf	3
  2984  02D7  0EFE               	swapf	btemp,f
  2985  02D8  0E7E               	swapf	btemp,w
  2986  02D9  0009               	retfie
  2987  02DA                     __end_of_tcInt:
  2988                           
  2989                           	psect	intentry
  2990  0004                     __pintentry:	
  2991                           ;incstack = 0
  2992                           ; Regs used in _tcInt: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  2993                           
  2994  0004                     interrupt_function:
  2995  007E                     saved_w	set	btemp
  2996  0004  00FE               	movwf	btemp
  2997  0005  0E03               	swapf	3,w
  2998  0006  1283               	bcf	3,5	;RP0=0, select bank0
  2999  0007  1303               	bcf	3,6	;RP1=0, select bank0
  3000  0008  00B9               	movwf	??_tcInt+12
  3001  0009  080A               	movf	10,w
  3002  000A  00BA               	movwf	??_tcInt+13
  3003  000B  087F               	movf	btemp+1,w
  3004  000C  00BB               	movwf	??_tcInt+14
  3005  000D  281A               	ljmp	_tcInt
  3006                           
  3007                           	psect	text7
  3008  061F                     __ptext7:	
  3009 ;; *************** function i1___lldiv *****************
  3010 ;; Defined at:
  3011 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\__lldiv.c"
  3012 ;; Parameters:    Size  Location     Type
  3013 ;;  divisor         4    0[BANK0 ] unsigned long 
  3014 ;;  dividend        4    4[BANK0 ] unsigned long 
  3015 ;; Auto vars:     Size  Location     Type
  3016 ;;  quotient        4    8[BANK0 ] unsigned long 
  3017 ;;  counter         1   12[BANK0 ] unsigned char 
  3018 ;; Return value:  Size  Location     Type
  3019 ;;                  4    0[BANK0 ] unsigned long 
  3020 ;; Registers used:
  3021 ;;		wreg, status,2, status,0
  3022 ;; Tracked objects:
  3023 ;;		On entry : 0/0
  3024 ;;		On exit  : 0/0
  3025 ;;		Unchanged: 0/0
  3026 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3027 ;;      Params:         0       8       0       0
  3028 ;;      Locals:         0       5       0       0
  3029 ;;      Temps:          1       0       0       0
  3030 ;;      Totals:         1      13       0       0
  3031 ;;Total ram usage:       14 bytes
  3032 ;; Hardware stack levels used: 1
  3033 ;; This function calls:
  3034 ;;		Nothing
  3035 ;; This function is called by:
  3036 ;;		_tcInt
  3037 ;; This function uses a non-reentrant model
  3038 ;;
  3039                           
  3040                           
  3041                           ;psect for function i1___lldiv
  3042  061F                     i1___lldiv:
  3043  061F                     i1l1333:	
  3044                           ;incstack = 0
  3045                           ; Regs used in i1___lldiv: [wreg+status,2+status,0]
  3046                           
  3047  061F  3000               	movlw	0
  3048  0620  1283               	bcf	3,5	;RP0=0, select bank0
  3049  0621  1303               	bcf	3,6	;RP1=0, select bank0
  3050  0622  00AB               	movwf	i1___lldiv@quotient+3
  3051  0623  3000               	movlw	0
  3052  0624  00AA               	movwf	i1___lldiv@quotient+2
  3053  0625  3000               	movlw	0
  3054  0626  00A9               	movwf	i1___lldiv@quotient+1
  3055  0627  3000               	movlw	0
  3056  0628  00A8               	movwf	i1___lldiv@quotient
  3057  0629  0823               	movf	i1___lldiv@divisor+3,w
  3058  062A  0422               	iorwf	i1___lldiv@divisor+2,w
  3059  062B  0421               	iorwf	i1___lldiv@divisor+1,w
  3060  062C  0420               	iorwf	i1___lldiv@divisor,w
  3061  062D  1903               	skipnz
  3062  062E  2E30               	goto	u71_21
  3063  062F  2E31               	goto	u71_20
  3064  0630                     u71_21:
  3065  0630  2E7E               	goto	i1l1353
  3066  0631                     u71_20:
  3067  0631                     i1l1335:
  3068  0631  01AC               	clrf	i1___lldiv@counter
  3069  0632  0AAC               	incf	i1___lldiv@counter,f
  3070  0633  2E41               	goto	i1l1339
  3071  0634                     i1l1337:
  3072  0634  3001               	movlw	1
  3073  0635  00FD               	movwf	??i1___lldiv
  3074  0636                     u72_25:
  3075  0636  1003               	clrc
  3076  0637  0DA0               	rlf	i1___lldiv@divisor,f
  3077  0638  0DA1               	rlf	i1___lldiv@divisor+1,f
  3078  0639  0DA2               	rlf	i1___lldiv@divisor+2,f
  3079  063A  0DA3               	rlf	i1___lldiv@divisor+3,f
  3080  063B  0BFD               	decfsz	??i1___lldiv,f
  3081  063C  2E36               	goto	u72_25
  3082  063D  3001               	movlw	1
  3083  063E  00FD               	movwf	??i1___lldiv
  3084  063F  087D               	movf	??i1___lldiv,w
  3085  0640  07AC               	addwf	i1___lldiv@counter,f
  3086  0641                     i1l1339:
  3087  0641  1FA3               	btfss	i1___lldiv@divisor+3,7
  3088  0642  2E44               	goto	u73_21
  3089  0643  2E45               	goto	u73_20
  3090  0644                     u73_21:
  3091  0644  2E34               	goto	i1l1337
  3092  0645                     u73_20:
  3093  0645                     i1l1341:
  3094  0645  3001               	movlw	1
  3095  0646  00FD               	movwf	??i1___lldiv
  3096  0647                     u74_25:
  3097  0647  1003               	clrc
  3098  0648  0DA8               	rlf	i1___lldiv@quotient,f
  3099  0649  0DA9               	rlf	i1___lldiv@quotient+1,f
  3100  064A  0DAA               	rlf	i1___lldiv@quotient+2,f
  3101  064B  0DAB               	rlf	i1___lldiv@quotient+3,f
  3102  064C  0BFD               	decfsz	??i1___lldiv,f
  3103  064D  2E47               	goto	u74_25
  3104  064E                     i1l1343:
  3105  064E  0823               	movf	i1___lldiv@divisor+3,w
  3106  064F  0227               	subwf	i1___lldiv@dividend+3,w
  3107  0650  1D03               	skipz
  3108  0651  2E5C               	goto	u75_25
  3109  0652  0822               	movf	i1___lldiv@divisor+2,w
  3110  0653  0226               	subwf	i1___lldiv@dividend+2,w
  3111  0654  1D03               	skipz
  3112  0655  2E5C               	goto	u75_25
  3113  0656  0821               	movf	i1___lldiv@divisor+1,w
  3114  0657  0225               	subwf	i1___lldiv@dividend+1,w
  3115  0658  1D03               	skipz
  3116  0659  2E5C               	goto	u75_25
  3117  065A  0820               	movf	i1___lldiv@divisor,w
  3118  065B  0224               	subwf	i1___lldiv@dividend,w
  3119  065C                     u75_25:
  3120  065C  1C03               	skipc
  3121  065D  2E5F               	goto	u75_21
  3122  065E  2E60               	goto	u75_20
  3123  065F                     u75_21:
  3124  065F  2E6F               	goto	i1l1349
  3125  0660                     u75_20:
  3126  0660                     i1l1345:
  3127  0660  0820               	movf	i1___lldiv@divisor,w
  3128  0661  02A4               	subwf	i1___lldiv@dividend,f
  3129  0662  0821               	movf	i1___lldiv@divisor+1,w
  3130  0663  1C03               	skipc
  3131  0664  0F21               	incfsz	i1___lldiv@divisor+1,w
  3132  0665  02A5               	subwf	i1___lldiv@dividend+1,f
  3133  0666  0822               	movf	i1___lldiv@divisor+2,w
  3134  0667  1C03               	skipc
  3135  0668  0F22               	incfsz	i1___lldiv@divisor+2,w
  3136  0669  02A6               	subwf	i1___lldiv@dividend+2,f
  3137  066A  0823               	movf	i1___lldiv@divisor+3,w
  3138  066B  1C03               	skipc
  3139  066C  0F23               	incfsz	i1___lldiv@divisor+3,w
  3140  066D  02A7               	subwf	i1___lldiv@dividend+3,f
  3141  066E                     i1l1347:
  3142  066E  1428               	bsf	i1___lldiv@quotient,0
  3143  066F                     i1l1349:
  3144  066F  3001               	movlw	1
  3145  0670                     u76_25:
  3146  0670  1003               	clrc
  3147  0671  0CA3               	rrf	i1___lldiv@divisor+3,f
  3148  0672  0CA2               	rrf	i1___lldiv@divisor+2,f
  3149  0673  0CA1               	rrf	i1___lldiv@divisor+1,f
  3150  0674  0CA0               	rrf	i1___lldiv@divisor,f
  3151  0675  3EFF               	addlw	-1
  3152  0676  1D03               	skipz
  3153  0677  2E70               	goto	u76_25
  3154  0678                     i1l1351:
  3155  0678  3001               	movlw	1
  3156  0679  02AC               	subwf	i1___lldiv@counter,f
  3157  067A  1D03               	btfss	3,2
  3158  067B  2E7D               	goto	u77_21
  3159  067C  2E7E               	goto	u77_20
  3160  067D                     u77_21:
  3161  067D  2E45               	goto	i1l1341
  3162  067E                     u77_20:
  3163  067E                     i1l1353:
  3164  067E  082B               	movf	i1___lldiv@quotient+3,w
  3165  067F  00A3               	movwf	?i1___lldiv+3
  3166  0680  082A               	movf	i1___lldiv@quotient+2,w
  3167  0681  00A2               	movwf	?i1___lldiv+2
  3168  0682  0829               	movf	i1___lldiv@quotient+1,w
  3169  0683  00A1               	movwf	?i1___lldiv+1
  3170  0684  0828               	movf	i1___lldiv@quotient,w
  3171  0685  00A0               	movwf	?i1___lldiv
  3172  0686                     i1l249:
  3173  0686  0008               	return
  3174  0687                     __end_ofi1___lldiv:
  3175                           
  3176                           	psect	text8
  3177  0731                     __ptext8:	
  3178 ;; *************** function ___lmul *****************
  3179 ;; Defined at:
  3180 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\Umul32.c"
  3181 ;; Parameters:    Size  Location     Type
  3182 ;;  multiplier      4    0[COMMON] unsigned long 
  3183 ;;  multiplicand    4    4[COMMON] unsigned long 
  3184 ;; Auto vars:     Size  Location     Type
  3185 ;;  product         4    9[COMMON] unsigned long 
  3186 ;; Return value:  Size  Location     Type
  3187 ;;                  4    0[COMMON] unsigned long 
  3188 ;; Registers used:
  3189 ;;		wreg, status,2, status,0
  3190 ;; Tracked objects:
  3191 ;;		On entry : 0/0
  3192 ;;		On exit  : 0/0
  3193 ;;		Unchanged: 0/0
  3194 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3195 ;;      Params:         8       0       0       0
  3196 ;;      Locals:         4       0       0       0
  3197 ;;      Temps:          1       0       0       0
  3198 ;;      Totals:        13       0       0       0
  3199 ;;Total ram usage:       13 bytes
  3200 ;; Hardware stack levels used: 1
  3201 ;; This function calls:
  3202 ;;		Nothing
  3203 ;; This function is called by:
  3204 ;;		_tcInt
  3205 ;; This function uses a non-reentrant model
  3206 ;;
  3207                           
  3208                           
  3209                           ;psect for function ___lmul
  3210  0731                     ___lmul:
  3211  0731                     i1l1319:	
  3212                           ;incstack = 0
  3213                           ; Regs used in ___lmul: [wreg+status,2+status,0]
  3214                           
  3215  0731  3000               	movlw	0
  3216  0732  00FC               	movwf	___lmul@product+3
  3217  0733  3000               	movlw	0
  3218  0734  00FB               	movwf	___lmul@product+2
  3219  0735  3000               	movlw	0
  3220  0736  00FA               	movwf	___lmul@product+1
  3221  0737  3000               	movlw	0
  3222  0738  00F9               	movwf	___lmul@product
  3223  0739                     i1l1321:
  3224  0739  1C70               	btfss	___lmul@multiplier,0
  3225  073A  2F3C               	goto	u66_21
  3226  073B  2F3D               	goto	u66_20
  3227  073C                     u66_21:
  3228  073C  2F54               	goto	i1l1325
  3229  073D                     u66_20:
  3230  073D                     i1l1323:
  3231  073D  0874               	movf	___lmul@multiplicand,w
  3232  073E  07F9               	addwf	___lmul@product,f
  3233  073F  0875               	movf	___lmul@multiplicand+1,w
  3234  0740  1103               	clrz
  3235  0741  1803               	skipnc
  3236  0742  3E01               	addlw	1
  3237  0743  1903               	skipnz
  3238  0744  2F46               	goto	u67_21
  3239  0745  07FA               	addwf	___lmul@product+1,f
  3240  0746                     u67_21:
  3241  0746  0876               	movf	___lmul@multiplicand+2,w
  3242  0747  1103               	clrz
  3243  0748  1803               	skipnc
  3244  0749  3E01               	addlw	1
  3245  074A  1903               	skipnz
  3246  074B  2F4D               	goto	u67_22
  3247  074C  07FB               	addwf	___lmul@product+2,f
  3248  074D                     u67_22:
  3249  074D  0877               	movf	___lmul@multiplicand+3,w
  3250  074E  1103               	clrz
  3251  074F  1803               	skipnc
  3252  0750  3E01               	addlw	1
  3253  0751  1903               	skipnz
  3254  0752  2F54               	goto	u67_23
  3255  0753  07FC               	addwf	___lmul@product+3,f
  3256  0754                     u67_23:
  3257  0754                     i1l1325:
  3258  0754  3001               	movlw	1
  3259  0755  00F8               	movwf	??___lmul
  3260  0756                     u68_25:
  3261  0756  1003               	clrc
  3262  0757  0DF4               	rlf	___lmul@multiplicand,f
  3263  0758  0DF5               	rlf	___lmul@multiplicand+1,f
  3264  0759  0DF6               	rlf	___lmul@multiplicand+2,f
  3265  075A  0DF7               	rlf	___lmul@multiplicand+3,f
  3266  075B  0BF8               	decfsz	??___lmul,f
  3267  075C  2F56               	goto	u68_25
  3268  075D                     i1l1327:
  3269  075D  3001               	movlw	1
  3270  075E                     u69_25:
  3271  075E  1003               	clrc
  3272  075F  0CF3               	rrf	___lmul@multiplier+3,f
  3273  0760  0CF2               	rrf	___lmul@multiplier+2,f
  3274  0761  0CF1               	rrf	___lmul@multiplier+1,f
  3275  0762  0CF0               	rrf	___lmul@multiplier,f
  3276  0763  3EFF               	addlw	-1
  3277  0764  1D03               	skipz
  3278  0765  2F5E               	goto	u69_25
  3279  0766  0873               	movf	___lmul@multiplier+3,w
  3280  0767  0472               	iorwf	___lmul@multiplier+2,w
  3281  0768  0471               	iorwf	___lmul@multiplier+1,w
  3282  0769  0470               	iorwf	___lmul@multiplier,w
  3283  076A  1D03               	skipz
  3284  076B  2F6D               	goto	u70_21
  3285  076C  2F6E               	goto	u70_20
  3286  076D                     u70_21:
  3287  076D  2F39               	goto	i1l1321
  3288  076E                     u70_20:
  3289  076E                     i1l1329:
  3290  076E  087C               	movf	___lmul@product+3,w
  3291  076F  00F3               	movwf	?___lmul+3
  3292  0770  087B               	movf	___lmul@product+2,w
  3293  0771  00F2               	movwf	?___lmul+2
  3294  0772  087A               	movf	___lmul@product+1,w
  3295  0773  00F1               	movwf	?___lmul+1
  3296  0774  0879               	movf	___lmul@product,w
  3297  0775  00F0               	movwf	?___lmul
  3298  0776                     i1l227:
  3299  0776  0008               	return
  3300  0777                     __end_of___lmul:
  3301  007E                     btemp	set	126	;btemp
  3302  007E                     wtemp0	set	126
  3303                           
  3304                           	psect	config
  3305                           
  3306                           ;Config register CONFIG @ 0x2007
  3307                           ;	Oscillator Selection bits
  3308                           ;	FOSC = HS, HS oscillator: High-speed crystal/resonator on RA6/OSC2/CLKOUT and RA7/OSC1
      +                          /CLKIN
  3309                           ;	Watchdog Timer Enable bit
  3310                           ;	WDTE = OFF, WDT disabled
  3311                           ;	Power-up Timer Enable bit
  3312                           ;	PWRTE = ON, PWRT enabled
  3313                           ;	RA5/MCLR/VPP Pin Function Select bit
  3314                           ;	MCLRE = ON, RA5/MCLR/VPP pin function is MCLR
  3315                           ;	Brown-out Detect Enable bit
  3316                           ;	BOREN = ON, BOD enabled
  3317                           ;	Low-Voltage Programming Enable bit
  3318                           ;	LVP = OFF, RB4/PGM pin has digital I/O function, HV on MCLR must be used for programmi
      +                          ng
  3319                           ;	Data EE Memory Code Protection bit
  3320                           ;	CPD = OFF, Data memory code protection off
  3321                           ;	Flash Program Memory Code Protection bit
  3322                           ;	CP = OFF, Code protection off
  3323  2007                     	org	8199
  3324  2007  3F62               	dw	16226

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         48
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     40      72
    BANK1            80     28      44
    BANK2            48      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _tcInt in COMMON

    _tcInt->i1___lldiv
    i1___lldiv->___lmul

Critical Paths under _main in BANK0

    None.

Critical Paths under _tcInt in BANK0

    _tcInt->i1___lldiv

Critical Paths under _main in BANK1

    _main->_loop
    _loop->___lldiv

Critical Paths under _tcInt in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _tcInt in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0    4434
                                             26 BANK1      2     2      0
                               _loop
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _loop                                                12    10      2    4394
                                             14 BANK1     12    10      2
                            ___lldiv
                            ___llmod
                      _accendi_cifra
 ---------------------------------------------------------------------------------
 (2) _accendi_cifra                                        6     0      6    1443
                                              0 BANK1      6     0      6
 ---------------------------------------------------------------------------------
 (2) ___llmod                                             10     2      8     919
                                              0 BANK1     10     2      8
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             14     6      8    1522
                                              0 BANK1     14     6      8
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _tcInt                                               27    27      0    1769
                                             13 BANK0     27    27      0
                             ___lmul
                          i1___lldiv
 ---------------------------------------------------------------------------------
 (4) i1___lldiv                                           14     6      8     474
                                             13 COMMON     1     1      0
                                              0 BANK0     13     5      8
                             ___lmul (ARG)
 ---------------------------------------------------------------------------------
 (4) ___lmul                                              13     5      8    1004
                                              0 COMMON    13     5      8
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _loop
     ___lldiv
     ___llmod
     _accendi_cifra
   _setup

 _tcInt (ROOT)
   ___lmul
   i1___lldiv
     ___lmul (ARG)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA              80      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      E       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
BANK0               50     28      48       3       90.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      82       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50     1C      2C       7       55.0%
BITBANK2            30      0       0       8        0.0%
BANK2               30      0       0       9        0.0%
DATA                 0      0      82      10        0.0%


Microchip Technology PIC Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Sat Sep 23 13:43:20 2023

                        l96 05B6                          l99 0730                          fsr 0004  
                       l117 051B                         l249 061E                         l435 06DC  
                       u510 05DD                         _PR2 0092                         u511 05DC  
                       u505 05CE                         u530 05F8                         u610 06D4  
                       u531 05F7                         u611 06D3                         u525 05DF  
                       u605 06C6                         u550 0616                         u551 0615  
                       u535 05F4                         u560 0691                         u545 0608  
                       u561 0690                         u490 05C9                         u491 05C8  
                       u580 06A5                         u581 06A4                         u590 06B7  
                       u591 06B6                         u575 0696                         u595 06B3  
                       u950 05B3                         u951 05B2                         u960 02E2  
                       u961 02E1                         u970 033E                         u971 033D  
                       u980 0364                         u981 0363                         u973 033A  
                       u990 0388                         u991 0387                         u983 0360  
                       u993 0384                         indf 0000                        l1151 05CC  
                      l1161 0606                        l1153 05D9                        l1163 0607  
                      l1155 05DD                        l1147 05B7                        l1171 0687  
                      l1165 0610                        l1157 05E6                        l1149 05C9  
                      l1181 06B7                        l1173 0691                        l1501 057B  
                      l1159 05F8                        l1167 0616                        l1183 06C5  
                      l1175 0694                        l1511 05B3                        l1503 0580  
                      l1185 06CE                        l1177 06A1                        l1601 03A7  
                      l1521 06DD                        l1179 06A5                        l1187 06D4  
                      l1507 0584                        l1611 03BE                        l1531 06E5  
                      l1523 06E1                        l1509 05AB                        l1621 0420  
                      l1613 03D5                        l1605 03AC                        l1541 06EA  
                      l1533 06E6                        l1525 06E2                        l1703 0540  
                      l1471 0525                        l1631 0478                        l1623 042C  
                      l1615 03E1                        l1607 03B6                        l1551 0705  
                      l1543 06EF                        l1535 06E7                        l1527 06E3  
                      l1705 058B                        l1473 052A                        l1481 0539  
                      l1641 04CF                        l1633 0483                        l1625 0437  
                      l1617 03EC                        l1609 03B8                        l1561 071D  
                      l1553 0706                        l1545 06F3                        l1537 06E8  
                      l1529 06E4                        l1491 0562                        l1483 054E  
                      l1475 052F                        l1467 051C                        l1643 04EC  
                      l1635 04A0                        l1627 0454                        l1619 0409  
                      l1571 02E2                        l1563 0725                        l1555 070A  
                      l1547 06F7                        l1539 06E9                        l1651 077B  
                      l1493 0567                        l1485 0553                        l1477 0534  
                      l1469 0520                        l1645 0503                        l1637 04B7  
                      l1629 046B                        l1581 0348                        l1573 02E3  
                      l1565 0727                        l1557 0714                        l1549 06FA  
                      l1661 079C                        l1653 077C                        l1495 056C  
                      l1487 0558                        l1647 0510                        l1639 04C4  
                      l1583 034A                        l1575 032B                        l1567 072F  
                      l1559 0715                        l1655 0784                        l1497 0571  
                      l1489 055D                        l1585 034C                        l1577 032C  
                      l1569 02DA                        l1657 0791                        l1649 0777  
                      l1499 0576                        l1595 0373                        l1579 033E  
                      l1587 034F                        l1659 0798                        l1597 0388  
                      l1589 0364                        l1599 03A5                        u1000 0791  
                      u1001 0790                        u1005 078D                        u1017 03E7  
                      u1027 0432                        u1037 047E                        u1047 04CA  
                      u1057 0516                        i1l72 02CF                        _TMR0 0001  
         i1___lldiv@divisor 0020                        _main 0777      tcInt@frequenza_x1_temp 0040  
                      _loop 02DA                        btemp 007E           i1___lldiv@counter 002C  
                      start 000E                       ?_main 0070                       ?_loop 00AE  
           __end_of___lldiv 061F             __end_of___llmod 06DD                       i1l227 0776  
                     i1l249 0686                       _PORTA 0005                       _PORTB 0006  
                     u70_20 076E                       u70_21 076D                       u71_20 0631  
                     u71_21 0630                       u80_20 0037                       u80_21 0036  
                     u72_25 0636                       u73_20 0645                       u81_20 003D  
                     u73_21 0644                       u81_21 003C                       _TRISA 0085  
                     _TRISB 0086                       u66_20 073D                       u90_20 0217  
                     u82_20 0051                       u66_21 073C                       u90_21 0216  
                     u82_21 0050                       u90_23 0213                       u74_25 0647  
                     u82_25 004D                       u75_20 0660                       u91_20 022A  
                     u83_20 0067                       u67_21 0746                       u75_21 065F  
                     u91_21 0229                       u83_21 0068                       u67_22 074D  
                     u83_22 006D                       u67_23 0754                       u91_23 0226  
                     u83_23 006E                       u75_25 065C                       u92_20 0261  
                     u92_21 0262                       u84_21 008A                       u92_22 0267  
                     u84_22 008B                       u92_23 0268                       u84_23 0090  
                     u84_24 0091                       u68_25 0756                       u76_25 0670  
                     u84_25 0096                       u84_26 0097                       u77_20 067E  
                     u93_20 0283                       u85_20 00E6                       u77_21 067D  
                     u93_21 0284                       u85_21 00E5                       u93_22 0289  
                     u93_23 028A                       u85_23 00E2                       u69_25 075E  
                     u86_20 00F9                       u78_20 001E                       u86_21 00F8  
                     u78_21 001D                       u86_23 00F5                       u87_20 0156  
                     u79_20 0022                       u87_21 0157                       u79_21 0021  
                     u87_22 015C                       u87_23 015D                       u88_20 0191  
                     u88_21 0190                       u88_23 018D                       u89_20 01AE  
                     u89_21 01AD                       u89_25 01AA         ___lmul@multiplicand 0074  
        i1___lldiv@dividend 0024                       _tcInt 001A      __size_of_accendi_cifra 009B  
                     _setup 06DD                       main@n 00BA                       pclath 000A  
                     loop@f 00C8                       status 0003                       wtemp0 007E  
        __size_ofi1___lldiv 0068             __initialization 000F                __end_of_main 07A3  
              __end_of_loop 051C          i1___lldiv@quotient 0028                      ??_main 00BA  
                    ??_loop 00B0                      ?_tcInt 0070            ___llmod@dividend 00A4  
                    ?_setup 0070                      i1l1321 0739                      i1l1401 01D1  
                    i1l1323 073D                      i1l1403 0206                      i1l1325 0754  
                    i1l1341 0645                      i1l1333 061F                      i1l1405 0217  
                    i1l1327 075D                      i1l1319 0731                      i1l1351 0678  
                    i1l1343 064E                      i1l1335 0631                      i1l1407 022A  
                    i1l1329 076E                      i1l1345 0660                      i1l1337 0634  
                    i1l1353 067E                      i1l1409 0235                      i1l1361 0022  
                    i1l1347 066E                      i1l1339 0641                      i1l1371 003E  
                    i1l1363 0023                      i1l1349 066F                      i1l1381 00D5  
                    i1l1373 0044                      i1l1365 0031                      i1l1357 001A  
                    i1l1391 017C                      i1l1383 00E6                      i1l1375 0051  
                    i1l1367 0037                      i1l1359 001E                      i1l1385 00F9  
                    i1l1377 009F                      i1l1393 017E                      i1l1369 003D  
                    i1l1395 0191                      i1l1387 0117                      i1l1379 00CD  
                    i1l1397 01AE                      i1l1389 0174                      i1l1399 01C9  
                    _TMR0IE 005D                      _TMR0IF 005A                      _TMR2IE 0461  
                    _TMR2IF 0061  tcInt@frequenza_x10000_temp 003C                      _t0_ovl 005C  
                    ___lmul 0731               _accendi_cifra 051C                   ??___lldiv 00A8  
                 ??___llmod 00A8           __end_ofi1___lldiv 0687                      saved_w 007E  
   __end_of__initialization 0018              __pcstackCOMMON 0070              ?_accendi_cifra 00A0  
             __end_of_tcInt 02DA               __end_of_setup 0731              _OPTION_REGbits 0081  
                   ??_tcInt 002D                     ??_setup 00A0                  __pbssBANK0 0048  
                __pbssBANK1 00BC                 loop@refresh 00AE                  __pmaintext 0777  
                   ?___lmul 0070                  __pintentry 0004              ___lmul@product 0079  
           ??_accendi_cifra 00A6                     _t0_prec 0062             __size_of___lmul 0046  
                   ___lldiv 05B7                     ___llmod 0687                   _CMCONbits 001F  
                   __ptext1 06DD                     __ptext2 02DA                     __ptext3 051C  
                   __ptext4 0687                     __ptext5 05B7                     __ptext6 001A  
                   __ptext7 061F                     __ptext8 0731                   _T2CONbits 0012  
                   clrloop0 07A4        end_of_initialization 0018                     loop@dp1 00B2  
                   loop@dp2 00B4                     loop@dp3 00B6             ___lldiv@divisor 00A0  
           ___lldiv@counter 00AD              _frequenza_x100 004C                   _PORTBbits 0006  
                 i1___lldiv 061F      accendi_cifra@posizione 00A0              __end_of___lmul 0777  
                tcInt@ratio 0044         start_initialization 000F                  ?i1___lldiv 0020  
              loop@f_x10000 00BC             ___llmod@divisor 00A0             ___llmod@counter 00A9  
             _periodo_lento 0064                    ??___lmul 0078                _frequenza_x1 0048  
                 ___latbits 0000               __pcstackBANK0 0020               __pcstackBANK1 00A0  
      accendi_cifra@virgola 00A4                  loop@f_x100 00C0                    ?___lldiv 00A0  
                  ?___llmod 00A0                 ??i1___lldiv 007D              __size_of_tcInt 02C0  
            __size_of_setup 0054           interrupt_function 0004                _millisecondi 0060  
                 clear_ram0 07A3                    _PIE1bits 008C                    _PIR1bits 000C  
     __end_of_accendi_cifra 05B7           ___lmul@multiplier 0070               _t0_gross_prec 0054  
                  _t0_gross 0058            __size_of___lldiv 0068            __size_of___llmod 0056  
                 loop@cifra 00B8               __size_of_main 002C               __size_of_loop 0242  
          _frequenza_x10000 0050                  _INTCONbits 000B          accendi_cifra@cifra 00A2  
                  loop@f_x1 00C4                    intlevel1 0000            ___lldiv@dividend 00A4  
          ___lldiv@quotient 00A9  
